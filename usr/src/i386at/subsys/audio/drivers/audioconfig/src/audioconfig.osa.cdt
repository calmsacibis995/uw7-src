set sco_audiocard_CDT(attributes) {
    {
        unit
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Soundcard unit number} }
        }
    }
    {
        manufacturer
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Soundcard or chip manufacturer} }
        }
    }
    {
        model
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Soundcard or chip model} }
        }
    }
    {
        audio_io
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Primary I/O port range start} }
        }
    }
    {
        midi_io
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {MIDI I/O port range start} }
        }
    }
    {
        synth_io
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Synthesizer I/O port range start} }
        }
    }
    {
        primary_irq
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Primary interrupt request vector} }
        }
    }
    {
        secondary_irq
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Secondary interrupt request vector} }
        }
    }
    {
        primary_dma
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { syntax {} }
            { description {Primary direct memory access channel} }
        }
    }
    {
        secondary_dma
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {Secondary direct memory access channel} }
        }
    }
    {
        enabled_drivers
        {
            { validOperations {get replace} }
            { validFilters {} }
            { dataType set }
            { description {Drivers enabled for this device} }
        }
    }
    {
	ossid
	{
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {key in OSS database for this device} }
	}
    }
    {
	ossdevs
	{
            { validOperations {get replace} }
            { validFilters {} }
            { dataType set }
            { description {information mapping audinfo format to OSS format} }
	}
    }
    {
	bustype
	{
            { validOperations {get replace} }
            { validFilters {} }
            { dataType single }
            { description {bus type for this device} }
	}
    }
}

set sco_audiocard_CDT(groups) {}

set sco_audiocard_CDT(operations) {
    {
        get
        {
            { granularity perObject }
            { function audiocard_get }
        }
    }
    {
        replace
        {
            { granularity perObject }
            { function audiocard_replace }
        }
    }
    {
        create
        {
            { granularity perObject }
            { function audiocard_create }
        }
    }
    {
        delete
        {
            { granularity perObject }
            { function audiocard_delete }
        }
    }
    {
        list
        {
            { granularity perObject }
            { function audiocard_list }
        }
    }
}

set sco_audiocard_CDT(class) {sco audiocard}
set sco_audiocard_CDT(superior) {{sco audioconfig}}
set sco_audiocard_CDT(subordinates) {}

set sco_audioconfig_CDT(attributes) {
}

set sco_audioconfig_CDT(groups) {}

set sco_audioconfig_CDT(operations) {
    {
        get
        {
            { granularity perObject }
            { function audioconfig_get }
        }
    }
    {
        action
        {
            { granularity perObject }
            { function audioconfig_action }
        }
    }
}

set sco_audioconfig_CDT(class) {sco audioconfig}
set sco_audioconfig_CDT(superior) {}
set sco_audioconfig_CDT(subordinates) {{sco audiocard}}

