#ident	"@(#)cmd.vxva:vxvm-va/src/Makefile	1.7"
# Makefile generated by imake - do not edit!
# $XConsortium: imake.c /main/88 1995/12/08 16:33:13 gildea $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl /main/r61_main/3 1996/02/02 18:57:32 gildea $
#
#	@(#)Imake.tmpl	6.2	12/17/96	10:12:53

.SUFFIXES: .i

# $XConsortium: Imake.cf /main/22 1995/12/05 16:39:53 mor $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample /main/19 1995/12/14 13:03:29 matt $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit usl.cf to change

# platform:  $XConsortium: usl.cf /main/42 1996/01/22 17:37:55 gildea $
#	@(#)usl.cf	6.2	12/30/96	15:24:23

# operating system:  GEMINI SCO UNIX System V/386 Release 4.2 Version 2.1.x

# server architecture: nfb (Xsco)

#	Only config/imake uses this CppCmd and it should always
#	be the native Unixware cpp  (this is usl.cf, this is Unixware)

# Xidle Extension.  dtm uses it.

# Defines for Pulling in extensions. See miinitext.c file.

# @(#)uslLib.rules	6.1	12/10/96	17:58:14

# $XConsortium: svr4.cf /main/15 1995/10/03 17:31:30 kaleb $

# SCO: xsco.cf	@(#)xsco.cf	6.1	12/10/96	17:58:18

# SCO: xsco.rules	@(#)xsco.rules	6.1	12/10/96	17:58:20

        PKGTOP	= /opt/vxvm-va
        DYNADIR = $(LIBDIR)/dyddx
        GRAFDIR = $(USRLIBDIR)/grafinfo
         HDKTOP = /usr/src/ihvkit/display
      HDKINCDIR = $(HDKTOP)/X11
      HDKLIBDIR = $(HDKTOP)/usrlib
   HDKSERVERDIR = $(HDKTOP)/Xserver
HDKSERVERLIBDIR = $(HDKSERVERDIR)/lib
HDKSERVERINCDIR = $(HDKSERVERDIR)/include
      HDKDDXDIR = $(HDKSERVERDIR)/hw/sco
    HDKPORTSDIR = $(HDKDDXDIR)/ports
     HDKTESTDIR = $(HDKSERVERDIR)/tests

# $XConsortium: sv4Lib.rules /main/17 1995/12/01 18:31:40 kaleb $

# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample /main/19 1995/12/14 13:03:29 matt $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules /main/208 1996/01/17 11:08:27 kaleb $

#
#  Take InstallCatalogue and SaberProgramTarget from Imake.rules and
#  put in here since X Imakefiles don't use them
#

          PATHSEP = /
            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

            IMAKE = $(TOOLS)/usr/X11R6.1/bin/imake
           DEPEND = $(TOOLS)/usr/X11R6.1/bin/makedepend
        MKDIRHIER = $(TOOLS)/usr/X11R6.1/bin/mkdirhier
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend

          INCROOT = /usr/X11R6.1/include
        USRLIBDIR = /usr/X11R6.1/lib
         SHLIBDIR = /usr/X11R6.1/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/X11R6.1/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = $(PFX)ar rv
              ASM = $(SHELL) $(SERVERSRC)/tools/masm.sh
  BOOTSTRAPCFLAGS =
               CC = $(PFX)cc
              HCC = /bin/cc
               AS = $(PFX)as

         COMPRESS = compress
              CPP = /usr/ccs/lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = $(PFX)cc -E $(STD_CPP_DEFINES)
          INSTALL = $(TOOLS)/usr/X11R6.1/bin/bsdinst
     INSTALLFLAGS = -c
               LD = $(PFX)ld
              LEX = $(PFX)lex -l$(TOOLS)/usr/ccs/lib/lex/ncform
           LEXLIB = -ll
             YACC = $(PFX)yacc -p$(TOOLS)/usr/ccs/lib/yaccpar
           CCYACC = $(PFX)yacc -p$(TOOLS)/usr/ccs/lib/yaccpar
             LINT = $(PFX)lint
      LINTLIBFLAG = -o
         LINTOPTS = -bh
               LN = ln -s
             MAKE = $(PFX)make
               MV = mv
               CP = cp

               RM = rm -f
     ASM_INCLUDES =
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 4
            TROFF = troff
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES = -I$(ROOT)/$(MACH)/usr/include
    HSTD_INCLUDES = -I/usr/include
  STD_CPP_DEFINES = -Dusl -DUSL -DSVR4 -Di386
      STD_DEFINES = -Dusl -DUSL -DSVR4 -Di386
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS = -YP,$(TOOLS)/usr/lib:$(TOOLS)/usr/ccs/lib
  EXTRA_LIBRARIES = -lsocket -lnsl -lgen
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -G -z text

         PICFLAGS = -K PIC

      CXXPICFLAGS = -K PIC

    PROTO_DEFINES =  -DNARROWPROTO

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4711

      PROJECTROOT = /usr/X11R6.1

     TOP_INCLUDES = $(MOTIF_INCLUDES) -I$(TOOLS)$(INCROOT)

    ASMDEBUGFLAGS = -p -t -w2 -Ml
      ASM_DEFINES = -Di386
      CDEBUGFLAGS = -O
        CCOPTIONS = -Xa -Dasm=__asm -DANSICPP
        HCCOPTIONS = -Xa -Dasm=__asm -DANSICPP

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
     HALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(HSTD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
      HALLDEFINES = $(HALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
         ASMFLAGS = $(ASMDEBUGFLAGS) $(ASM_DEFINES) $(ASM_INCLUDES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
          HCFLAGS = $(CDEBUGFLAGS) $(HCCOPTIONS) $(THREADS_CFLAGS) $(HALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(TOOLS)$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
       HLDOPTIONS = $(CDEBUGFLAGS) $(HCCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

       CCENVSETUP = LD_RUN_PATH=$(PROJECTROOT)/lib

           CCLINK = $(CCENVSETUP) $(CC)

      CXXENVSETUP = LD_RUN_PATH=$(PROJECTROOT)/lib

          CXXLINK = $(CXXENVSETUP) $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = usl.cf
           RM_CMD = $(RM)

    MOTIF_IMAKE_DEFINES = -DBuildMotif -I$(ROOT)/usr/src/$(WORK)/subsys/motif/config

    XENV_IMAKE_DEFINES  = -DUSEXENV -DUSL

IMAKE_DEFINES = $(MOTIF_IMAKE_DEFINES) $(XENV_IMAKE_DEFINES)

         IRULESRC = $(TOOLS)$(CONFIGDIR)

        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XConsortium: Project.tmpl /main/r61_main/6 1996/01/15 12:26:59 gildea $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

           BINDIR = /usr/X11R6.1/bin
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
      BUILDLIBDIR = $(TOP)/usrlib
      BUILDLIBTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(TOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11

        SERVERSRC = $(TOP)/programs/Xserver
        SERVERTOP = ../..

       CONTRIBSRC = $(TOP)/../contrib
   UNSUPPORTEDSRC = $(TOP)/unsupported
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(TOP)/include/fonts
        EXTINCSRC = $(TOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

# $XConsortium: sv4Lib.tmpl,v 1.20 95/07/06 14:06:11 kaleb Exp $

XMULIBONLY = -lXmu

          XLIBSRC = $(LIBSRC)/X11

 SOXLIBREV = 6.1
 DEPXONLYLIB =
 XONLYLIB =  -lX11

 LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

 SOXEXTREV = 6.1
 DEPEXTENSIONLIB =
 EXTENSIONLIB =  -lXext

 LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

 DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
 XAUTHLIB =  -lXau

 LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

 DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
 XDMCPLIB =  -lXdmcp

 LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

 SOXMUREV = 6.0
 DEPXMULIB =
 XMULIB =  -lXmu

 LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

 SOOLDXREV = 6.0
 DEPOLDXLIB =
 OLDXLIB =  -loldX

 LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

       TOOLKITSRC = $(LIBSRC)/Xt

 SOXTREV = 6.0
 DEPXTOOLONLYLIB =
 XTOOLONLYLIB =  -lXt

 LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       AWIDGETSRC = $(LIBSRC)/Xaw

 SOXAWREV = 6.1
 DEPXAWLIB =
 XAWLIB =  -lXaw

 LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

         XILIBSRC = $(LIBSRC)/Xi

 SOXINPUTREV = 6.0
 DEPXILIB =
 XILIB =  -lXi

 LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

 SOXTESTREV = 6.1
 DEPXTESTLIB =
 XTESTLIB =  -lXtst

 LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

 SOPEXREV = 6.0
 DEPPEXLIB =
 PEXLIB =  -lPEX5

 LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

        XIELIBSRC = $(LIBSRC)/XIE

 SOXIEREV = 6.0
 DEPXIELIB =
 XIELIB =  -lXIE

 LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

 DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
 PHIGSLIB =  -lphigs

 LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

 DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
 XBSDLIB =  -lXbsd

 LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

 SOICEREV = 6.0
 DEPICELIB =
 ICELIB =  -lICE

 LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

 SOSMREV = 6.0
 DEPSMLIB =
 SMLIB =  -lSM

 LINTSM = $(LINTLIBDIR)/llib-lSM.ln

         FSLIBSRC = $(LIBSRC)/FS

 DEPFSLIB = $(USRLIBDIR)/libFS.a
 FSLIB =  -lFS

 LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

 DEPFONTLIB = $(USRLIBDIR)/libfont.a
 FONTLIB =  -lfont

 LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

 DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
 XKBFILELIB =  -lxkbfile

 LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

          SOXMREV = 1.2
          SODTREV = 1
         SOMRMREV = 1.2
         SOUILREV = 1.2
     SOACOMMONREV = 1.2
      SOSCRIPTREV = 1.2
        SOUTILREV = 1.2
      SOCREATEREV = 1.2
      SOVISUALREV = 1.2
       SOSYNTHREV = 1.2
     SOMCOMMONREV = 1.2

              XTOP = $(TOP)
              MTOP = $(TOP)/../subsys/motif
     XBUILDINCROOT = $(XTOP)
      XBUILDINCDIR = $(XBUILDINCROOT)/X11

        MBUILDINCTOP = ../../../X11R6
        MBUILDLIBTOP = ../../../X11R6
        MBUILDLIBDIR = $(MTOP)/usrlib
        MBUILDINCDIR = $(MTOP)/X11

         CLIENTSRC = $(XTOP)/clients
           DEMOSRC = $(XTOP)/demos
            LIBSRC = $(XTOP)/lib
           FONTSRC = $(XTOP)/fonts
        INCLUDESRC = $(XTOP)/X11
         SERVERSRC = $(XTOP)/server
           UTILSRC = $(XTOP)/util
        EXAMPLESRC = $(XTOP)/examples
            DOCSRC = $(XTOP)/doc
            RGBSRC = $(XTOP)/rgb
      EXTENSIONSRC = $(XTOP)/extensions

      MOTIF_INCLUDES =

      UIL_INCLUDES = -I$(UILSRC)

      USRINCDIR = /usr/X11R6.1/include
         UIDDIR = $(LIBDIR)/uid
        TESTSRC = $(MTOP)/tests
        TESTLIB = $(TESTSRC)/lib
  GENERALSRCLIB = $(TESTSRC)/General/lib
  GENERALSRCBIN = $(TESTSRC)/General/bin
   MANUALSRCLIB = $(TESTSRC)/Manual/lib
   MANUALSRCBIN = $(TESTSRC)/Manual/bin
     AUTOSRCLIB = $(TESTSRC)/Auto/lib
     AUTOSRCBIN = $(TESTSRC)/Auto/bin
       COMMONPP = $(GENERALSRCBIN)/Commonpp
         GENRUN = $(GENERALSRCBIN)/Genrun
         MANRUN = $(GENERALSRCBIN)/Manrun

     TESTCOMSRC = $(MANUALSRCLIB)/Common

    MTOOLKITSRC = $(TOOLKITSRC)
    MINCLUDESRC = $(MTOP)/X11
        MLIBSRC = $(MTOP)/lib
     MCLIENTSRC = $(MTOP)/clients
       MDEMOSRC = $(MTOP)/demos

     MWIDGETSRC = $(USRLIBDIR)

   MRESOURCESRC = $(MLIBSRC)/Mrm
         UILSRC = $(MCLIENTSRC)/uil

            UIL = $(UILSRC)/uil
         DEPUIL = $(UILSRC)/uil

   XMEXTRA_LIBS =

DEPXMLIB =
 XMLIB = -L$(MWIDGETSRC) -lXm

DEPDTLIB =
 DTLIB = -L$(MTOP)/ixi/ixi_lib/Dt -lDtWidget

DEPMRESOURCELIB =
 MRESOURCELIB = -L$(MRESOURCESRC) -lMrm

DEPUILLIB =
 UILLIB = -L$(UILSRC) -lUil

DEPTESTCOMLIB =
 TESTCOMLIB = -L$(TESTCOMSRC) -lCommon

  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

      YACCFLAGS =
       UILFLAGS =

         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  *.Dat

    STD_DEFINES = -Dusl -DUSL -DSVR4 -Di386  -DWINTIF -DSCHEMES_95

        DEPLIBS = $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB) $(DEPDTLIB)

        DEPLIBS1 = $(DEPLIBS)
        DEPLIBS2 = $(DEPLIBS)
        DEPLIBS3 = $(DEPLIBS)

 XMULIB = $(XMULIBONLY) -z nodefs

        CONFIGDIR = $(LIBDIR)/config
    XENVCONFIGDIR = $(TOOLS)$(USRLIBDIR)/X11/config

# ----------------------------------------------------------------------
# start of Imakefile

# $XConsortium: Imakefile /main/17 1996/01/14 16:50:54 kaleb $

VMHOME=$(TOOLS)/usr
LIBVXVM = -L$(ROOT)/$(MACH)/usr/lib -lvxvm
DEPLIBS = $(DEPMRESOURCELIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
LOCAL_LIBRARIES = $(MRESOURCELIB) $(XMLIB)  $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB) $(LIBVXVM) -lXmu
# SYS_LIBRARIES = -lgen -lnsl -lsocket $(LIBVXVM) -lXmu
# LOCAL_LIBRARIES = $(LIBVXVM) -lXmu
# EXTRA_LIBRARIES = $(LIBVXVM) -lXmu

INCLUDES = -I./ -I$(LIBSRC) -I$(VMHOME)/include -I$(VMHOME)/include/vxvm

DEFINES=-DVA_I18N -DVXVM_NSTRIPE -DESMP -DINODE_LIMIT -DUSE_VERITAS_ICON \
	-DUSE_GETTXT -DODM -DPKGTOP=\"$(PKGTOP)\"

# Pick a probe file as the key of restricted source
PROBEFILE = vxva.c
MAKEFILE = Makefile

     PROG1 = vxva
     SRCS1 =  \
	Box.c \
	Disk.c \
	Part.c \
	Plex.c \
	Sd.c \
	Vmdisk.c \
	Vol.c \
	analConfig.c \
	analForm.c \
	analOps.c \
	analParms.c \
	analUtil.c \
	centraldb.c \
	cmdFork.c \
	cmdGen.c \
	cmdInfo.c \
	cmdOps.c \
	configOps.c \
	create_vfs.c \
	crtlib.c \
	dgDisk.c \
	dgOps.c \
	dgPort.c \
	diskPerm.c \
	diskTrack.c \
	diskinfo.c \
	dmPerm.c \
	drag.c \
	drop.c \
	dropOps.c \
	ezDinit.c \
	ezDreplace.c \
	ezLog.c \
	ezMirror.c \
	ezSnapshot.c \
	ezVremove.c \
	ezVresize.c \
	fields.c \
	formUtil.c \
	formlib.c \
	fsDefrag.c \
	fsMenu.c \
	fsMkMnt.c \
	fsResize.c \
	fsSnap.c \
	fsUmount.c \
	fslib.c \
	hashClass.c \
	help.c \
	iconClass.c \
	iconCreate.c \
	iconInfo.c \
	iconOps.c \
	iconState.c \
	iconWidget.c \
	listClass.c \
	mkMenuBar.c \
	mouse.c \
	notice.c \
	oolib.c \
	partPerm.c \
	plexCreate.c \
	plexOps2.c \
	plexPerm.c \
	projConfig.c \
	projMenu.c \
	projOps.c \
	rootWin.c \
	sdCreate.c \
	sdOps.c \
	sdOps2.c \
	sdPerm.c \
	sdSplit.c \
	sdTrack.c \
	usageTypes.c \
	vaChange.c \
	vaConfig.c \
	vaDiff.c \
	vaPref.c \
	vaResource.c \
	vaidClass.c \
	valib.c \
	vdiskDef.c \
	vdiskInit.c \
	vdiskOps.c \
	viewClass.c \
	viewMenu.c \
	viewOps.c \
	view_form.c \
	vmidClass.c \
	volCreate.c \
	volOps2.c \
	volPerm.c \
	volTrack.c \
	volUtil.c \
	vxva.c \
	vxvaInit.c \
	widget.c

OBJS1 = $(SRCS1:.c=.o)

     PROG2 = vxva_watch
     SRCS2 = va_watch.c

OBJS2 = $(SRCS2:.c=.o)

     PROG3 = run_vxva
     SRCS3 = run_vxva.c

OBJS3 = $(SRCS3:.c=.o)

     PROG4 = vxvalog2txt
     SRCS4 = valog2txt.c

OBJS4 = $(SRCS4:.c=.o)

     DEPLIBS1 = $(DEPLIBS)
     DEPLIBS2 = $(DEPLIBS)
     DEPLIBS3 = $(DEPLIBS)
     DEPLIBS4 = $(DEPLIBS)
     OBJS     = $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4)
     SRCS     = $(SRCS1) $(SRCS2) $(SRCS3) $(SRCS4)
     PROGRAMS = $(PROG1) $(PROG2) $(PROG3) $(PROG4)

.IGNORE:

all::
	@if [ -f $(PROBEFILE) ]; then \
		$(MAKE) -f $(MAKEFILE) $(PROGRAMS) $(MAKEARGS) ;\
	else \
		for f in $(PROGRAMS); do \
			if [ ! -f $$f ]; then \
				echo "ERROR: $$f is missing" 1>&2 ;\
				false ;\
				break; \
			fi \
		done \
	fi

$(PROG1): $(OBJS1) $(DEPLIBS1)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS1) $(LOCAL_LIBRARIES) $(LDLIBS) $(SYS_LIBRARIES) $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) $(PROG1)

$(PROG2): $(OBJS2) $(DEPLIBS2)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS2) $(LOCAL_LIBRARIES) $(LDLIBS) $(SYS_LIBRARIES) $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) $(PROG2)

$(PROG3): $(OBJS3) $(DEPLIBS3)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS3) $(LOCAL_LIBRARIES) $(LDLIBS) $(SYS_LIBRARIES) $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) $(PROG3)

$(PROG4): $(OBJS4) $(DEPLIBS4)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS4) $(LOCAL_LIBRARIES) $(LDLIBS) $(SYS_LIBRARIES) $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) $(PROG4)

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

clobber:
	@echo "Making clobber in cmd/vxvm-va/src"
	@if [ -f $(PROBEFILE) ]; then \
		$(MAKE) -f $(MAKEFILE) clean ;\
	fi

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	 $(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install: all
	@echo "install vxva"
	echo " " > vxva_demo
	chmod 0755 vxva_demo

	for f in vxva_setup $(PROGRAMS) vxva_demo ; \
	do \
		[ -d $(VXVATOP)/bin ] || mkdir -p $(VXVATOP)/bin ; \
		rm -f $(VXVATOP)/bin/$$f ; \
		install -f $(VXVATOP)/bin -m 0644 -u root -g sys $$f ; \
	done

	mkmsgs -o Catalog ../Install/Vxva_msgs
	mkmsgs -o ../Install/Catalog ../Install/Vxva_inst

	for dir in Install help bitmaps app-defaults ; do \
		[ -d $(VXVATOP)/$$dir ] || mkdir -p $(VXVATOP)/$$dir ; \
			cp -r ../$$dir/* $(VXVATOP)/$$dir ; \
	done

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

install.hdk::
	       @echo "install.hdk in $(CURRENT_DIR) done"

# ----------------------------------------------------------------------
# dependencies generated by makedepend

