The test suite is organized into various tests in one package. These
tests and their descriptions are as follows:

Package Name				Description
------------		-----------------------------------------

nd-basix		Essentials of the test suite . 

nd-mdi			Network MAC Driver Interface unit tests. 

nd-dlpmdi		Network Data Link Provider MDI Interface tests. 

nd-drvr		 	Network DRIVER STRESS tests.

nd-util 	 	Network TCP UTILITY tests.

nd-ncard	 	Network NCARD tests.

nd-isdn		 	Network ISDN tests.

nd-dlpi			Network DLPI (UW 2.1 compat) tests. 

nd-tli			Network TLI STRESS tests. This package contains the 
			following tests:
				- TCP STRESS tests
				- SPX STRESS; tests

nd-nfs			NFS STRESS tests.


This directory is the root of the test source. The details of the remaining 
files and directories are given below.

Directories
-----------

doc		: Contains manuals for the test suites. 

etet		: Source for eTET itself

tet_tmp_dir	: Temporary directory

Files
-----

Makefile	: makefile

README		: THIS FILE that you are reading !

nd.pkg		: file that runs the pkgmk command for the nd-test package

HOW TO COMPILE 
--------------

   1. Set environment variable SUITE_ROOT to this directory.

   2. Set environment variable TET_ROOT to $SUITE_ROOT/etet

   3  Run 'make' from this directory.

      Alternatively, the sources can be compiled from each test directory.
      The description on how to make the binaries is described in each of 
      the source directories.
		
      CHECK FOR ANY ERRORS AND RECTIFY THEM.

HOW TO PACKAGE
--------------

   Set an environment variable TEMP to the directory where the package 
   should be built (default is /tmp).  Then execute the command:

	./nd.pkg

   This will do a "pkgmk" for the nd-test package in $TEMP directory.

   Now that the package is ready, we can convert it into any media using 
   the pkgtrans:
 
   Example: To convert into a datastream format ( single file ) on tape

	pkgtrans -s <directory name> ctape1  nd-test 

	<directory name> is the full path of the directory where the package
	exist.

   PLEASE SEE pkgtrans(1) FOR MORE DETAILS.
