#ident "@(#)auto_mdi	10.1"
#ident "$Header$"
#
#	Copyright (C) The Santa Cruz Operation, 1997
#	This Module contains Proprietary Information of
#	The Santa Cruz Operation, and should be treated as Confidential.
#
SUITE=nd-mdi

SCEN_NAME=mdi_unit

# CMD_NAME is used as argument for individual test name
if [ $# -lt 1 ]
then 
	CMD_NAME=all
else
	CMD_NAME=$1
fi

GUI=0
DISPCMD=echo
echo "Auto setup for $SUITE tests started..."

if  [ $# -gt 1 ]
then
	if [ $2 = "GUI=YES" ]
	then
		DISPCMD=gui_notice.wksh
	fi
fi


PROFILE=${TET_SUITE_ROOT}/$SUITE/mdi_profile
CONFIG_FILE=$HOME/$SUITE.cfg

if [ -r $PROFILE -a -r $CONFIG_FILE ]
then
	:
else
	$DISPCMD "$0: ERROR:file '$PROFILE' or '$CONFIG_FILE' missing"
	exit 1
fi

. $PROFILE
. $CONFIG_FILE

# check to see if to use config file entry for test suite name or command line
if [ "$DISPCMD" = "gui_notice.wksh" ]
then
	TEST_SCEN=$TEST_SCENARIO
else
	TEST_SCEN=$CMD_NAME
fi

# machines must be in init state 1 to run mdi test suites
echo "Checking init state...."

runlevel=`who -r | awk '{ print $3 }'`
if [ $runlevel != 1 ]
then 
	$DISPCMD "ERROR: You must be in init state 1 to run $SUITE test suites
	Your current init state> $runlevel 
	To change state type init 1 at command line as root" 
	exit 1
else
 	echo "Init State:  <$runlevel>"
fi
if [ "${TET_SUITE_ROOT}" -a "$USER" ]
then
	:
else
	$DISPCMD "$0: ERROR:environmental variable TET_SUITE_ROOT and/or USER not set. Please have \nthese variables set and run the tests again."
	exit 1
fi

CONFIG_ERROR="NOTE: The tests should be configured before they can be executed. \nPlease have the tests configured either by updating the configuration file \n'$CONFIG_FILE' or using GUI."

if [ ! -r $CONFIG_FILE ]
then
	$DISPCMD "ERROR: Configuration file '$CONFIG_FILE' missing"
	exit 1
fi

# sets test suite iclist to determine which tests to run of mdi tests
# gets name from command line argument or config file if GUI

if [ "$TEST_SCEN" = "all" ]
then
	ICLIST="ic1 ic2 ic3 ic4 ic5 ic6 ic7 ic8 ic9 ic10 ic11 ic12 ic13"
elif [ "$TEST_SCEN" = "frametest" ]
then
	ICLIST="ic1 ic2 ic13"
#elif [ "$TEST_SCEN" = "framemcst" ]
#then
#	ICLIST="ic1 ic3 ic16"
elif [ "$TEST_SCEN" = "framebcst" ]
then
	ICLIST="ic1 ic3 ic13"
elif [ "$TEST_SCEN" = "framembcst" ]
then
	ICLIST="ic1 ic4 ic13"
elif [ "$TEST_SCEN" = "loopback" ]
then
	ICLIST="ic1 ic5 ic13"
#elif [ "$TEST_SCEN" = "loopmcst" ]
#then
#	ICLIST="ic1 ic7 ic16"
elif [ "$TEST_SCEN" = "loopbcst" ]
then
	ICLIST="ic1 ic6 ic13"
elif [ "$TEST_SCEN" = "loopmbcst" ]
then
	ICLIST="ic1 ic7 ic13"
elif [ "$TEST_SCEN" = "bind" ]
then
	ICLIST="ic1 ic8 ic13"
#elif [ "$TEST_SCEN" = "multicast" ]
#then
#	ICLIST="ic1 ic11 ic16"
elif [ "$TEST_SCEN" = "promisc" ]
then
	ICLIST="ic1 ic9 ic13"
elif [ "$TEST_SCEN" = "symchk" ]
then
	ICLIST="ic1 ic10 ic13"
elif [ "$TEST_SCEN" = "macaddrtest" ]
then
	ICLIST="ic1 ic11 ic13"
elif [ "$TEST_SCEN" = "allmcatest" ]
then
	ICLIST="ic1 ic12 ic13"
fi
export ICLIST

#start the tests
echo "${TET_ROOT}/bin/tcc -e $SUITE $SCEN_NAME $TEST_SCEN"
${TET_ROOT}/bin/tcc -e $SUITE $SCEN_NAME
