/*
 * THIS FILE IS SPECIFIC TO USL's Intel PORT ONLY
 * THIS FILE IS SPECIFIC TO USL's Intel PORT ONLY
 * THIS FILE IS SPECIFIC TO USL's Intel PORT ONLY
 * THIS FILE IS SPECIFIC TO USL's Intel PORT ONLY
 */
/*
 * If you don't want to install in /usr/X, set ProjectRoot to what 
 * ever you wish to install the binaries, libs, etc.
 */
/*****************************************************************************
 *                                                                           *
 *			   SITE-SPECIFIC DEFINITIONS                         *
 *                                                                           *
 * This file contains two halves, one included before the vendor-specific    *
 * configuration file (.cf file), and one included after the .cf file.       *
 * The before-half should be protected by #ifdef BeforeVendorCF, and the     *
 * after-half should be protected by #ifdef AfterVendorCF.                   *
 *                                                                           *
 * The before-half should only set things that the .cf file depends on.      *
 * For the .cf files shipped in this release, the main variable in this      *
 * category is HasGcc.                                                       *
 *                                                                           *
 * The after-half should contain all other definitions.  For example,        *
 * place your ProjectRoot definition here.  Beware that several of the       *
 * .cf files supplied by vendors have a ProjectRoot already defined, so      *
 * you may need to #undef it first.                                          *
 *                                                                           *
 * OS Major and Minor version numbers should be changed directly in the .cf  *
 * file, not overridden in site.def.                                         *
 *                                                                           *
 *****************************************************************************/

#ifdef BeforeVendorCF

#define BootstrapCFlags -Dusl

/* This flag should be YES only if you have the FUnctionRelocator (fur) tool */
#ifndef UslLocalityTuning
#define UslLocalityTuning	YES
#endif
#ifndef BuildDtRuntimeLib
#define BuildDtRuntimeLib	YES
#endif
#define i386SVR4Architecture 	YES
#define SVR4ix86Architecture 	YES

/* YES == pre-ESMP env (ie: UW1.0/1.1). Default is NO (ie, UW2.0) */
#define Not_Esmp		NO	

#define DefaultFontPath $(XWINLIBDIR)/misc/,$(XWINLIBDIR)/100dpi/,$(XWINLIBDIR)/75dpi/

/*
 * if you don't want SAVE-UNDER's do it here
 */
/* #define USLSaveUnders	-DXWIN_SAVE_UNDERS */

/*
 * USL/ix86 Local Connection mechanism
 */
#define ClientLocalConnSysv4	YES
/* 
 * SCO's Xsight connection code for SVR4,
 * Note: you must have SVR4.0.4 or later, with the Advanced Compatibility
 * Package (iBSC-2 compatibility) to make use of this feature.
 */
#define SCOLocalConnSysv4 YES

/*
 * MIT's standard UNIX domain socket local connections
 */
#define UnixConn		NO

/* If you don't have sockets, uncomment this */
/* #define HasSockets	NO */
/*
 * HasShadowPasswd: Required if your system uses shadow passwords.
 */
/* #define HasShadowPasswd	NO */

/*
 * If you are not using GNU dbm, sdbm or SVR4's ndbm, uncomment this
 *          default:		YES
 */
/* #define HasNdbm		YES */
#define HasNdbm		NO

/*
 * HasSdbm: Required if you are using libsdbm.a  (HasNdbm should also be set)
 *	    defaults:
 *		SVR3,4:		YES
 */
/* #define HasSdbm		YES */
#define HasSdbm		NO

/*
 * HasTdbm: use built-in text-based dbm
 *          HasNdbm and HasSdbm should be set to NO
 */
#define HasTdbm		YES


/* You need the DES stuff from MIT to use this */
/* #define HasXdmAuth	YES */

/* If you are building for a 386 set this to NO */
#define Target_486	YES

/* Do you *really* want PEX? */
#define BuildPex	NO

/* Do you want to build Motif? */
#define BuildMotif	YES

/* Do you want to distribute Compaq display source? */
#define Distribute_Compaq_Src	YES

/* Control Netware Source code product */
#define Distribute_Netware_Src	YES 

/* Control Mosaic Source code product */
#define Distribute_Mosaic_Src	YES

/* XTRAP (v3.3) extension ? */
#define BuildXTrapExt		YES
#define BuildNewXTrapExt	YES
#define BuildXTrapLib		YES

/* build XYZ extension */
#define BuildXYZExt		YES
#define BuildXYZLib		YES

/* build XINPUT extension ? */
#define BuildXInputExt		NO
#define HasInputExtension	NO

/* build XIDLE extension ? */
#define BuildXIdleExt		YES
#define HasIdleExtension	YES

#define BuildFontServer		YES

/* Comment this out if you DON'T want to build the server */
#define BuildServer		YES

/* Comment this out if you DON'T want to build a debuggable server */
/* #define DebuggableServer	YES */

/* Comment this out if you're NOT using Conor Cahill's debugging malloc lib */
/* #define SpecialMalloc	YES */

/* Usually only want to build fonts once */
#define BuildFonts		YES

/* Comment this out if you DON'T want to compress pcf fonts */
#define CompressAllFonts	YES

/* Comment this out if you DON'T want to build 100dpi fonts */
#define Build100Dpi		YES

/* Comment this out if you DON'T want to build 75dpi fonts */
#define Build75Dpi		YES

/* Comment this out if you DON'T want to build the k14, jiskan, hanglg fonts */
/* #define BuildLargeMiscFonts	YES */

/* YES (default) means build only shared.  NO means build archive also. */
#define SharedFontLibraries	YES

/* If you want Type1 code included */
#define BuildType1		NO

/* Select Font Renderers to include (this overrides BuildType1 above)
 *
 * Default: Speedo
 * Available: Speedo Type1 | ATM (ie: either Type1 from MIT or
 * proprietary ATM from USL)
 */
#define FontRenderers		Speedo

/* Build the Xwin SI server */
#define XwinServer 		YES

/* Build Display Modules that link with XWIN at run time */
#define BuildDisplayModules	YES

/* This one's a matter of taste */
#define ManSuffix	1x
#define LibManSuffix	3x
#define ManDir		$(MANSOURCEPATH)1
#define LibmanDir	$(MANSOURCEPATH)3

/*
 * Enable these if you want to automatically install these config files
 * Be careful of overwriting customised files
 */
/***
#define InstallXdmConfig YES
#define InstallXinitConfig YES
***/
#define InstallFSConfig YES
#define DefaultFSConfigFile $(XWINLIBDIR)/fs/config

#endif /* BeforeVendorCF */

#ifdef AfterVendorCF

#ifdef ProjectRoot
#undef ProjectRoot
#endif

XCOMM
XCOMM ProjectRoot is where you want to install the binaries, libs, fonts etc
XCOMM

#define ProjectRoot		$(ROOT)/$(MACH)/usr/X

      PROJECTROOT = ProjectRoot
         XWINHOME = /usr/X
       XWINLIBDIR = $(XWINHOME)/lib
       XWINBINDIR = $(XWINHOME)/bin
     USLCLIENTSRC = $(TOP)/uslclients
       DESKTOPDIR = $(PROJECTROOT)/desktop 
         DTADMDIR = $(PROJECTROOT)/adm
        XDEFAULTS = $(PROJECTROOT)/defaults
           XOLSRC = $(LIBSRC)/Xol
        XOLLIBSRC = $(LIBSRC)/Xol
       DISPLIBDIR = $(USRLIBDIR)/display
       FONTINCSRC = $(FONTSRC)/include
    FONTLIBINCSRC = $(FONTSRC)/lib/include
      FOLIOLIBSRC = $(FONTSRC)/lib/folio
       FONTLIBSRC = $(FONTSRC)/lib/font
    BITMAPFONTSRC = $(FONTSRC)/lib/bitmap
        MSGCATDIR = $(ROOT)/$(MACH)/usr/lib/locale/C/MSGFILES
     RENDERERLIBS =


       DISPLIBREV = 2

XCOMM
XCOMM By default, DefaultRGBDatabase is defined to be $(LIBDIR)/rgb; this
XCOMM causes problem, if you are building the source in a cross-env; the
XCOMM cross env path is compiled in and when you try to run the server, it
XCOMM will complain that ../X/lib/rgb not found. XWINHOME doesn't get all the
XCOMM relative paths of the cross-env
XCOMM
#define DefaultRGBDatabase $(XWINHOME)/lib/rgb

#if SharedFontLibraries
FONTLIB = $(FONTLIBSRC)/libfont.so $(RENDERERLIBS)
SPEEDOLIB = $(FONTLIBSRC)/Speedo/libSpeedo.so
ATMLIB = $(FONTLIBSRC)/ATM/libatm.so
TYPE1LIB = $(FONTLIBSRC)/Type1/libType1.so
#else
FONTLIB = $(FONTLIBSRC)/libfont.a $(RENDERERLIBS)
SPEEDOLIB = $(FONTLIBSRC)/Speedo/libSpeedo.a
ATMLIB = $(FONTLIBSRC)/ATM/libatm.a
TYPE1LIB = $(FONTLIBSRC)/Type1/libType1.a
#endif

#if BigEndianArchitecture
    USL_DEFINES = -DLIBDIR=\"$(XWINLIBDIR)\" -DDESTDIR=\"$(XWINHOME)\" -DBIGENDIAN
#else
    USL_DEFINES = -DLIBDIR=\"$(XWINLIBDIR)\" -DDESTDIR=\"$(XWINHOME)\"
#endif
        DEFINES = $(USL_DEFINES)

#if BuildXTrapExt
#define XTrapExts	$(EXTENSIONSRC)/server/xtrap/libxtrapext.a
#if BuildNewXTrapExt
#define XTrapDefines	-DXTRAP=32 /*-DVERBOSE*/
#else
#define XTrapDefines	-DXTRAP=32 -DVERBOSE -DNO_NEW_XTRAP
#endif
#else
#define XTrapExts	/*nothing*/
#define XTrapDefines	/*nothing*/
#endif
#define SharedLibXTrap	HasSharedLibraries
#define SharedXTrapRev	1
#define NormalLibXTrap	(!SharedLibXTrap | ForceNormalLib)
#define DebugLibXTrap	NO
#define ProfileLibXTrap	NO

#if BuildXTrapLib
#if SharedLibXTrap
#define XTrapLibs	-L$(EXTENSIONSRC)/lib/xtrap -lXTrap
#else
#define XTrapLibs	$(EXTENSIONSRC)/lib/xtrap/libXTrap.a
#endif
#else
#define XTrapLibs	/*nothing*/
#endif

#if BuildXYZExt
#define XYZDefines	-DXYZEXT
#else
#define XYZDefines	/*nothing*/
#endif

#if BuildXIdleExt
#define XIDLEDefines	-DXIDLE
#else
#define XIDLEDefines	/*nothing*/
#endif

#if BuildBuiltinExt
#define BuiltinExts	$(EXTENSIONSRC)/server/builtin/libbuiltinext.a
#define BuiltinDefines	-DBUILTIN
#else
#define BuiltinExts	/*nothing*/
#define BuiltinDefines	/*nothing*/
#endif
#define SharedLibBuiltin	NO		/* never */
#define NormalLibBuiltin	(!SharedLibBuiltin | ForceNormalLib)
#define DebugLibBuiltin		NO
#define ProfileLibBuiltin	NO

#define OtherExts	XTrapExts BuiltinExts /* PexExts XInputExts */

#ifdef ExtensionOSDefines
#undef ExtensionOSDefines
#endif
#define ExtensionOSDefines -DXTEST XTrapDefines XYZDefines XIDLEDefines BuiltinDefines

#endif /* AfterVendorCF */
