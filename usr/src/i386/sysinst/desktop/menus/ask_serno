#ident	"@(#)ask_serno	15.1"


function ask_users_exit
{
#The third choice is 'cancel & reboot', so call 'halt'
#The second choice is 'reenter values', so do nothing, which will cause
#the entry screen to be reentered
#The first choice is OK, so populate the /tmp/serial.save file and return

	case $CHOICE in

		${ASKUSERS_OPT[2]})
		halt
		;;

		${ASKUSERS_OPT[0]})
		SerialNumber=${SerialID#????}
		print "SerialNumber=$SerialNumber\nSerialID=$SerialID\nActKey=$ActKey" > /tmp/serial.save
		;;
	esac
	return 0
}

#
# function to get user's attention to how many users the serial number they
# entered is licensed for, and allow them to quit/change if it's not OK
#
function user_limit
{

	typeset K_UNLIMITED=61439
        typeset K_GETLIMIT=131072

# gets the user limit
        call keyctl $K_GETLIMIT "@k_skey:{ !$SerialID!, !$ActKey! }" 1

	NUM_USERS=$_RETD

	[ "$NUM_USERS" = "$K_UNLIMITED" ] && NUM_USERS="$unlimited"

# put up screen showing number of licensed users
	eval display   "\"$USER_SCREEN\"" -above 1 -below 2
	_t=$CURWIN

# get user's choice ('continue' or 'cancel')
	if [ -z "${ASKUSERS_OPT}" ]
	then
		typeset OIFS="$IFS"
		IFS="$nl"
		set -A ASKUSERS_OPT ${ASKUSERS_CHOOSE}
		IFS="$OIFS"
	fi
	ASKUSERS=$ASKUSERS_OPT

	CHOOSE_FOOTER="$GENERIC_CHOOSE_FOOTER"
	choose -f -e -winparms "-below 0 -fg $COMBO2_FG -bg $COMBO2_BG" -help "helpwin user_limit" -exit 'ask_users_exit && wclose $_t' "$ASKUSERS" "${ASKUSERS_OPT[@]}"
}

function validpair
{

# from /usr/include/sys/keyctl.h
	typeset K_SETLIMIT=65536
        struct k_skey sernum:'unchar [16]' serkey:'unchar [16]'

# set kernel limits.  

        call keyctl $K_SETLIMIT "@k_skey:{ !$SerialID!, !$ActKey! }" 1

	retcode=$_RETD
	(( $retcode != 0 )) && {
		msg $BADPAIR
		return 1
	}

	return 0
}

function validkey
{
	if [ "${#1}" -lt 3 ]
	then
		errmsg "$SHORTKEY"
		return 1
	fi
	[ "$1" = "################" -o "$1" = "fpk" ] && return 0
	case "$1" in
	*([A-Za-z0-9_-]))
		;;
	*)
		errmsg "$BADCHARKEY"
		return 1
	esac
}

function ask_serno
{
	place_window $ASK_SERNO_WID+19 4 -current 'footer "$ACT_FOOTER"' -right 1 -below 1 -fg $COMBO2_FG -bg $COMBO2_BG -title "$ACT_TITLE"
	typeset -x input_wid=$CURWIN
	open_form -exit 'ask_serno_exit'
	ACTFID=$FID
	add_field -help 'helpwin ask_serno' -ix $ASK_SERNO_WID+3 -entry msgnoerr -exit 'validkey "$SerialID"' -ilen 14 -p "$SERIAL_PROMPT2" -px $ASK_SERNO_WID-${#SERIAL_PROMPT2}+1 -py 1  "SerialID"
	add_field -help 'helpwin ask_serno' -entry msgnoerr -ilen 14 -p "$KEY_PROMPT" -px $ASK_SERNO_WID-${#KEY_PROMPT}+1  "ActKey"
	run_form $ACTFID
}
function ask_serno_exit
{
[ "$SerialID" = "###" -o "$SerialID" = "fpk" ] && {
		SerialNumber=${SerialID}
		print "SerialNumber=$SerialNumber\nSerialID=$SerialID\nActKey=$ActKey" > /tmp/serial.save
		return 0
}
validpair || return 1
user_limit || return 1
return 0
}
