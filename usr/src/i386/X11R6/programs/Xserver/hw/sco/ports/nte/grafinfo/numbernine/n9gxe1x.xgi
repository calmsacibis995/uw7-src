/*
 *	@(#) n9gxe1x.xgi 11.1 97/10/22
 *
 * Copyright (C) 1993 The Santa Cruz Operation, Inc.
 *
 * The information in this file is provided for the exclusive use of the
 * licensees of The Santa Cruz Operation, Inc.  Such users have the right 
 * to use, modify, and incorporate this code into other products for purposes 
 * authorized by the license agreement provided they include this notice 
 * and the associated copyright notice with any such product.  The 
 * information in this file is provided "AS IS" without warranty.
 * 
 */

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-64K-72 "1280x1024 64K colors 72Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xff);

		r0 = 0x4F02;
		r1 = 0x821A;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */

		out(0x3d4, 0x55);
		in(r0, 0x3d5);
		and(r0, 0xfc);
		or(r0, 0x01);
		out(0x3d5, r0);
		out(0x3c6, 0x18);
		out(0x3c7, 0x05);
		and(r0, 0xfc);
		out(0x3d5, r0);
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-64K-70 "1280x1024 64K colors 70Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0x00);

		r0 = 0x4F02;
		r1 = 0x821A;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */

		out(0x3d4, 0x55);
		in(r0, 0x3d5);
		and(r0, 0xfc);
		or(r0, 0x01);
		out(0x3d5, r0);
		out(0x3c6, 0x18);
		out(0x3c7, 0x05);
		and(r0, 0xfc);
		out(0x3d5, r0);
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-64K-60 "1280x1024 64K colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xaa);

		r0 = 0x4F02;
		r1 = 0x821A;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */

		out(0x3d4, 0x55);
		in(r0, 0x3d5);
		and(r0, 0xfc);
		or(r0, 0x01);
		out(0x3d5, r0);
		out(0x3c6, 0x18);
		out(0x3c7, 0x05);
		and(r0, 0xfc);
		out(0x3d5, r0);
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-16M-72 "1024x768 16M colors 72Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "eox24";
		VISUAL      = "TrueColor";
		DEPTH       = 24;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xff);

		r0 = 0x4F02;
		r1 = 0x8222;
		int10(r0, 2);

		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-16M-70 "1024x768 16M colors 70Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "eox24";
		VISUAL      = "TrueColor";
		DEPTH       = 24;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0x00);

		r0 = 0x4F02;
		r1 = 0x8222;
		int10(r0, 2);

		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-16M-60 "1024x768 16M colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "eox24";
		VISUAL      = "TrueColor";
		DEPTH       = 24;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xaa);

		r0 = 0x4F02;
		r1 = 0x8222;
		int10(r0, 2);

		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-256-72 "1280x1024 256 colors 72Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xFF);

		r0 = 0x4F02;
		r1 = 0x8107;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-256-70 "1280x1024 256 colors 70Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0x00);

		r0 = 0x4F02;
		r1 = 0x8107;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1280x1024-256-60 "1280x1024 256 colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1280;
		PIXHEIGHT   = 1024;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xAA);

		r0 = 0x4F02;
		r1 = 0x8107;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-64K-72 "1024x768 64K colors 72Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xff);

		r0 = 0x4F02;
		r1 = 0x8117;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-64K-70 "1024x768 64K colors 70Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0x00);

		r0 = 0x4F02;
		r1 = 0x8117;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-64K-60 "1024x768 64K colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte16";
		VISUAL      = "TrueColor";
		DEPTH       = 16;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xaa);

		r0 = 0x4F02;
		r1 = 0x8117;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-256-72Hz "1024x768 256 colors 72Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xff);

		r0 = 0x4F02;
		r1 = 0x8205;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-256-70 "1024x768 256 colors 70Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0x00);

		r0 = 0x4F02;
		r1 = 0x8205;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   1024x768-256-60 "1024x768 256 colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "nte8";
		VISUAL      = "PseudoColor";
		DEPTH       = 8;
		PIXWIDTH    = 1024;
		PIXHEIGHT   = 768;
		VESABIOS6BUG = 1;
		RGBBITS     = 6;
		S3HWCURSOR = 0;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xaa);

		r0 = 0x4F02;
		r1 = 0x8205;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}

VENDOR NumberNine "Number 9"
 MODEL  n9gxe1x "GXe BIOS 1.1x"
  CLASS  S3C ""
   MODE   640x480-16M-60 "640x480 16M colors 60Hz"

	MEMORY(0xA0000,0x10000);
	PORT(EFF,VGA);

	DATA
	{
		XDRIVER     = "eox24";
		VISUAL      = "TrueColor";
		DEPTH       = 24;
		PIXWIDTH    = 640;
		PIXHEIGHT   = 480;
		VESABIOS6BUG = 1;
	}

	PROCEDURE SetGraphics
	{
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */

		out(0x3d4, 0x52);
		out(0x3d5, 0xaa);

		r0 = 0x4F02;
		r1 = 0x8220;
		int10(r0, 2);

		/*
		 * Need to do some stuff that wasn't done by the N9 BIOS
		 * that is essential to get the card to function.
		 */
		out(0x3d4, 0x38);
		out(0x3d5, 0x48); /* unlock register */
		out(0x3d4, 0x39);
		out(0x3d5, 0xad); /* unlock register */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		or(r0, 0x1);
		out(0x3d5, r0); /* enable enhanced 8514/A drawing regs */

		out(0x3d4, 0x58);
		in(r0, 0x3d5);
		and(r0, 0xef);
		out(0x3d5, r0); /* switch off linear addressing */
		out(0x3d4, 0x40);
		in(r0, 0x3d5);
		and(r0, 0xf7);
		out(0x3d5, r0); /* disable fast write buffer! */
		outw(0xbee8, 0xe040); /* slow read/write/modify cycle! */
	}

	PROCEDURE SetText
	{
		r0 = 0x4F02;
		r1 = 0x0003;
		int10(r0, 2);
		wait(1000000);
	}
