/*
 *  @(#) m300-28.xgi 2.0 92/09/24 
 *
 *  Copyright (C) 1992 Olivetti Spa.
 *
 */

/* ************************************************************************* *
 *  olivetti/m300-28.XGI GrafInfo File for Olivetti m300-28 Computer         *
 *                                                                           *
 *  OLIVETTI.m300-28.VGA.640x480-16-60    VGA       640x480  16-colors  60Hz *
 *  OLIVETTI.m300-28.SVGA.640x480-256-60  SUPER VGA 640x480  256-colors 60Hz *
 *  OLIVETTI.m300-28.SVGA.1024x768-60     SUPER VGA 1024x768 16-colors  60Hz *
 *                                                                           *
 *                          CHIP SET   OTI067                                *
 * ************************************************************************* */


VENDOR OLIVETTI      "OLIVETTI"
 MODEL  m300-28       "m300-28    VGA/SVGA"
  CLASS  VGA           "VGA"
   MODE   640x480-16-60 "640x480  16-colors 60Hz"

      MEMORY(0xA0000,0x10000);        /* Base Address, Length        */
      PORT(VGA);

      DATA
         {
         XDRIVER     = "mw";
         VISUAL      = "PseudoColor";
         DEPTH       = 4;
         DEVTYPE     = 01;
         DEVTECH     = 0x0D;            /* VGA */
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 480;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         }

      PROCEDURE SetGraphics                /* mode 12 */
         {
         in(r63,0x3DA);                    /* reset attr F/F  */
         out(0x3C0,0);                     /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);              /* reset, sequencer regs */

         out(0x3C2,0xE3);                  /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);       /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);    /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0x0B;  r7  = 0x3E;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0xEA;  r17 = 0x8C;  r18 = 0xDF;  r19 = 0x28;
         r20 = 0x00;  r21 = 0xE7;  r22 = 0x04;  r23 = 0xE3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                    /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03;  /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00;  /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                  /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                    /* reset attr F/F */
         out(0x3C0,0);                     /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);              /* sequencer regs */

         out(0x3C2,0x67);                  /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);     /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);    /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82;   /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                    /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                  /* enable palette */
         }


VENDOR OLIVETTI     "OLIVETTI"
 MODEL  m300-28      "m300-28    VGA VGA/SVGA"
  CLASS  SVGA         "SVGA"
   MODE   640x480-256-60  "640x480 256-colors 60Hz"

      MEMORY(0xA0000,0x20000);        /* Base Address, Length        */
      PORT(VGA);

      DATA
         {
         XDRIVER     = "mw";
         VISUAL      = "PseudoColor";
         DEPTH       = 8;
         DEVTYPE     = 01;
         DEVTECH     = 0x04;              /* MULTIBIT FLAT LINEAR */
         PIXBYTES    = 640;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 480;
         PIXBITS     = 8;
         PIXPLANES   = 1;
         MAPTYPE     = "OTI_2_64K";       /* OTI Bank switching */
         }

      PROCEDURE SetGraphics               /* mode 53  */
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 0x0E;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0xE3);                 /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0x0B;  r7  = 0x3E;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0xEA;  r17 = 0xAC;  r18 = 0xDF;  r19 = 0x28;
         r20 = 0x00;  r21 = 0xE7;  r22 = 0x04;  r23 = 0xC3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x40;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         /* OTI extended registers */

         out (0x3de, 0x0c); out (0x3df, 0x30);
         out (0x3de, 0x0d); out (0x3df, 0xCF);
         out (0x3de, 0x10); out (0x3df, 0x23);
         out (0x3de, 0x11); out (0x3df, 0x10);

         in(r63,0x3DA);                   /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x08;  r9  = 0x09;  r10 = 0x0A;  r11 = 0x0B;
         r12 = 0x0C;  r13 = 0x0D;  r14 = 0x0E;  r15 = 0x0F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);


         out(0x3C0,0x20);                 /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         out (0x3de, 0x0c); out (0x3df, 0x30);
         out (0x3de, 0x0d); out (0x3df, 0xc1);
         out (0x3de, 0x0e); out (0x3df, 0x80);
         out (0x3de, 0x0f); out (0x3df, 0xff);
         out (0x3de, 0x10); out (0x3df, 0x3d);
         out (0x3de, 0x11); out (0x3df, 0x00);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

VENDOR OLIVETTI       "OLIVETTI"
 MODEL  m300-28        "m300-28    VGA VGA/SVGA"
  CLASS  SVGA           "SVGA"
   MODE   1024x768-16-60 "1024x768 16-colors 60Hz"

      MEMORY(0xA0000,0x20000);        /* Base Address, Length        */
      PORT(VGA);

      DATA
         {
         XDRIVER     = "mw";
         VISUAL      = "PseudoColor";
         DEPTH       = 4;
         DEVTYPE     = 01;
         DEVTECH     = 0x0D;            /* VGA */
         PIXBYTES    = 128;
         PIXWIDTH    = 1024;
         PIXHEIGHT   = 768;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         }

      PROCEDURE SetGraphics               /* mode 56 NI */
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0x2B);                 /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0xa3;  r1  = 0x7f;  r2  = 0x80;  r3  = 0x86; /* crtc */
         r4  = 0x87;  r5  = 0x81;  r6  = 0x23;  r7  = 0xfd;
         r8  = 0x00;  r9  = 0x60;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x0E;  r15 = 0x87;
         r16 = 0x02;  r17 = 0x85;  r18 = 0xff;  r19 = 0x40;
         r20 = 0x00;  r21 = 0x00;  r22 = 0x23;  r23 = 0xE3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x01;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         /* OTI extended registers */

         out (0x3de, 0x0c); out (0x3df, 0x30);
         out (0x3de, 0x0d); out (0x3df, 0xdc);
         out (0x3de, 0x10); out (0x3df, 0xb9);
         out (0x3de, 0x11); out (0x3df, 0x00);

         in(r63,0x3DA);                   /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);


         out(0x3C0,0x20);                 /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         out (0x3de, 0x0c); out (0x3df, 0x30);
         out (0x3de, 0x0d); out (0x3df, 0xc1);
         out (0x3de, 0x0e); out (0x3df, 0x80);
         out (0x3de, 0x0f); out (0x3df, 0xff);
         out (0x3de, 0x10); out (0x3df, 0x3d);
         out (0x3de, 0x11); out (0x3df, 0x00);
         out (0x3de, 0x14); out (0x3df, 0x00);
         out (0x3de, 0x15); out (0x3df, 0x00);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

/* End of File m300-28.xgi file */
