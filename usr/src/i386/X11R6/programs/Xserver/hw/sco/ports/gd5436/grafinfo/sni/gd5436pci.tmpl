/*
 *	@(#) gd5436pci.tmpl 11.1 97/10/22
 *
 * Copyright (C) 1996 The Santa Cruz Operation, Inc.
 *
 * The information in this file is provided for the exclusive use of the
 * licensees of The Santa Cruz Operation, Inc.  Such users have the right 
 * to use, modify, and incorporate this code into other products for purposes 
 * authorized by the license agreement provided they include this notice 
 * and the associated copyright notice with any such product.  The 
 * information in this file is provided "AS IS" without warranty.
 * 
 */
VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1280x1024-8-75 "1280x1024 256-color 75Hz (80,4 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1280;
        PIXHEIGHT   = 1024;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1203;            /* AH AL */
        r1 = 0x34a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x006D;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1280x1024-8-60 "1280x1024 256-color 60Hz (63,7 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1280;
        PIXHEIGHT   = 1024;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1203;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x006D;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1280x1024-8-43i "1280x1024 256-color 43iHz (48,8 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1280;
        PIXHEIGHT   = 1024;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1203;            /* AH AL */
        r1 = 0x00a4;            /* BH BL */
        r2 = 0x0000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x006D;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-16-85 "1024x768 64k-color 85Hz (68,7 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0074;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-16-75 "1024x768 64k-color 75Hz (60,0 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0074;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-16-60 "1024x768 64k-color 60Hz (48,4 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0074;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-16-43i "1024x768 64k-color 43iHz (35,7 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x00a4;            /* BH BL */
        r2 = 0x0000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0074;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-8-100 "1024x768 256-color 100Hz (80,8 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 1024;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0060;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-8-85 "1024x768 256-color 85Hz (68,7 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 1024;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0060;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-8-75 "1024x768 256-color 75Hz (60,0 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 1024;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0060;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-8-60 "1024x768 256-color 60Hz (48,4 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 1024;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0060;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   1024x768-8-43i "1024x768 256-color 43iHz (35,7 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 1024;
        PIXHEIGHT   = 768;
        PITCH       = 1024;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1202;            /* AH AL */
        r1 = 0x00a4;            /* BH BL */
        r2 = 0x0000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0060;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-24-100 "800x600 16m-color 100Hz (63,0 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 3072;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0078;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-24-85 "800x600 16m-color 85Hz (53,7 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 3072;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0078;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-24-75 "800x600 16m-color 75Hz (46,9 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 3072;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0078;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-24-60 "800x600 16m-color 60Hz (37,9 kHz, 2MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 3072;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0078;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-16-100 "800x600 64k-color 100Hz (63,0 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 1600;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0065;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-16-85 "800x600 64k-color 85Hz (53,7 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 1600;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0065;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-16-75 "800x600 64k-color 75Hz (46,9 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 1600;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0065;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-16-72 "800x600 64k-color 72Hz (48,2 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 1600;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x12a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0065;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-16-60 "800x600 64k-color 60Hz (37,9 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 1600;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0065;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-8-100 "800x600 256-color 100Hz (63,0 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 800;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x56a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005C;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-8-85 "800x600 256-color 85Hz (53,7 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 800;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005C;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-8-75 "800x600 256-color 75Hz (46,9 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 800;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005C;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-8-72 "800x600 256-color 72Hz (48,2 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 800;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x12a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005C;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   800x600-8-60 "800x600 256-color 60Hz (37,9 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 800;
        PIXHEIGHT   = 600;
        PITCH       = 800;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1201;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005C;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-24-100 "640x480 16m-color 100Hz (50,6 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1202;            /* AH AL */
        r1 = 0x65af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0071;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-24-85 "640x480 16m-color 85Hz (43,4 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1201;            /* AH AL */
        r1 = 0x65af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0071;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-24-75 "640x480 16m-color 75Hz (37,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1200;            /* AH AL */
        r1 = 0x65af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0071;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-24-60 "640x480 16m-color 60Hz (31,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_24bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 24;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 2048;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1200;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0071;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-16-100 "640x480 64k-color 100Hz (50,6 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1202;            /* AH AL */
        r1 = 0x65af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0064;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-16-85 "640x480 64k-color 85Hz (43,4 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1201;            /* AH AL */
        r1 = 0x54af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0064;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-16-75 "640x480 64k-color 75Hz (37,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1200;            /* AH AL */
        r1 = 0x43af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x0064;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-16-60 "640x480 64k-color 60Hz (31,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_16bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 16;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 1280;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1200;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x0064;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-8-100 "640x480 256-color 100Hz (50,6 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 640;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x65a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1202;            /* AH AL */
        r1 = 0x65af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x005f;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-8-85 "640x480 256-color 85Hz (43,4 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 640;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x54a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1201;            /* AH AL */
        r1 = 0x54af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x005f;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-8-75 "640x480 256-color 75Hz (37,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 640;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1210;            /* AH AL */
        r1 = 0x43a4;            /* BH BL */
        r2 = 0x3000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x1200;            /* AH AL */
        r1 = 0x43af;            /* BH BL */
        int10(r0, 2);

        r0 = 0x005f;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }

VENDOR SNI "SNI"
 MODEL  GD5436PCI "GD5436 PCI"
  CLASS  GD5436VGA       ""
   MODE   640x480-8-60 "640x480 256-color 60Hz (31,5 kHz, 1MB)"

    MEMORY(@FRAMEBUFFER@, 0x400000); /* 4M necessary for even 1M boards */
    PORT(0x80);         /* Reserved port - used for timing */
    PORT(VGA);

    DATA
    {
	VIDSETUP = "/usr/X11R6.1/lib/vidconf/scripts/snigd5436pci";
        XDRIVER     = "gd5436_8bpp";
        VISUAL      = "PseudoColor";
        DEPTH       = 8;
        PIXWIDTH    = 640;
        PIXHEIGHT   = 480;
        PITCH       = 640;
    }

    PROCEDURE  SetGraphics
    {
        r0 = 0x1200;            /* AH AL */
        r1 = 0x11a4;            /* BH BL */
        r2 = 0x1000;            /* CH CL */
        int10(r0, 3);

        r0 = 0x005f;
        int10(r0, 1);

        out(0x3c4, 0x7);        /* set index for SR7 */
        in(r63, 0x3c5);         /* read SR7 */
        or(r63, 0x10);          /* set PCI linear memory enable bit */
        out(0x3c5, r63);        /* write back to SR7 */

        out(0x3c4, 0x17);       /* set index for SR17 */
        in(r63, 0x3c5);         /* read SR17 */
        or(r63, 0x04);          /* enable mem mapped io */
        or(r63, 0x40);          /* set regs to be fb + memsize - 256 */
        out(0x3c5, r63);        /* write back to SR17 */

        out(0x3ce, 0x6);        /* set index for GR6 */
        in(r63, 0x3cf);         /* read GR6 */
        or(r63, 0x04);          /* set GR6[3:2] to 0,1 */
        and(r63, 0xf7);
        out(0x3cf, r63);        /* write back to GR6 */
    }

    PROCEDURE SetText
    {
        r0 = 0x0003;
        int10(r0, 1);
    }

    PROCEDURE InstalledMemory
    {
        r0 = 0x1200;
        r1 = 0x0085;
        int10(r0, 2);
    }


