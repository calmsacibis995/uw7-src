/*
 *    @(#) 758.xgi 12.1 95/05/09  
 *
 * Copyright (C) 1991-1992 The Santa Cruz Operation, Inc.
 *
 * The information in this file is provided for the exclusive use of the
 * licensees of The Santa Cruz Operation, Inc.  Such users have the right 
 * to use, modify, and incorporate this code into other products for purposes 
 * authorized by the license agreement provided they include this notice 
 * and the associated copyright notice with any such product.  The 
 * information in this file is provided "AS IS" without warranty.
 * 
 */

/* *********************************************************************** *
 * TOSHIBA/MONO.XGI - XEGIA(tm) GrafInfo File for Toshiba Grid 1500 Laptop *
 *                                                                         *
 *        Copyright (c) 1989 Metagraphics Software Corporation             *
 *      269 Mount Hermon Road, PO 66779, Scotts Valley, CA 95066           *
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
 *                                                                         *
 *                    Toshiba.758.CGA.640x400-2                            *
 *                                                                         *
 * *********************************************************************** */


VENDOR TOSHIBA    "Toshiba"
 MODEL  758        "Grid 758 Display"
  CLASS  CGA        "CGA"
   MODE   640x400-2  "640x400 Monochrome"   /* Toshiba 640x400 2-color */

      MEMORY (0xb8000,0x08000);           /* Base Address, Length */
      PORT   (0x3d0-0x3df);
      PORT   (0x6f8);

      DATA
         {
	 XDRIVER = "mw";
	 VISUAL  = "StaticGray";
	 DEPTH   = 1;
         DEVTYPE     = 00;
         DEVTECH     = 00;
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 400;
         PIXBITS     = 1;
         PIXPLANES   = 1;
         MAPTYPE     = "EGA";
         INTERLEAVE  = 4;
         INTERSIZE   = 0x2000;
         }

      PROCEDURE SetGraphics
         {
	 out(0x3d8, 0x16);		/* High-Res Graphics mode */

	 /* 6845 Registers */
	 r0  = 0x38;  r1  = 0x28;  r2  = 0x2d;  r3  = 0x0a;
	 r4  = 0x7f;  r5  = 0x06;  r6  = 0x64;  r7  = 0x70;
	 r8  = 0x02;  r9  = 0x01;  r10 = 0x06;  r11 = 0x07;
	 r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
	 bout(16, 0x3d4, 0x3d5);

	 out(0x6f8, 0);			/* subsystem select/ video system */
	 out(0x3df, 0xff);		/* Allow access to bank registers */
	 out(0x3dd, 0x3f);		/* Enable the controller */
	 out(0x3de, 0x81);

	 /* Bank data */
	 /* Unfortunately, the index register we have to start
	    writing to is 0x20.  Currently the bout command
	    assumes that you want to start at 0.  So, we have
	    to do this the hard way.
	 */
	 out(0x3dd, 0x20);
	 out(0x3de, 0xc7);
	 out(0x3dd, 0x21);
	 out(0x3de, 0x9f);
	 out(0x3dd, 0x22);
	 out(0x3de, 0x0f);
	 out(0x3dd, 0x23);
	 out(0x3de, 0x81);
	 out(0x3dd, 0x24);
	 out(0x3de, 0xe2);
	 out(0x3dd, 0x25);
	 out(0x3de, 0x75);
	 out(0x3dd, 0x26);
	 out(0x3de, 0x80);
	 out(0x3dd, 0x27);
	 out(0x3de, 0x8a);
	 out(0x3dd, 0x28);
	 out(0x3de, 0x66);
	 out(0x3dd, 0x29);
	 out(0x3de, 0x40);
	 out(0x3dd, 0x2a);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2b);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2c);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2d);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2e);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2f);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x30);
	 out(0x3de, 0x55);
	 out(0x3dd, 0x31);
	 out(0x3de, 0xf8);
	 out(0x3dd, 0x32);
	 out(0x3de, 0xfd);
	 out(0x3dd, 0x33);
	 out(0x3de, 0x0a);
	 out(0x3dd, 0x34);
	 out(0x3de, 0x19);
	 out(0x3dd, 0x35);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x36);
	 out(0x3de, 0x07);
	 out(0x3dd, 0x37);
	 out(0x3de, 0x60);
	 out(0x3dd, 0x38);
	 out(0x3de, 0x2a);
	 out(0x3dd, 0x39);
	 out(0x3de, 0xfc);
	 out(0x3dd, 0x3a);
	 out(0x3de, 0xf4);
	 out(0x3dd, 0x3b);
	 out(0x3de, 0x0a);
	 out(0x3dd, 0x3c);
	 out(0x3de, 0x67);
	 out(0x3dd, 0x3d);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x3e);
	 out(0x3de, 0x03);
	 out(0x3dd, 0x3f);
	 out(0x3de, 0x07);

	 out(0x3dd, 0x27);		/* Special Register */
	 out(0x3de, 0x8b);
         }


      PROCEDURE SetText
         {
	 out(0x3df, 0xff);		/* Allow access to bank registers */
	 out(0x3dd, 0x3f);		/* Enable the controller */
	 out(0x3de, 0x81);

	 /* Bank data */
	 out(0x3dd, 0x20);
	 out(0x3de, 0xc7);
	 out(0x3dd, 0x21);
	 out(0x3de, 0x9f);
	 out(0x3dd, 0x22);
	 out(0x3de, 0x0f);
	 out(0x3dd, 0x23);
	 out(0x3de, 0x81);
	 out(0x3dd, 0x24);
	 out(0x3de, 0x02);
	 out(0x3dd, 0x25);
	 out(0x3de, 0xb1);
	 out(0x3dd, 0x26);
	 out(0x3de, 0x80);
	 out(0x3dd, 0x27);
	 out(0x3de, 0x8a);
	 out(0x3dd, 0x28);
	 out(0x3de, 0x66);
	 out(0x3dd, 0x29);
	 out(0x3de, 0x40);
	 out(0x3dd, 0x2a);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2b);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2c);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2d);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2e);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x2f);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x30);
	 out(0x3de, 0x55);
	 out(0x3dd, 0x31);
	 out(0x3de, 0xf8);
	 out(0x3dd, 0x32);
	 out(0x3de, 0xfd);
	 out(0x3dd, 0x33);
	 out(0x3de, 0x0a);
	 out(0x3dd, 0x34);
	 out(0x3de, 0x19);
	 out(0x3dd, 0x35);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x36);
	 out(0x3de, 0x07);
	 out(0x3dd, 0x37);
	 out(0x3de, 0x60);
	 out(0x3dd, 0x38);
	 out(0x3de, 0x2a);
	 out(0x3dd, 0x39);
	 out(0x3de, 0xfc);
	 out(0x3dd, 0x3a);
	 out(0x3de, 0xf4);
	 out(0x3dd, 0x3b);
	 out(0x3de, 0x0a);
	 out(0x3dd, 0x3c);
	 out(0x3de, 0x67);
	 out(0x3dd, 0x3d);
	 out(0x3de, 0x00);
	 out(0x3dd, 0x3e);
	 out(0x3de, 0x01);
	 out(0x3dd, 0x3f);
	 out(0x3de, 0x67);

	 out(0x3dd, 0x27);	/* Special register */
	 out(0x3de, 0x0b);

	 out(0x3d8, 0x01);
	 out(0x3d8, 0x21);
	 out(0x3d9, 0x30);

	 /* crtc regs */
         r0 = 0x71;     r1  = 0x50;     r2  = 0x5A;     r3  = 0x0A;
         r4 = 0x19;     r5  = 0x06;     r6  = 0x19;     r7  = 0x19;
         r8 = 0x02;     r9  = 0x0D;     r10 = 0x0B;     r11 = 0x0C;
         r12= 0x00;     r13 = 0x00;     r14 = 0x00;     r15 = 0x00;
         bout(16, 0x3d4, 0x3d5);

         out(0x3d8, 0x29);               /* mode - enable page 0 */
         }

/* End of File - TOSHIBA/758.XGI */
