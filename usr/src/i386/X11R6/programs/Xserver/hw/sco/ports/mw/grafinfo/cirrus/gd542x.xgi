/*
 *	@(#) gd542x.xgi 12.1 95/05/09 
 *
 * Copyright (C) 1993 The Santa Cruz Operation, Inc.
 *
 * The information in this file is provided for the exclusive use of the
 * licensees of The Santa Cruz Operation, Inc.  Such users have the right 
 * to use, modify, and incorporate this code into other products for purposes 
 * authorized by the license agreement provided they include this notice 
 * and the associated copyright notice with any such product.  The 
 * information in this file is provided "AS IS" without warranty.
 */

/*
 * SUPPORTED MODES
 *
 * 1024x768 256 colors 70Hz non interlaced
 * 1024x768 256 colors 60Hz non interlaced
 * 1024x768 256 colors 43.5Hz interlaced
 * 1024x768 16 colors 70Hz non interlaced
 * 1024x768 16 colors 60Hz non interlaced
 * 1024x768 16 colors 43.5Hz interlaced
 * 800x600 256 colors 72Hz
 * 800x600 256 colors 60Hz
 * 800x600 256 colors 56Hz
 * 800x600 16 colors 56Hz
 * 640x480 256 color 60Hz
 */

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   1024x768-256-70 "1024x768 256 colors 70Hz non interlaced"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBYTES    = 1024;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1207;		/* monitor type == 7 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x0060;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   1024x768-256-60 "1024x768 256 colors 60Hz non interlaced"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBYTES    = 1024;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1205;		/* monitor type == 5 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x0060;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   1024x768-256-43i "1024x768 256 colors 43.5Hz interlaced"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBYTES    = 1024;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1204;		/* monitor type == 4 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x0060;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  SVGA         "SVGA"
   MODE   1024x768-16-70 "1024x768 16 colors 70Hz non interlaced"

    MEMORY(0xA0000,0x20000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 4;
	DEVTYPE     = 01;
	DEVTECH     = 0x0D;
	PIXBYTES    = 128;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBITS     = 1;
	PIXPLANES   = 4;
	MAPTYPE     = "EGA";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1207;		/* monitor type == 7 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005D;
	int10(r0, 1);

	out(0x3ce, 6);		/* GR6 Misc register */
	in(r63, 0x3cf);		/* read value */
	and(r63, 0xf3);		/* set Memory Map [3:2] to 0 (128K) */
	out(0x3cf, r63);	/* write value */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  SVGA         "SVGA"
   MODE   1024x768-16-60 "1024x768 16 colors 60Hz non interlaced"

    MEMORY(0xA0000,0x20000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 4;
	DEVTYPE     = 01;
	DEVTECH     = 0x0D;
	PIXBYTES    = 128;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBITS     = 1;
	PIXPLANES   = 4;
	MAPTYPE     = "EGA";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1205;		/* monitor type == 5 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005D;
	int10(r0, 1);

	out(0x3ce, 6);		/* GR6 Misc register */
	in(r63, 0x3cf);		/* read value */
	and(r63, 0xf3);		/* set Memory Map [3:2] to 0 (128K) */
	out(0x3cf, r63);	/* write value */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  SVGA         "SVGA"
   MODE   1024x768-16-43i "1024x768 16 colors 43.5Hz interlaced"

    MEMORY(0xA0000,0x20000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 4;
	DEVTYPE     = 01;
	DEVTECH     = 0x0D;
	PIXBYTES    = 128;
	PIXWIDTH    = 1024;
	PIXHEIGHT   = 768;
	PIXBITS     = 1;
	PIXPLANES   = 4;
	MAPTYPE     = "EGA";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1204;		/* monitor type == 4 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);


	r0 = 0x005D;
	int10(r0, 1);

	out(0x3ce, 6);		/* GR6 Misc register */
	in(r63, 0x3cf);		/* read value */
	and(r63, 0xf3);		/* set Memory Map [3:2] to 0 (128K) */
	out(0x3cf, r63);	/* write value */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   800x600-256-72 "800x600 256 colors 72Hz"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 800;
	PIXHEIGHT   = 600;
	PIXBYTES    = 800;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1207;		/* monitor type == 7 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005C;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   800x600-256-60 "800x600 256 colors 60Hz"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 800;
	PIXHEIGHT   = 600;
	PIXBYTES    = 800;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1204;		/* monitor type == 4 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005C;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   800x600-256-56 "800x600 256 colors 56Hz"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 1;
	DEVTECH     = 4;
	PIXWIDTH    = 800;
	PIXHEIGHT   = 600;
	PIXBYTES    = 800;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1203;		/* monitor type == 3 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005C;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   800x600-16-56 "800x600 16 colors 56Hz"

    MEMORY(0xA0000,0x10000);
    PORT(VGA);

    DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 4;
	DEVTYPE     = 1;
	DEVTECH     = 0x0D;
	PIXWIDTH    = 800;
	PIXHEIGHT   = 600;
	PIXBYTES    = 100;
	PIXBITS     = 1;
	PIXPLANES   = 4;
	MAPTYPE     = "EGA";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1203;		/* monitor type == 3 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x0058;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	and(r63,0xEF);		/* data = endable 64K page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}

VENDOR CIRRUS "Cirrus Logic"
 MODEL  GD542X "GD542X"
  CLASS  VGA         "VGA"
   MODE   640x480-256-60  "640x480 256 color 60Hz"

      MEMORY(0xA0000,0x10000);            /* Base Address, Memory       */
      PORT(VGA);

      DATA
	{
	XDRIVER     = "mw";
	VISUAL      = "PseudoColor";
	DEPTH       = 8;
	DEVTYPE     = 01;
	DEVTECH     = 4;
	PIXBYTES    = 640;
	PIXWIDTH    = 640;
	PIXHEIGHT   = 480;
	PIXBITS     = 8;
	PIXPLANES   = 1;
	MAPTYPE     = "CIRRUS542X_2_32K";
	VBIOSOPTS   = 8;
	}

    PROCEDURE  SetGraphics
	{
	r0 = 0x1203;		/* monitor type == 3 */
	r1 = 0xa2;		/* set monitor type */
	int10(r0, 2);

	r0 = 0x005F;
	int10(r0, 1);

	out(0x3ce, 0x0b);	/* select extension reg i/o port */
	in(r63,0x3cf);		/* read data */
	or(r63,0x01);		/* data = enable 32K page, dual page */
	out(0x3cf, r63);	/* write i/o port */
	}

    PROCEDURE SetText
	{
	r0 = 0x0003;
	int10(r0, 1);
	}
