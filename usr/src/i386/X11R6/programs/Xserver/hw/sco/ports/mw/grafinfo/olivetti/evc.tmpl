/*
 *    @(#) evc.tmpl 1.2 92/11/12  
 */
/*
 *	Copyright (C) The Santa Cruz Operation, 1989-1992.
 *	This Module contains Proprietary Information of
 *	The Santa Cruz Operation, and should be treated as Confidential.
 */

/* *************************************************************************
 *  olivetti/evc.xgi Grafinfo file for Olivetti EVC Graphics Controller    *
 *                                                                         *
 * This file has been created from evc.tmpl for slot # @SLOT@              * 
 ***************************************************************************/

VENDOR OLIVETTI    "OLIVETTI"
 MODEL  EVC       "EVC"
  CLASS  VGA         "VGA"
   MODE   640x480-16  "640x480 16-color"   /* VGA mode 12 640x480 16 color */

      MEMORY(0xA0000,0x10000);        /* Base Address, Length       */
      PORT(VGA);

      DATA
         {
	 XDRIVER     = "mw";
	 VISUAL      = "PseudoColor";
	 DEPTH       = 4;
         DEVTYPE     = 02;              /*  EVC */
         DEVTECH     = 0x0D;            /* VGA  */
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 480;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         }

      PROCEDURE SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0xE3);                 /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0x0B;  r7  = 0x3E;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0xEA;  r17 = 0x8C;  r18 = 0xDF;  r19 = 0x28;
         r20 = 0x00;  r21 = 0xE7;  r22 = 0x04;  r23 = 0xE3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


VENDOR OLIVETTI    "OLIVETTI"
 MODEL  EVC       "EVC  Graphics Controller"
  CLASS  SVGA         "SVGA"
   MODE 1024x768-16    "1024x768 16 colors"  /* Mode 72 VGA 1024x768 16 colors,indirect access */

      MEMORY(0xA0000,0x20000);         /* Base Address, Length       */
      PORT(VGA);

      DATA
         {
	 XDRIVER     = "mw";
	 VISUAL      = "PseudoColor";
	 DEPTH       = 4;
         DEVTYPE     = 02;              /*  EVC */
         DEVTECH     = 0x0D;            /* VGA */
         PIXBYTES    = 128;
         PIXWIDTH    = 1024;
         PIXHEIGHT   = 768;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         }


      PROCEDURE SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 0;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0x2B);                 /* misc out reg */

         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0xA3;  r1  = 0x7F;  r2  = 0x80;  r3  = 0x86; /* crtc */
         r4  = 0x87;  r5  = 0x81;  r6  = 0x23;  r7  = 0xFD;
         r8  = 0x00;  r9  = 0x60;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x0E;  r15 = 0x87;
         r16 = 0x02;  r17 = 0x85;  r18 = 0xFF;  r19 = 0x40;
         r20 = 0x00;  r21 = 0x00;  r22 = 0x23;  r23 = 0xE3;
         r24 = 0xFF;
         bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x01;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attribute flip/flop */
         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         r20 = 0x00;
         bout(21,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */

           /* Extended register for all 3 extended modes */
         out(0x3D6,0x04);  out(0x3D7,0x06);
         out(0x3D6,0x06);  out(0x3D7,0x6E);
         out(0x3D6,0x0B);  out(0x3D7,0x01);
           /*         Mode 72 VGA 1024x768 16 colors */
         out(0x3D6,0x28);  out(0x3D7,0x02);  /* BLANK signal */
         out(0x3D6,0x7F);  out(0x3D7,0x00);  /* don't tri-state VGA memory */
         out(0x3DA,0x02);                    /* Feature control            */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


VENDOR OLIVETTI    "OLIVETTI"
 MODEL  EVC       "EVC  Graphics Controller"
  CLASS  DVGA         "DVGA"
   MODE 1024x768-256   "1024x768 256 colors" /* Direct access mode */

      MEMORY(0xD0000000, 0x00100000);
      PORT(VGA);

      DATA
         {
	 XDRIVER     = "dfb";
	 VISUAL      = "PseudoColor";
	 DEPTH       = 8;
         PIXBYTES    = 1024;
         PIXWIDTH    = 1024;
         PIXHEIGHT   = 768;
         RGBBITS     = 8;
         }


      PROCEDURE SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 0;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0x2B);                 /* misc out reg */

         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0xA3;  r1  = 0x7F;  r2  = 0x80;  r3  = 0x86; /* crtc */
         r4  = 0x87;  r5  = 0x81;  r6  = 0x23;  r7  = 0xFD;
         r8  = 0x00;  r9  = 0x60;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x0E;  r15 = 0x87;
         r16 = 0x02;  r17 = 0x85;  r18 = 0xFF;  r19 = 0x40;
         r20 = 0x00;  r21 = 0x00;  r22 = 0x23;  r23 = 0xE3;
         r24 = 0xFF;
         bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */

         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x01;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attribute flip/flop */
         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         r20 = 0x00;
         bout(21,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */

           /* Extended register for all 3 extended modes */
         out(0x3D6,0x04);  out(0x3D7,0x06);
         out(0x3D6,0x06);  out(0x3D7,0x6E);
         out(0x3D6,0x0B);  out(0x3D7,0x01);
           /*         Mode 1024x768 256 color, direct access mode  */
         out(0x3D6,0x28);  out(0x3D7,0x02);  /* BLANK signal */
         out(0x3D6,0x7F);  out(0x3D7,0x02);  /* tri-state VGA memory */
         out(0x3DA,0x02);                    /* Feature control            */

         /*                                    evc_direct_mode_fix()  */
         out(0x@SLOT@880, 0x05);          /* Use Direct Access path        */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         /*                                    evc_reset()                  */
         out(0x@SLOT@C84, 0x04);          /* Reset, disable EVC             */
                                          /* wait 500 ns                    */
         out(0x@SLOT@C84, 0x00);          /*  part of reset                 */
         out(0x@SLOT@C84, 0x01);          /* enable EVC                     */
         out(0x@SLOT@884, 0x01);          /* set bus width to 8 bits        */

         /*                                    evc_setup()                  */
         out(0x@SLOT@880, 0x06);          /* use VGA access path to frame b.*/
         out(0x102,1);                    /* set "VGA enabled state"        */
         out(0x103,0x80);                 /* enable 82C452 extended register*/
         out(0x@SLOT@880, 0x07);          /* normal VGA op., VGA access path*/
                                          /* extended CPU interface register*/
         out(0x3D6,2); out(0x3D7,3);      /* enable 16 bit I/O amd memory   */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }
