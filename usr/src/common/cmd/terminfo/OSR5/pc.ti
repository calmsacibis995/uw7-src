#ident	"@(#)terminfo:common/cmd/terminfo/OSR5/pc.ti	1.1"
#
#	@(#) pc.ti 23.18 91/11/07 
###
###	      UNIX is a registered trademark of AT&T
###		Portions Copyright 1976-1989 AT&T
###	Portions Copyright 1980-1989 Microsoft Corporation
###    Portions Copyright 1983-1991 The Santa Cruz Operation, Inc
###		      All Rights Reserved
#
#ident	"@(#)terminfo:pc.ti	1.2"
# # PC - Personal Computers and Workstations emulating terminals.
#
# Manufacturer:	PERSONAL COMPUTER TERMINALS
# Class:	III
# 
# Info:
#	This category is strange. The typical personal computer offers 
#	a program to emulate a "terminal" without documenting any 
#	escape sequences.
#	
#	I don't have any direct personal experience with these, but 
#	my impression is that the terminal emulator emulates an 
#	ultra-dumb terminal, with the cursor cemented to the bottom 
#	line, and no escape sequences.
#	
#	Many of the entries below were found in random places with 
#	no indication of who they came from or how. In many cases, I 
#	believe what has happened is that someone wrote their own 
#	terminal emulator program, which understood some control 
#	characters or escape sequences, and made their own entries.
#	
#	GENERIC PERSONAL COMPUTER
#
pc|any personal computer emulating a terminal,
	am,
	cols#40,
	bel=^G, cr=\r, cud1=\n, ind=\n,
apple-soroc|apple emulating soroc 120,
	am,
	cols#80, lines#24,
	bel=^G, clear=\E*$<300>, cr=\r, cub1=\b, cud1=\n,
	cuf1=\f, cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K,
	ed=\EY, el=\ET, home=^^, ind=\n, kcub1=\b, kcud1=\n,
	kcuf1=\f, kcuu1=^K,
# Info:
#	The following termcap entry works only with an Apple ][+ that is
#	equipped with a Videx 80 column card in slot 3. A special 
#	routine must be installed at the apple end to enable scroll 
#	down, here indicated with a ^U. The Videx card must have 
#	inverse char set.
#
apple|apple-v80|Apple][+ w/Videx80 & custom scroll down,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, cub1=^H$<10>,
	smacs=^z2, rmacs=^z3, cup=\015\036%r%p1%' '%+%c%p2%' '%+%c$<6>,
	el=\035$<6>, home=\031$<50>, smso=^z3, rmso=^z2,
	cuf1=\034, cud1=\012, cuu1=\037, clear=\014$<40*>,
	xenl, am, ri=\020, ed=\013$<20*>,
# Info:
#	The official PC terminal emulator program of the AT&T Product 
#	Centers.
#	
#	Note - insert mode commented out - doesn't seem to work on 
#	AT&T PC.
#
simterm|attpc running simterm,
	am,
	cols#80, lines#24,
	bel=^G, clear=\EH\EJ, cr=\r, cub1=\b, cud1=\EB,
	cuf1=\EC, cup=\E=%p1%' '%+%c%p2%' '%+%c, cuu1=\EA,
	dch1=\ER, dl1=\EM, ed=\EJ, el=\EK, home=\EH, il1=\EL,
	ind=\n, rmcup=\EVE, .rmir=\EE, .rmso=\E&d@, smcup=\EVS,
	smir=\EQ, smso=\E&dB,
# Info:
#
vic20|vic|vic Personal Computer,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, clear=^K^L, home=^L,
	lines#20, cuu1=^^, cuf1=^\, cols#22,
# Info:
#	(Dan Ingold)
#	
#	Following is a TERMCAP entry for the Datapoint UNITRM18 
#	asynchronous terminal emulation program. It has only been 
#	tested out at 1200 baud, however, so I don't know if the 
#	delays are correct.
#	
#	[what is control "="?  keys send different codes from functions? - mrh]
#
unitrm18|datapoint 'UNITRM18' terminal emulator,
	cr=^M, ind=^J, cud1=^J, bel=^G, am, cub1=^y,
	ed=^?, el=^>, clear=^=^?$<12.5>, cols#80, cud1=^k, home=^=,
	kcuu1=^x, kcud1=^r, kcub1=^t, kcuf1=^v, lines#24, cuf1=^x, cuu1=^z, 
# Info:
#	FLORIDA COMPUTER GRAPHICS
#	Florida Computer Graphics Beacon System, using terminal emulator
#	program "host.com", as provided by FCG.  Entry provided by
#	David Bryant (cbosg!djb) 1/7/83.
#	This description is for an early release of the "host" program.
#	Known bug: ed clears the whole screen, so it's commented out.
#
beacon|FCG Beacon System,
	cr=^M, cud1=^J, ind=^J, cols#80, lines#32, clear=\EZ$<10>,
	cub1=^H, cup=\E=%p1%' '%+%c%p2%' '%+%c$<20>, cuf1=\EV, cuu1=\EU, el=\ET,
	.ed=\EY, dch1=\EW, ich1=\EQ, dl1=\ER, il1=\EE,
	smcup=\ESTART^M\E2\0540^M\E12^M\EEND^M$<10>,
	bel=\ESTART^M\E37^M\EEND^M$<1>, home=\EH$<10>,
	am, da, db, 
	rev=\ESTART^M\E59\0541^M\EEND^M,
	smso=\ESTART^M\E70\0546^M\EEND^M$<20>,
	rmso=\ESTART^M\E70\0540^M\EEND^M$<20>,
	smul=\ESTART^M\E60\0541^M\EEND^M, 
	rmul=\ESTART^M\E60\0540^M\EEND^M, 
	blink=\ESTART^M\E61\0541^M\EEND^M, 
	sgr0=\ESTART^M\E78^M\E70\0540^M\EEND^M$<20>,
# Info:
#	This doesn't work because the cursor position isn't saved 
#	with the window.
#
beacon-s|FCG Beacon System with status line,
	lines#31, eslok, hs,
	tsl=\ESTART^M\E45\0541^M\E41\054%p1%d\0541^M\EEND^M$<10>,
	fsl=\ESTART^M\E45\0540^M\EEND^M$<10>,
	is2=\ESTART^M\E45\0540^M\E65\05431^M\E66\05445^M\E45\0541^M\E65\0541^M\E66\0541^M\E45\0540^M\EEND^M$<30>,
	use=beacon,
# Info:
#	Here is the xtalk termcap. I mostly use the terminfo (curses) 
#	version myself since I am working at BTL where they have a 
#	certain bias. I am sending the terminfo version too, so that 
#	you can compare them if there are any undiscovered glitches 
#	in the termcap version due to insufficient testing.
#	
#	First the termcap version --
#	
#	d0|vt100|vt100-am|vt100|dec vt100:\
#		:cr=^M:do=^J:nl=^J:bl=^G:co#80:li#24:cl=50\E[;H\E[2J:\
#		:le=^H:bs:am:cm=5\E[i2252;787036H:nd=2\E[C:up=2\E[A:\
#		:ce=3\E[K:cd=50\E[J:so=2\E[7m:se=2\E[m:us=2\E[4m:ue=2\E[m:\
#		:md=2\E[1m:mr=2\E[7m:mb=2\E[5m:me=2\E[m:is=\E[1;24r\E[24;1H:\
#		:rs=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h:ks=\E[?1h\E=:ke=\E[?1l\E>:\
#		:rf=/usr/lib/tabset/vt100:ku=\EOA:kd=\EOB:kr=\EOC:kl=\EOD:kb=^H:\
#		:ho=\E[H:k1=\EOP:k2=\EOQ:k3=\EOR:k4=\EOS:ta=^I:pt:sr=5\EM:vt#3:xn:\
#		:sc=\E7:rc=\E8:cs=\E[i2252;787036r:
#	d1|xtalk|IBM PC with xtalk:\
#		:sc@:rc@:cs@:am@:xn@:al=99\E[L:dl=99\E[M:tc=vt100-am:
#	
#	The problem is in the "xtalk" entry. The "am" auto-margin 
#	flag should not be turned off as shown above. The following 
#	is the corrected "xtalk" entry.
#	
#	d1|xtalk|IBM PC with xtalk:\
#		:sc@:rc@:cs@:xn@:al=99\E[L:dl=99\E[M:tc=vt100-am:
#	
#	This is the shell script that I execute from my profile when I 
#	login from xtalk --
#	
#	# set auto margins
#	echo '\033[?7h\c'
#	#set up tab stops
#	stty -tabs
#	echo '\033[3g'
#	for i in 1 2 3 4 5 6 7 8 9
#	do
#	echo '        \033H\c'
#	done
#	stty tabs
#	echo
#	
#	
#	Now the terminfo version (This is the input to the 'tic' 
#	compiler) --
#	
#	Vanilla vt100 definitions.
#	vt100|vt100-am|dec vt100,
#		cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, it#8,
#		clear=\E[H\E[2J$<50>, cub1=^H, am, cup=\E[ip12252;p2787036H$<5>,
#		cuf1=\E[C$<2>, cuu1=\E[A$<2>, el=\E[K$<3>, ed=\E[J$<50>,
#		cud=\E[p12252B, cuu=\E[p1787036A, cub=\E[p1787088D, cuf=\E[p1787036C, 
#		smso=\E[7m$<2>, rmso=\E[m$<2>, smul=\E[4m$<2>, rmul=\E[m$<2>,
#		bold=\E[1m$<2>, rev=\E[7m$<2>, blink=\E[5m$<2>, sgr0=\E[m$<2>,
#		sgr=\E[?p1t;7;?p2t;4;?p3t;7;?p4t;5;?p6t;1;m,
#		rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, smkx=\E[?1h\E=, rmkx=\E[?1l\E>,
#		tbc=\E[3g, hts=\EH, home=\E[H,
#		kcuu1=\EOA, kcud1=\EOB, kcuf1=\EOC, kcub1=\EOD, kbs=^H,
#		kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS, ht=^I, ri=\EM$<5>,
#		vt#3, xenl, xon, sc=\E7, rc=\E8, csr=\E[ip12252;p2787036r,
#	
#	
#	ibm xtalk terminal simulator -- similar to but dumber than 
#	vanilla vt100
#			Enjoy!
#			Rick Thomas
#			ihnp4!btlunix!rbt
#			(201)-522-6062
#			
#	PS -- I just got word that there is a new revision of xtalk 
#	(3.5 I think they said) that is supposed to fix the vt100 
#	emulation problems.
#
xtalk|IBM PC with xtalk communication program,
	am, mir, msgr, xon,
	cols#80, it#8, lines#24, vt#3, xmc#1,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, clear=\E[H\E[J$<50>, cr=\r, cub=\E[%p1%dD,
	cub1=\b, cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC,
	cuf1=\E[C$<2>, cup=\E[%i%p1%d;%p2%dH$<5>,
	cuu=\E[%p1%dA, cuu1=\E[A$<2>, dl1=\E[M$<99>,
	ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>,
	enacs=\E(B\E)0, home=\E[H, ht=\t, hts=\EH,
	il1=\E[L$<99>, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr,
	kbs=\b, kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, ri=\EM$<5>,
	rmacs=^O, rmkx=\E[?1l\E>, rmso=\E[m\s,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, smacs=^N,
	smkx=\E[?1h\E=, smso=\E[7m\s, tbc=\E[3g,
#	
# Info: 
#	\EI gets you out of inverse video mode.
#
# Info:
#	IBM
#	Thu May  5 19:35:27 1983
#
ibmpc|ibm-pc|ibm5051|5051|IBM Personal Computer,
	cud1=^J, ind=^J$<10>, bel=^G, smir=\200R, am, cub1=^],
	kcud1=^_, clear=^L^K, cr=^M^^, home=^K, lines#24, cuu1=^^,
	cuf1=^\, cols#80,
# Info:
#	According to the Coherent 2.3 manual, the PC console is similar
#	to a z19. The differences seem to be (1) 25 lines, (2) no status
#	line, (3) standout is broken, (4) ins/del line is broken, (5)
#	has blinking and bold.
#
pc-coherent|pcz19|coherent|IBM PC console running Coherent,
	cr=^M, cud1=^J, ind=^J, bel=^G, .il1=\EL$<1*>, am, cub1=^H,
	ed=\EJ, el=\EK, clear=\EE, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80,
	dch1=\EN, .dl1=\EM$<1*>, cud1=\EB, rmir=\EO, home=\EH, smir=\E@,
	lines#25, mir, cuf1=\EC, ht=^I, it#8,
	ri=\EI, rmso=\Eq, smso=\Ep, cuu1=\EA,
	kbs=^h, kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\EH,
# Info:
#	According to the Venix 1.1 manual, the PC console is similar
#	to a DEC vt52. Differences seem to be (1) arrow keys send 
#	different strings, (2) enhanced standout, (3) added 
#	insert/delete line.
#	
#	Note in particular that it doesn't have automatic margins (ick).
#	There are other keys (f1-f10, pgup, pgdn, backtab, insch,delch)
#	which I don't have time to add now.
#
pc-venix|venix|IBM PC console running Venix,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK,
	clear=\EH\EJ, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80, lines#25,
	cuf1=\EC, ht=^I, it#8, ri=\EI, cuu1=\EA,
	kcuu1=\EH, kcud1=\EP, kcuf1=\EM, kcub1=\EK, kbs=^H,
	il1=\EL, dl1=\EM, khome=\EG,
###	BEGIN SCO_BASE
###	1/23/89   sco!law
###	Added sco entries for ibm 3151, 3161, 3163, 3164 for 3.2 merge.
###	 Received from IBM terminal support division through DRB, june 1988
###
###	2/19/89   sco!law
###	Cleaned up errors reported by tic compiler.
###	Removed null strings smir, rmir. Added '=' in ri.
###	Changed nl to nel, and kcd1 to kcud1.
###
###  03 Mar 90	sco!law				ibm3161
###comparing ibm3151 (23.1 pc.ti) to captoinfo of ibm3151 entry
###in 23.2 termcap.
###    comparing booleans.
###	hc: T:F.
###	xon: F:T.
###    comparing numbers.
###    comparing strings.
###	cpi: 'NULL','\E4%{64}%?%p1%{0}%p1%Pc%?%'%'%>%t%gc%'p'%+1%{4}%<%&%t%{8}%|###%;%?%p1%{7}%=%t%{16}%|%;%?%p2%t%{1}%|%;%?%p3%t%{4}%|%;%?%p4%t%{2}%|%;%c'.
###	cub1: 'NULL','\b'.
###	cud1: '\f\snel=\n','\n'.
###	cup: '\EY%p1%{32}%+%c%p2%{32}%+%c','\EY%p1%'\s'%+%c%p2%'\s'%+%c'.
###	dsl: 'NULL','\E=\E='.
###	fsl: 'NULL','\E='.
###	hts: '\E0','\EO'.
###	il1: '\EN','\EX7\s\EO\E\sZ\EN'.
### 	kf0: '\Ea','\Ej\r'.
###	kf1: '\Eb','\Ea\r'.
###	kf2: '\Ec','\Eb\r'.
###	kf3: '\Ed','\Ec\r'.
###	kf4: '\Ee','\Ed\r'.
###	kf5: '\Ef','\Ee\r'.
###	kf6: '\Eg','\Ef\r'.
###	kf7: '\Eh','\Eg\r'.
###	kf8: 'NULL','\Eh\r'.
###	kf9: 'NULL','\Ei\r'.
###	tsl: 'NULL','\E='.
###  Captoinfo of ibm3161 SCO termcap SCCSID 23.2
###  No additions.
###
###	10/3/90		sco!tealas
###	Added kf10 sequence.
###	10/10/90		sco!tealas
###	Added kcbt sequence.
###
###	26jun91		scol!jamesh
###	- added if=/usr/lib/tabset/3101 to fix problem discovered
###	  with 3.2v2 MC on ibm3164, where ^I would cursor home
###
#	Setup parameters:
#		Terminal Mode		IBM 3161
#		Auto Linefeed		OFF
#		Operating Mode		ECHO
#		Line Speed		(typically 9600)
#		Word Length		8
#		Parity			NO
#		Stop Bit		1
#		Line Control		IPRTS
#		Turnaround Character	CR
#		
ibm3163|i3163|3163,
	am, bw, in, xon,
	cols#80, lines#24,
	if=/usr/lib/tabset/3101,
	bel=^G, kcbt=\E2, cbt=\E2, clear=\EK,
	cpi=\E4%{64}%?%p1%{0}%p1%Pc%?%'%'%>%t%gc%'p'%+1%{4}%<%&%t%{8}%|%e%p1%{7}%=%t%{16}%|%;%;%?%p2%t%{1}%|%;%?%p3%t%{4}%|%;%?%p4%t%{2}%|%;%c,
	cr=\r, cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA, dch1=\EQ,
	dl1=\EO, dsl=\E=\E=, ed=\EJ, el=\EI, ff=\f, fsl=\E=,
	home=\EH, ht=\t, hts=\EO, ich1=\EP,
	il1=\EX7\s\EO\E\sZ\EN, ind=\E\sM, is2=\E\s1, kbs=\b,
	kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA, kf0=\Ej\r,
	kf1=\Ea\r, kf2=\Eb\r, kf3=\Ec\r, kf4=\Ed\r, kf5=\Ee\r,
	kf6=\Ef\r, kf7=\Eg\r, kf8=\Eh\r, kf9=\Ei\r, kf10=\Ej\r, khome=\EH,
	ri=\E!M, rmso=\E4@, rmul=\E4@, smso=\E4A, smul=\E4B,
	tbc=\E\s1, tsl=\E=,
# ZA=\E4
#       %{64
#       %?%p1%{0}%>              #  if p1 > 0 and P1 < 4 then 
#       %p1%{4}%<%&%t%{8}%|      #     OR the 8 bit for high intensity
#       %e%p1%{7}%=%t%{16}%|%;%; #  if p1 = 7 then OR the 16 bit for non-display
#	%?%p2%t%{1}%|%;		 #  if p2 set, then OR the 1 bit for reverse
#	%?%p3%t%{4}%|%;		 #  if p3 set, then OR the 4 bit for blink
#	%?%p4%t%{2}%|%;		 #  if p4 set, then OR the 2 bit for underline
#	%c                       #  pop final Pa1
#
###  03 Mar 90	sco!law				ibm3151
###  Captoinfo of ibm3151 SCO termcap SCCSID 23.2
###  Refer to comments at the beginning of ibm3163
###  No additions.
ibm3164|i3164|3164,
	blink=\E4D, bold=\E4H,
	cpi=\E4%{32}%?%p2%t%{1}%|%;%?%p3%t%{4}%|%;%?%p4%t%{2}%|%;%c%{39}%p1%-%c%{64}%c,
	sgr0=\E4@,
	use=3163,
# ZA=\E4
#	%{32}	        # push space for no special video characteristics
#	%?%p2%t%{1}%|%; # if p2 set, then OR the 1 bit for reverse
#	%?%p3%t%{4}%|%; # if p3 set, then OR the 4 bit for blink
#	%?%p4%t%{2}%|%; # if p4 set, then OR the 2 bit for underline
#	%c              # pop Pa1
#	%{39}%p1%-	# calculate 32 + (7 - p1) for forground
#	%c		# pop Pa2 
#	%{64}		# use only black background for now
#	%c		# pop Pa3
###
#
#  IBM 3151 Setup parameters:
#		Terminal Mode		IBM 3151
#		Auto Linefeed		OFF
#		Operating Mode		ECHO
#		Line Speed		(typically 9600)
#		Word Length		8
#		Parity			NO
#		Stop Bit		1
#		Line Control		IPRTS
#		Turnaround Character	CR
###
###	27 Aug 1990
###     Removed dependency on 3163.
###      
###	10/3/90		sco!tealas
###	Added	kf10 sequence.
###	10/5/90		sco!tealas
###	Changed kbs sequence to ^H.
###	10/10/90		sco!tealas
###	Added kcbt sequence.
###
###	10/25/90	sco!hitesh
###	Added scan code support
###
###	11/12/90	sco!hitesh
###	removed kf0   
###
###	12/19/90	sco!hitesh
###	Removed smxon, rmxon, smsc and rmsc
###
###	3/1/91		sco!davidf
###	Add eslok, hs;  remove cbt(mvw conflict);  pad ich1
###
ibm3151|i3151|3151,
	am, bw, eslok, hs, in, xon,
	cols#80, lines#24,
	acsc=kkllmmjjnnwwqquuttvvxx, bel=^G, kcbt=\E2,
	clear=\EK, 
	cr=\r, cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA, dch1=\EQ,
	dl1=\EO, dsl=\E=\E=, ed=\EJ, el=\EI, ff=\f, fsl=\E=,
	home=\EH, ht=\t, hts=\EO, ich1=\EP$<15>,
	il1=\EX7\s\EO\E\sZ\EN, ind=\E\sM, is2=\E\s1, kbs=^H,
	kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA, 
	kf1=\Ea\n, kf2=\Eb\n, kf3=\Ec\n, kf4=\Ed\n, 
	kf5=\Ee\n, kf6=\Ef\n, kf7=\Eg\n, kf8=\Eh\n, 
	kf9=\Ei\n, kf10=\Ej\n, khome=\EH,
	ri=\E!M, rmacs=\E<@, rmso=\E4@, rmul=\E4@,
	sgr0=\E4@, smacs=\E<A, smso=\E4A, smul=\E4B,
	tbc=\E\s1, tsl=\E=, 
###
###	12/19/90	sco!hitesh
###	Added support for ibm3151-pc
ibm3151-pc|3151-pc|IBM 3151 terminal in PC term mode,
	acsc=k\277l\332m\300j\331n\305w\302q\304u\264t\303v\301x\263,
	cub1=\E[D, cud1=\E[B, cuf1=\E[C, cuu1=\E[A, 
	cbt=\E[Z, il=\E[L, il1=\E[L, ich1=\E[@,
	dch1=\E[P, dl1=\E[M,
	kcbt=\E[Z, kdch1=\E[P, kdl1=\E[M, kich1=\E[@,
	kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, kcub1=\E[D,
	kend=\E[F, kf1=\E[M, kf10=\E[V, kf2=\E[N, kf3=\E[O,
	kf4=\E[P, kf5=\E[Q, kf6=\E[R, kf7=\E[S, kf8=\E[T,
	kf9=\E[U, khome=\E[H, knp=\E[G, kpp=\E[I, 
	smsc=500\E\0409<B, rmsc=500\E\0409@,
	xonc=\145, xoffc=\147,
	use=3151,
# ZA=\E4
#	%{64}		# push 1000000 for no special video characteristics
#	%?%p1%{0}%>	# if p1 between 1 and 3, then set 8 bit for bold
#	%p1%{4}%<%&%t%{8}%|%;
#	%?%p1%{7}%t%{16}%|%; # if p1 = 7, then set 16 bit for invisible
#	%?%p2%t%{1}%|%; # if p2 set, then set the 1 bit for reverse
#	%?%p3%t%{4}%|%; # if p4 set, then set the 4 bit for blink
#	%?%p4%t%{2}%|%; # if p4 set, then set the 2 bit for underline
#	%c		# pop Pa1
#
#
###  03 Mar 90	sco!law				ibm3101
###  Captoinfo of ibm3101 SCO termcap SCCSID 23.2
###  Refer to comments at the beginning of ibm3163
###  No additions.
ibm3101|3101|i3101|IBM 3101-10,
	am, xon,
	cols#80, lines#24,
	bel=^G, clear=\EK, cr=\r, cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA, ed=\EJ,
	el=\EI, home=\EH, ht=\t, hts=\E0, ind=\n, kcub1=\ED,
	kcud1=\EB, kcuf1=\EC, kcuu1=\EA, tbc=\EH,
ibm3161|3161,
	ind=\n, ri@,
	use=3163,
ibm-system1|system1|ibm system/1 computer,
	ind=^J, bel=^G, xt, am, cub1=^H,
	cup=^E%p1%' '%+%c%p2%' '%+%c, clear=^Z,
	cols#80, home=^K, lines#24, cuf1=^\, cuu1=^^, 
megatek|Pegasus Work Station Terminal Emulator,
	cols#83, lines#60, os, am,
# Info:
#	sol and Microkit are for Corey - 6/11/82 - NS
#
microkit|mkt|microkit terminal computer,
	cr=^M, ind=^J, cud1=^J, bel=^G,
	il1=\El, am, cub1=^H, ed=\Ej, el=\Ek, clear=\Ee,
	cup=\Ey%p1%' '%+%c%p2%' '%+%c, cols#40, dch1=\En, dl1=\Em,
	rmir=\Eo, home=\Eh, smir=\E@, lines#23, mir,
	cuf1=\Ec, cuu1=\Ea, ht=^I, cvvis=^N^Lzv, cnorm=\Ex,
	kcuu1=\Eu, kcud1=\Ed, kcub1=\El, kcuf1=\Er, khome=\Eh, xenl, 
# Info:
#	OSBORNE
#	Thu Jul  7 03:55:16 1983
#	
#	As an aside, be careful; it may sound like an anomaly on the 
#	Osborne, but with the 80-column upgrade, it's too easy to 
#	enter lines >80 columns!
#	
#	I've already had several comments...
#	The Osborne-1 with the 80-col option is capable of being 
#	52,80, or 104 characters wide; default to 80 for compatibility 
#	with most systems.
#	
#	The tab is destructive on the Ozzie; make sure to 'stty -tabs'.
#
ozzie|osborne|osborne1|osborne 1,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, cub1=^H, el=\ET,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z, cols#104, dch1=\EW, dl1=\ER,
	kcuu1=^K, kcud1=^J, kcub1=^H, kcuf1=^L, cud1=^J, cuf1=^L,
	ich1=\EQ, lines#24, cuu1=^K, msgr, smso=\E), rmso=\E(,
	ul, smul=\El, rmul=\Em, xt,
# Info:
#	SOL
#	I don't know which, if either, of these sol's to believe.
#	^S is an arrow key!  
#
sol|sol1|,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, cup=\E^1%p1%c\E^2%p2%c,
	clear=^K, home=^N, cols#64, lines#16, cuf1=^S, cuu1=^W,
	kcub1=^A, kcuf1=^S, kcuu1=^W, kcud1=^Z,
# Info:
#	sol and Microkit are for Corey - 6/11/82 - NS
#
sol2|sol terminal computer,
	cr=^M, ind=^J$<20>, cud1=^J, bel=^G,
	il1=20\EL, am, cub1=^H, ed=20\EJ, el=\EK, clear=20\EE,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#64, dch1=\EN, dl1=20\EM,
	rmir=\EO, home=\EH, smir=\E@, lines#16, mir, cuf1=\EC,
	cuu1=\EA, ht=^I, cvvis=^N^Lv, cnorm=\EX,
	kcuu1=\EU, kcud1=\ED, kcub1=\EL, kcuf1=\ER, khome=\EH, xenl, 
# Info:
#	SUN
#	smcup/rmcup control # lines scrolled on linefeed. The sun 2 
#	seems to handle this well with it set to 1, so both force this. 
#	rmcup could use 0 or 3 just as well, I suppose.
#
sun|sun1|sun2|sun microsystems inc workstation,
	cr=^M, cud1=\E[B, ind=^J, bel=^G, am, km, cub1=^H, clear=^L,
	lines#34, cols#80, cup=\E[%i%p1%d;%p2%dH, cuf1=\E[C, cuu1=\E[A,
	el=\E[K, ed=\E[J, smcup=\E[1r, rmcup=\E[1r, kcud1=\E[B,
	kcub1=\E[D, kcuu1=\E[A, kcuf1=\E[C, khome=\E[H, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, ht=^I, il1=\E[L, dl1=\E[M,
	smso=\E[7m, rmso=\E[m, msgr, ich1=\E[@, mir, dch1=\E[P,
terak|Terak emulating Datamedia 1520,
	am, xenl,
	cols#80, lines#24,
	bel=^G, clear=\f, cr=\r, cub1=\b, cud1=\n, cuf1=^\,
	cup=^^%p2%'\s'%+%c%p1%'\s'%+%c, cuu1=^_, ed=^K, el=^],
	home=^Y, ht=\t, ind=\n, kcub1=\b, kcud1=\n, kcuf1=^\,
	kcuu1=^_, khome=^Y,
# XEROX
x820|Xerox 820,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c,
	clear=1^Z, ed=^Q, el=^X, cols#80, home=^^, lines#24,
	cuf1=^L, cuu1=^K,

# COLOR EMULATORS

gs6300|emots|AT&T PC6300 with EMOTS Terminal Emulator,

# background color erase

	am, msgr, xon, bce,
	cols#80, it#8, lines#24, colors#8, pairs#63,
	acsc=\,\,..--++``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[H\E[J,
	cr=\r, cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, dch=\E[%p1%dP, dch1=\E[P,
	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, .el1=\E[1K,
	home=\E[H, ht=\t, ich=\E[%p1%d@, ich1=\E[@,
	il=\E[%p1%dL, il1=\E[L, ind=\n, is2=\E[0m, kbs=\b,
	kcbt=^R\t, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C,
	kcuu1=\E[A, kf1=\E[0s, kf2=\E[24s, kf3=\E[1s,
	kf4=\E[23s, kf5=\E[2s, kf6=\E[22s, kf7=\E[3s,
	kf8=\E[21s, khome=\E[H, mc4=\E[4i, mc5=\E[5i,
	rev=\E[7m, ri=\E[L, rmacs=\E[10m, rmln=\E|, rs1=\Ec,
	sgr0=\E[m\E[10m, smacs=\E[11m, smso=\E[1m, smul=\E[4m,

#	color information.  blue foreground is simulated with cyan

	op=\E[?;m,
	setf=\E[?%?%p1%{0}%=%t0
		 %e%p1%{1}%=%t2
		 %e%p1%{1}%-%d%;m,
	setb=\E[?;%p1%dm,


pc52|dec vt52 for PC,

#	background color erase

	am, msgr, bce,
	cols#80, it#8, lines#25,

# 	bold means: white on black bold, so it not allowed with colors
# 	rev meand: black on white, also not allowed
#	smso and dim are simulated with colors, ditto
#	smul is allowed, even though it always means white foreground:
#	it is too important.

	colors#8, pairs#63, ncv#53,
	bel=^G, blink=\Eo, bold=\Ebo\Ec0, clear=\EH\EJ, cr=\r,
	cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA,
	dim=\Eb3\Ec0, dl1=\EM, ed=\EJ, el=\EK, ht=\t, il1=\EL,
	ind=\n, kbs=\b, kcub1=\EL, kcud1=\ED, kcuf1=\ER,
	kcuu1=\EU, kf1=\Ea, kf10=\Ej, kf2=\Eb, kf3=\Ec,
	kf4=\Ed, kf5=\Ee, kf6=\Ef, kf7=\Eg, kf8=\Eh, kf9=\Ei,
	rev=\Ep, ri=\EI, rmso=\Eb7\Ec0, sgr0=\Eb7\Ec0\Et, smso=\Eb6\Ec4,
	smul=\Es,

#	color information.  blue foreground is simulated with cyan

	op=\Eb7\Ec0,
	setf=\Eb%?%p1%{1}%=%t3
	        %e%p1%d%;,
	setb=\Ec%p1%d,


# CTRM terminal emulator

ctrm|C terminal emulator,

	am, xon,

# back_color_erase
# underlining is not allowed with colors: first, is is simulated by 
# black on white, second, it disables background color manipulations.

	bce,
	cols#80, lh#0, lines#24, lm#0, lw#0, nlab#0, colors#8, pairs#63,
	pb#19200, vt#6, ncv#2,
	bel=^G, cbt=\Ei, clear=\EH\EJ, cr=\r, cub1=\b,
	cud1=\n, cuf1=\EC, cup=\E&a%p2%dc%p1%dY, cuu1=\EA,
	dch1=\EP$<2>, dl1=\EM, ed=\EJ, el=\EK, hpa=\E&a%p1%dC,
	ht=\t$<2>, hts=\E1, il1=\EL, ind=\n, ip=$<2>,
	is2=\E&jA\r, kbs=\b, kcub1=\Eu\r, kcud1=\Ew\r,
	kcuf1=\Ev\r, kcuu1=\Et\r, kf1=\Ep\r, kf2=\Eq\r,
	kf3=\Er\r, kf4=\Es\r, kf5=\Et\r, kf6=\Eu\r, kf7=\Ev\r,
	kf8=\Ew\r, khome=\Ep\r, rmir=\ER, rmkx=\E&jA, smir=\EQ,
	smkx=\E&jB, smso=\E&dD, smul=\E&dD, tbc=\E3,
	vpa=\E&a%p1%dY,

# BLINKING, REVERSE and BOLD are allowed with colors,
# so we have to save their status in the static registers A, B and H
# respectively, to be able to restore them when color changes
# (because any color change turns off ALL attributes)

	blink=\E&dA%{1}%PA,

# "enter_bold_mode" and "enter_reverse_mode" sequences alternates modes,
# rather then simply  entering them.  Thus we have to check the
# static register B and H to determine the status, before sending the 
# escape sequence.

	rev=%?%gB%{0}%=%t\E&dB%{1}%PB%;,
	bold=%?%gH%{0}%=%t\E&dH%{1}%PH%;,

	smul=\E&dD,

# sgr0 now must set the status of all 3 register (A,B,H) to zero
# and then reset colors

	sgr0=\E&d@%{0}%PA%{0}%PB%{0}%PH,

# implementation of the protect mode would badly penalize the performance.
# we would have to use \E&bn sequence to turn off colors (as well as all
# other attributes), and keep the status of protect mode in yet another
# static variable.  If someone really need this mode, they would have to
# create another terminfo entry.

	sgr=\E&d@%{0}%PA%{0}%PB%{0}%PD%{0}%PH
		 %?%p1%p3%p5%|%|%t\E&dB%{1}%PB%;
		 %?%p4%t\E&dA%{1}%PA%;
		 %?%p6%t\E&dH%{1}%PH%;
		 %?%p2%t\E&dD%;,

# original color-pair: white on black.
# store the information about colors into static registers

	op=\E&bn\E&bB\E&bG\E&bR
	    %{0}%PX%{0}%PY%{0}%PZ
	    %{1}%PW%{1}%PV%{1}%PU,

# set foreground color.  it performs the following steps.
#   1) turn off all attributes
#   2) turn on the background and video attribues that have been turned
#      on before (this information is stored in static registers X,Y,Z,A,B,H,D).
#   3) turn on foreground attributes
#   4) store information about foreground into U,V,W static registers

	setf=\E&bn
		%?%gA%t\E&dA%;
		%?%gB%t\E&dB%;
		%?%gH%t\E&dH%;
		%?%gX%t\E&br%;
		%?%gY%t\E&bg%;
		%?%gZ%t\E&bb%;

		%?%p1%{1}%&%t\E&bB%{1}%e%{0}%;%PW
		%?%p1%{2}%&%t\E&bG%{1}%e%{0}%;%PV
		%?%p1%{4}%&%t\E&bR%{1}%e%{0}%;%PU,

# turn on background: similar to turn on foreground above

	setb=\E&bn
		%?%gA%t\E&dA%;
		%?%gB%t\E&dB%;
		%?%gH%t\E&dH%;
		%?%gU%t\E&bR%;
		%?%gV%t\E&bG%;
		%?%gW%t\E&bB%;

		%?%p1%{1}%&%t\E&bb%{1}%e%{0}%;%PZ
		%?%p1%{2}%&%t\E&bg%{1}%e%{0}%;%PY
		%?%p1%{4}%&%t\E&br%{1}%e%{0}%;%PX,
