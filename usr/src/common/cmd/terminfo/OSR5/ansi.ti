#ident	"@(#)terminfo:common/cmd/terminfo/OSR5/ansi.ti	1.1"
#
#	@(#) ansi.ti 58.1 96/10/09 
###
###	      UNIX is a registered trademark of AT&T
###		Portions Copyright 1976-1989 AT&T
###	Portions Copyright 1980-1989 Microsoft Corporation
###    Portions Copyright 1983-1996 The Santa Cruz Operation, Inc
###		      All Rights Reserved
#
###	BEGIN SCO_BASE
###
###     01 Mar 89    sco!law
###     Changed name of AT&T's ansi to ansiterm and added
###     SCO's 'ansi' entry for the standard ansi console.
###
###     Ansi standard console.
###     Created from SCO ansi termcap entry (SID 1.42 termcap file)
###     using 3.2 captoinfo.
###
###	09 May 89	sco!law
###	Added kpp, knp, kend, khome
###
###     14 June 89	sco!beckyw
###	Color support added to ansi standard console.
###	Specifically, added the bool bce, the numbers color and pair
###	the strings initc, op, setf and setb.
###
###	29 Oct 89	sco!law
###	Added rmacs, smacs, acsc, rev, invis by request
###	from sco support (Chrisro).  Untested.  Rev & invis
###	are part of the ansi spec, but may not be universal.
###	2/6/90		sco!hitesh
###	Added ',' after 'pairs#64'
###	removed initc=, (null)
###
###	27 Aug 1990 sco!hitesh
###comparing ansi to ansio.
###    comparing booleans.
###    comparing numbers.
###    comparing strings.
###	acsc: '0[a1fxgqh2jYk?lZm@nEqDtCu4vAwBx3','k?lZm@jYnEwBvAuCt4qDx3'.
###	sgr: '\E[0;1%?%p9%t2%e0%;%?%p1%p3%|%t;7%;%?%p2%t;4%;%?%p4%t;5%;%?%p6%t;1%;%?%p7%t;8%;m','NULL'.
###
### 	05 Oct 1990 	sco!tealas
###	Added kf10 sequence to ansic entry.
###	10 Oct 1990	sco!tealas
###	Added kcbt sequence to ansic entry.
###	
###	10/25/90	sco!hitesh
###	Added scan code support
###
###	12/3/90		sco!hitesh
###	Fixed sgr and el
###	12/14/90	sco!hitesh
###	Fixed ed 
###
###	12/18/90	sco!hitesh
###	Added ansi-pc and ansic-pc as a synonym 
###	Changed smxon and rmxon to xonc and xoffc
###
###	3/29/91		sco!davidf
###	add kich1 to enable Insert key;
###	add civis and cnorm
###	4/9/91		sco!davidf
###	comment-out 'sgr' for JSB Desktop to fix line-drawing
###	5/2/91		sco!davidf
###	removed smsc/rmsc and xonc/xoffc to ansi_pc
###	12jul91		scol!harveyt
###	removed civis=\E[=14;12C, cnorm=\E[=11;12C,
###	civis works, but cnorm does not on CGA, so the cursor
###	disappears forever in sysadmsh: re-examine this later
###	27nov91		scol!anthonys
###	added kf11 and kf12 
###	30Jan92		sco!chapman
###	Invented ansi_ncc to allow an esacpe from the annoying
###	color curses problems.
###	19 aug 94	sco!shawnm & scol!corinnew
###	created ansi_vtcl for use with Charm
###	28 Sep 94	scol!philk
###	renamed ansi_vtcl to ansi, ansi to ansi_32v4, for vTcl
###	support without changing TERM.
###	6 Oct 94	scol!philk
###	Backed out last change, reconstituted the old ansi entry
###	Added the requested capabilities to new ansi_vtcl entry
###	31 Oct 94	sco!hops, sco!louisi, scol!jamesh
###	Modifications to fix acsc entry to not use Up/Down arrows;
###	Fix cursor normal/invisible entry to not use blinking block
###	Remove ansi_vtcl entry - now supported by standard ANSI entry
###	7 Nov 94	scol!jamesh
###	Fix acsc to not use left/right arrows;
###	Restore solid block entry to original ('[') instead of inadvertent
###	diamond ('z')
###	Added ansi_intl entry for use in ISO8859 locale settings; same as ansi
###	but has no line drawing support (i.e. no acsc, smacs, rmacs)
###	15 Feb 95	scol!anthonys
###	Added entries ansi-437, ansi-8859, ansi-850, which use
###	appropriate line drawing capabilities of the corresponding vidi fonts.
###	09 Oct 96	sco!garyh
###	Added ansi-850 entry
###
ansi_ncc|ansi80x25_ncc|Ansi No Color Change,
	am, bce, eo, xon,
	cols#80, lines#25, it#8,
        acsc=0[I|`ja0fxgqh2jYk?lZm@nEqDtCu4vAwBx3~y;;IIHH<<JJKKMM::LL99NN88UUTT>>OOQQFF55XX77VVSS==PPRRGG66WW,
	blink=\E[5m, bold=\E[1m, invis=\E[8m, rev=\E[7m, 
	clear=\E[2J\E[H,
	bel=^G, cbt=\E[Z, cr=\r, 
	cup=\E[%i%p1%d;%p2%dH, 
	cub1=\b, cud1=\E[B, cuf1=\E[C, cuu1=\E[A, 
	home=\E[H, ht=\t, ind=\E[S, ri=\E[T, 
	dch1=\E[P, dl1=\E[M, ed=\E[m\E[J, el=\E[m\E[K, 
	ich1=\E[@, il1=\E[L, 
	kbs=\b, kcbt=\E[Z, kich1=\E[L,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kf1=\E[M, kf2=\E[N, kf3=\E[O, kf4=\E[P, kf5=\E[Q, 
	kf6=\E[R, kf7=\E[S, kf8=\E[T, kf9=\E[U, kf10=\E[V,
	kf11=\E[W, kf12=\E[X,
	khome=\E[H, kend=\E[F, knp=\E[G, kpp=\E[I, 
	rmacs=\E[10m, rmso=\E[m, rmul=\E[m, 
	smacs=\E[12m, smso=\E[7m, smul=\E[4m,
	sgr0=\E[10;0m, 
        kLFT=\E[d, kRIT=\E[c,
        kdch1=^?,
        civis=\E[=14;12C,
        cnorm=\E[=10;12C,

###	28 Sep 94 scol!philk
###	used to be ansi|ansic|ansi80x25|Ansi standard console,
###	4 Oct 94  scol!philk
###	back to default standard ansi console

ansi|ansic|ansi-437|ansi80x25|Ansi standard console,
	colors#8, pairs#64,
	setb=\E[4%p1%dm, setf=\E[3%p1%dm, op=\E[37;40m,
	use=ansi_ncc,
###
###	7 Nov 94	scol!jamesh
###	added to provide basic support when console is in ISO8859 character
###	set. Same as standard ANSI, but _no_ line drawing character set here.
###
ansi_intl|ansii|Ansi International Set,
	colors#8, pairs#64,
	setb=\E[4%p1%dm, setf=\E[3%p1%dm, op=\E[37;40m,
	am, bce, eo, xon,
	cols#80, lines#25, it#8,
	blink=\E[5m, bold=\E[1m, invis=\E[8m, rev=\E[7m, 
	clear=\E[2J\E[H,
	bel=^G, cbt=\E[Z, cr=\r, 
	cup=\E[%i%p1%d;%p2%dH, 
	cub1=\b, cud1=\E[B, cuf1=\E[C, cuu1=\E[A, 
	home=\E[H, ht=\t, ind=\E[S, ri=\E[T, 
	dch1=\E[P, dl1=\E[M, ed=\E[m\E[J, el=\E[m\E[K, 
	ich1=\E[@, il1=\E[L, 
	kbs=\b, kcbt=\E[Z, kich1=\E[L,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kf1=\E[M, kf2=\E[N, kf3=\E[O, kf4=\E[P, kf5=\E[Q, 
	kf6=\E[R, kf7=\E[S, kf8=\E[T, kf9=\E[U, kf10=\E[V,
	kf11=\E[W, kf12=\E[X,
	khome=\E[H, kend=\E[F, knp=\E[G, kpp=\E[I, 
	rmso=\E[m, rmul=\E[m, 
	smso=\E[7m, smul=\E[4m,
	sgr0=\E[10;0m, 
        kLFT=\E[d, kRIT=\E[c,
        kdch1=^?,
        civis=\E[=14;12C,
        cnorm=\E[=10;12C,

ansi-8859|Ansi8 standard console,
	acsc=a^Bf0g1j^Kk^Ll^Mm^Nn^Oq^Rt^Uu^Vv^Ww^Xx^Y~y,
	rmacs=\E[10m, smacs=\E[12m,
	use=ansii,

ansi-850|Ansi8 standard console,
	acsc=0[`ja0fxgqh2jYk?lZm@nEqDtCu4vAwBx3~y,
	rmacs=\E[10m, smacs=\E[12m,
	use=ansii,

ansi-852|Ansi8 standard console,
        acsc=0[`ja0fxgqh2jYk?lZm@nEqDtCu4vAwBx3~y,
        rmacs=\E[10m, smacs=\E[12m,
        use=ansii,
#
###	5/2/91		sco!davidf
#	Adding an ansi_pc entry to accommodate JSB Desktop
#	using Word or other scancode applications.  This will
#	allow users to log in as ansi_pc, rather than having to
#	change $TERM just to run Word, then reset it.
#
ansi_pc|Ansi standard crt,
	smsc=\E~5$<2000>, rmsc=\E~4$<2000>,
	xonc=\145, xoffc=\147,
	use=ansi, 
#
#
# # ANSITERM - standards and other nonexistent terminals emulated in software.
#
# Manufacturer:	ANSI - Generic
# Class:	III
# 
# Info:
#	This category is used for terminals people "make up" in software
#	that do not represent a particular piece of hardware. This 
#	includes standards, such as the ANSI standard, as well as 
#	emulator programs that accept a particular set of escape 
#	sequences.
#	
#	ANSI capabilities are broken up into pieces, so that a terminal
#	implementing some ANSI subset can use many of them.
#
ansiterm+loc,
	cud=\E[%p1%dB, cub=\E[%p1%dD, cuf=\E[%p1%dC, cuu=\E[%p1%dA,
ansiterm+loc1,
	cud1=^J, cub1=^H, cuf1=\E[C, cuu1=\E[A,
ansiterm+tabs,
	ht=^I, cbt=\E[Z, hts=\EH, tbc=\E[2g,
ansiterm+erase,
	ed=\E[J, el=\E[K, clear=\E[H\E[J,
ansiterm+rca,
	hpa=\E[%p1%{1}%+%dG, vpa=\E[%p1%{1}%+%dd,
ansiterm+cup,
	cup=\E[%i%p1%d;%p2%dH, home=\E[H,
ansiterm+rep,
	rep=%p1%c\E[%p2%{1}%-%db,
ansiterm+idl,
	dl=\E[%p1%dM, il=\E[%p1%dL,
ansiterm+idl1,
	dl1=\E[M, il1=\E[L,
ansiterm+idc,
	dch1=\E[P, ich=\E[%p1%d@, ich1=\E[@, 
#	smir=\E6, rmir=\E6,	commented out by ehr3
ansiterm+arrow,
	kcuu1=\E[A, kcud1=\E[B, kcub1=\E[D, kcuf1=\E[C, khome=\E[H, kbs=^H,
ansiterm+sgr|ansi graphic renditions,
	rev=\E[7m, blink=\E[5m, invis=\E[8m, sgr0=\E[0m,
ansiterm+sgrso|ansi standout only,
	rmso=\E[m, smso=\E[7m,
ansiterm+sgrul|ansi underline only,
	rmul=\E[m, smul=\E[4m,
ansiterm+sgrbd|ansi graphic renditions; assuming terminal has bold; not dim,
	bold=\E[1m,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m,
	use=ansiterm+sgr, use=ansiterm+sgrso, use=ansiterm+sgrul,
ansiterm+sgrdm|ansi graphic renditions; assuming terminal has dim; not bold,
	dim=\E[2m,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p5%t2;%;m,
	use=ansiterm+sgr, use=ansiterm+sgrso, use=ansiterm+sgrul,
ansiterm+pp|ansi printer port,
	mc4=\E[4i, mc5=\E[5i, mc0=\E[0i,
# Info:
#	ANSI is a vanilla ANSI terminal. This is assumed to implement 
#	all the normal ANSI stuff with no extensions. It assumes 
#	insert/delete line/char is there, so it won't work with 
#	vt100 clones. It assumes video attributes for bold, blink, 
#	underline, and reverse, which won't matter much if the terminal 
#	can't do some of those. Padding is assumed to be zero, which 
#	shouldn't hurt since xon/xoff is assumed.
#	
#	We assume a 24x80 screen. This entry was derived from the 
#	Ann Arbor Ambassador, and is untested.
#
ansiterm|generic ansi standard terminal,
	use=vanilla, am, cols#80, lines#24, xon,
	use=ansiterm+cup, use=ansiterm+rca,
	use=ansiterm+erase,
	use=ansiterm+tabs,
	use=ansiterm+loc1, use=ansiterm+loc,
	use=ansiterm+idc, use=ansiterm+idl1, use=ansiterm+idl,
	use=ansiterm+rep,
	use=ansiterm+sgrbd, use=ansiterm+arrow,
# Info:
#	Bare minimum ANSI terminal. This should work on anything, but 
#	beware of screen size problems and memory relative cursor 
#	addressing.
#
minansiterm|minimum ansi standard terminal,
	am, xon, use=vanilla, cols#80, lines#24,
	use=ansiterm+cup, use=ansiterm+erase,
# Info:
#	This terminal type is for ANSI terminals with ONLY memory 
#	relative cursor addressing and more than one page of memory.
#	It uses local motions instead of direct cursor addressing, 
#	and makes almost no assumptions. It does assume auto margins, 
#	no padding and/or xon/xoff, and a 24x80 screen.
#
mransiterm|mem rel cup ansi,
	am, use=vanilla, cols#80, lines#24, xon,
	use=ansiterm+erase, use=ansiterm+loc1,
# Info:
#	Columbus UNIX virtual terminal. This terminal also appears in 
#	UNIX 4.0 and successors as line discipline 1 (?), but is 
#	undocumented and does not really work quite right.
#
virtual|cbunix|cb-unix|cb-unix virtual terminal,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, am, clear=\EJ,
	cub1=^H, cup=\EG%p2%c%p1%c, cuf1=\EC, cuu1=\EA, el=\EK,
	ed=\EL, il1=\EP, dl1=\EN, ich1=\EO, dch1=\EM, lm#0, da, db,
	kcub1=\ED, kcuf1=\EC, kcuu1=\EA, kcud1=\EB, khome=\EE,
	smso=\Ea\004, rmso=\Eb\004, smul=\Ea\001, rmul=\Eb\001,
# Info:
#	This terminal is based on virtual but cleans up a few problems 
#	with control characters in parameter strings. It is implemented 
#	in mrh's window manager.
#
pty|4bsd pty terminal,
	smso=\Ea$, rmso=\Eb$, smul=\Ea!, rmul=\Eb!,
	cup=\EG%p1%' '%+%c%p2%' '%+%c, use=virtual,
# Info:
#	A dumb terminal with 1 line which is a fake status line.
#	This is useful to run sysline in in a multi-window environment.
#
1line|one_line|one line window,
	cr=^M, ind=^J, cols#80, lines#1, am, ht=^I, cub1=^H,
	hs, tsl=\n,
# Info:
#	1linepty is like 1line but the 1 line window is smarter,
#	with standout, cursor addressing, and clear to eol.
#
1linepty|one_linepty|1 line window in a pty,
	smso=\Ea$, rmso=\Eb$, smul=\Ea!, rmul=\Eb!,
	cup=\EG%p1%' '%+%c%p2%' '%+%c, tsl=\r\EK\EG %p2%' '%+%c,
	eslok, use=1line,
vanilla,
	bel=^G, cr=^M, cud1=^J, ind=^J,
datakit,
	am, gn,
	cols#80,
	bel=^G, cr=\r, cud1=\n, ind=\n,
