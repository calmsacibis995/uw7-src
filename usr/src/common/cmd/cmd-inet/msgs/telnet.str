%{
#ident	"@(#)telnet.str	1.2"
/* copyright	"%c%" */
%}
%# 1;;
Usage: %s %s%s%s%s\n
%# 2;;
 Bad TOS argument '%s; will try to use default TOS\n
%# 3;;
 -S ignored, no parsetos() support.\n
%# 4;;
 -k ignored, no Kerberos V4 support.\n
%# 5;;
 -t ignored, no TN3270 support.\n
%# 6;;
 -x ignored, no ENCRYPT support.\n
%# 7;;
Send Telnet Abort output
%# 8;;
Send Telnet 'Are You There'
%# 9;;
Send Telnet Break
%# 10;;
Send Telnet Erase Character
%# 11;;
Send Telnet Erase Line
%# 12;;
Send current escape character
%# 13;;
Send Telnet 'Go Ahead' sequence
%# 14;;
Send Telnet Interrupt Process
%# 15;;
Send Telnet 'No operation'
%# 16;;
Send Telnet 'End of Record'
%# 17;;
Send Telnet 'Abort Process'
%# 18;;
Send Telnet 'Suspend Process'
%# 19;;
Send Telnet End of File Character
%# 20;;
Perform Telnet 'Synch operation'
%# 21;;
Send request for STATUS
%# 22;;
Display send options
%# 23;;
need at least one argument for 'send' command\n
%# 24;;
'send ?' for help\n
%# 25;;
Unknown send argument '%s'\n'send ?' for help.\n
%# 26;;
Ambiguous send argument '%s'\n'send ?' for help.\n
%# 27;;
Need 1 argument to 'send %s' command.  'send %s ?' for help.\n
%# 28;;
Need %d arguments to 'send %s' command.  'send %s ?' for help.\n
%# 29;;
?Need to be connected first.\n
%# 30;;
There is not enough room in the buffer TO the network\nto process your request.  Nothing will be done.\n('send synch' will throw away most data in the network\nbuffer, if this might help.)\n
%# 31;;

%# 32;;

%# 33;;

%# 34;;
Telnet 'send' error - argument disappeared!\n
%# 35;;
Usage: send %s <option>\n
%# 36;;
Valid options are:\n\t
%# 37;;
\n\t
%# 38;;
 %s
%# 39;;
\n
%# 40;;
'%s': ambiguous argument ('send %s ?' for help).\n
%# 41;;
'%s': unknown argument ('send %s ?' for help).\n
%# 42;;
%-15s 
%# 43;;
setsockopt (SO_DEBUG): %s\n
%# 44;;
Cannot turn off socket debugging\n
%# 45;;
Will send carriage returns as telnet <CR><LF>.\n
%# 46;;
Will send carriage returns as telnet <CR><NUL>.\n
%# 47;;
Already operating in binary mode with remote host.\n
%# 48;;
Negotiating binary mode with remote host.\n
%# 49;;
Already in network ascii mode with remote host.\n
%# 50;;
Negotiating network ascii mode with remote host.\n
%# 51;;
Already receiving in binary mode.\n
%# 52;;
Negotiating binary mode on input.\n
%# 53;;
Already receiving in network ascii mode.\n
%# 54;;
Negotiating network ascii mode on input.\n
%# 55;;
Already transmitting in binary mode.\n
%# 56;;
Negotiating binary mode on output.\n
%# 57;;
Already transmitting in network ascii mode.\n
%# 58;;
Negotiating network ascii mode on output.\n
%# 59;;
toggle flushing of output when sending interrupt characters
%# 60;;
enable flushing of output when sending interrupt characters
%# 61;;
disable flushing of output when sending interrupt characters
%# 62;;
Will flush output when sending interrupt characters.
%# 63;;
Won't flush output when sending interrupt characters.
%# 64;;
toggle automatic sending of interrupt characters in urgent mode
%# 65;;
enable automatic sending of interrupt characters in urgent mode
%# 66;;
disable automatic sending of interrupt characters in urgent mode
%# 67;;
Will send interrupt characters in urgent mode.
%# 68;;
Won't send interrupt characters in urgent mode.
%# 69;;
toggle automatic sending of login and/or authentication info
%# 70;;
enable automatic sending of login and/or authentication info
%# 71;;
disable automatic sending of login and/or authentication info
%# 72;;
Will send login name and/or authentication information.
%# 73;;
Won't send login name and/or authentication information.
%# 74;;
toggle Toggle authentication debugging
%# 75;;
enable Toggle authentication debugging
%# 76;;
disable Toggle authentication debugging
%# 77;;
Will print authentication debugging information.
%# 78;;
Won't print authentication debugging information.
%# 79;;
toggle automatic encryption of data stream
%# 80;;
enable automatic encryption of data stream
%# 81;;
disable automatic encryption of data stream
%# 82;;
Will automatically encrypt output.
%# 83;;
Won't automatically encrypt output.
%# 84;;
toggle automatic decryption of data stream
%# 85;;
enable automatic decryption of data stream
%# 86;;
disable automatic decryption of data stream
%# 87;;
Will automatically decrypt input.
%# 88;;
Won't automatically decrypt input.
%# 89;;
toggle Toggle verbose encryption output
%# 90;;
enable Toggle verbose encryption output
%# 91;;
disable Toggle verbose encryption output
%# 92;;
Will print verbose encryption output.
%# 93;;
Won't print verbose encryption output.
%# 94;;
toggle Toggle encryption debugging
%# 95;;
enable Toggle encryption debugging
%# 96;;
disable Toggle encryption debugging
%# 97;;
Will print encryption debugging information.
%# 98;;
Won't print encryption debugging information.
%# 99;;
toggle don't read ~/.telnetrc file
%# 100;;
enable don't read ~/.telnetrc file
%# 101;;
disable don't read ~/.telnetrc file
%# 102;;
Will read ~/.telnetrc file.
%# 103;;
Won't read ~/.telnetrc file.
%# 104;;
toggle sending and receiving of binary data
%# 105;;
enable sending and receiving of binary data
%# 106;;
disable sending and receiving of binary data
%# 107;;
toggle receiving of binary data
%# 108;;
enable receiving of binary data
%# 109;;
disable receiving of binary data
%# 110;;
toggle sending of binary data
%# 111;;
enable sending of binary data
%# 112;;
disable sending of binary data
%# 113;;
toggle sending carriage returns as telnet <CR><LF>
%# 114;;
enable sending carriage returns as telnet <CR><LF>
%# 115;;
disable sending carriage returns as telnet <CR><LF>
%# 116;;
toggle mapping of received carriage returns
%# 117;;
enable mapping of received carriage returns
%# 118;;
disable mapping of received carriage returns
%# 119;;
Will map carriage return on output.
%# 120;;
Won't map carriage return on output.
%# 121;;
toggle local recognition of certain control characters
%# 122;;
enable local recognition of certain control characters
%# 123;;
disable local recognition of certain control characters
%# 124;;
Will recognize certain control characters.
%# 125;;
Won't recognize certain control characters.
%# 126;;
toggle (debugging) toggle tracing of API transactions
%# 127;;
enable (debugging) toggle tracing of API transactions
%# 128;;
disable (debugging) toggle tracing of API transactions
%# 129;;
Will trace API transactions.
%# 130;;
Won't trace API transactions.
%# 131;;
toggle (debugging) toggle printing of hexadecimal curses data
%# 132;;
enable (debugging) toggle printing of hexadecimal curses data
%# 133;;
disable (debugging) toggle printing of hexadecimal curses data
%# 134;;
Will print hexadecimal representation of curses data.
%# 135;;
Won't print hexadecimal representation of curses data.
%# 136;;
toggle debugging
%# 137;;
enable debugging
%# 138;;
disable debugging
%# 139;;
Will turn on socket level debugging.
%# 140;;
Won't turn on socket level debugging.
%# 141;;
toggle printing of hexadecimal network data (debugging)
%# 142;;
enable printing of hexadecimal network data (debugging)
%# 143;;
disable printing of hexadecimal network data (debugging)
%# 144;;
Will print hexadecimal representation of network traffic.
%# 145;;
Won't print hexadecimal representation of network traffic.
%# 146;;
toggle output of \"netdata\" to user readable format (debugging)
%# 147;;
enable output of \"netdata\" to user readable format (debugging)
%# 148;;
disable output of \"netdata\" to user readable format (debugging)
%# 149;;
Will print user readable output for \"netdata\".
%# 150;;
Won't print user readable output for \"netdata\".
%# 151;;
toggle viewing of options processing (debugging)
%# 152;;
enable viewing of options processing (debugging)
%# 153;;
disable viewing of options processing (debugging)
%# 154;;
Will show option processing.
%# 155;;
Won't show option processing.
%# 156;;
toggle (debugging) toggle printing of hexadecimal terminal data
%# 157;;
enable (debugging) toggle printing of hexadecimal terminal data
%# 158;;
disable (debugging) toggle printing of hexadecimal terminal data
%# 159;;
Will print hexadecimal representation of terminal traffic.
%# 160;;
Won't print hexadecimal representation of terminal traffic.
%# 161;;
%-15s display help information\n
%# 162;;
Need an argument to 'toggle' command.  'toggle ?' for help.\n
%# 163;;
'%s': ambiguous argument ('toggle ?' for help).\n
%# 164;;
'%s': unknown argument ('toggle ?' for help).\n
%# 165;;
character to toggle local echoing on/off
%# 166;;
character to escape back to telnet command mode
%# 167;;
rlogin escape character
%# 168;;
file to write trace information to
%# 169;;
The following need 'localchars' to be toggled true
%# 170;;
character to cause an Abort Output
%# 171;;
character to cause an Interrupt Process
%# 172;;
character to cause an Abort process
%# 173;;
character to cause an EOF 
%# 174;;
The following are for local editing in linemode
%# 175;;
character to use to erase a character
%# 176;;
character to use to erase a line
%# 177;;
character to use for literal next
%# 178;;
character to cause a Suspend Process
%# 179;;
character to use for line reprint
%# 180;;
character to use to erase a word
%# 181;;
character to use for XON
%# 182;;
character to use for XOFF
%# 183;;
alternate end of line character
%# 184;;
alternate AYT character
%# 185;;
Telnet rlogin escape character is '%s'.\n
%# 186;;
Telnet escape character is '%s'.\n
%# 187;;
Format is 'set Name Value'\n'set ?' for help.\n
%# 188;;
'%s': unknown argument ('set ?' for help).\n
%# 189;;
'%s': ambiguous argument ('set ?' for help).\n
%# 190;;
Format is 'set togglename [on|off]'\n'set ?' for help.\n
%# 191;;
%s set to \"%s\".\n
%# 192;;
%s character is '%s'.\n
%# 193;;
Need an argument to 'unset' command.  'unset ?' for help.\n
%# 194;;
'%s': unknown argument ('unset ?' for help).\n
%# 195;;
'%s': ambiguous argument ('unset ?' for help).\n
%# 196;;
%s reset to \"%s\".\n
%# 197;;
?Need to have LINEMODE option enabled first.\n
%# 198;;
'mode ?' for help.\n
%# 199;;
Disable LINEMODE option
%# 200;;
(or disable obsolete line-by-line mode)
%# 201;;
Enable LINEMODE option
%# 202;;
(or enable obsolete line-by-line mode)
%# 203;;
These require the LINEMODE option to be enabled
%# 204;;
Enable signal trapping
%# 205;;
Disable signal trapping
%# 206;;
Enable character editing
%# 207;;
Disable character editing
%# 208;;
Enable tab expansion
%# 209;;
Enable literal character echo
%# 210;;
Disable literal character echo
%# 211;;
Print help information
%# 212;;
format is:  'mode Mode', where 'Mode' is one of:\n\n
%# 213;;
'mode' command requires an argument\n
%# 214;;
Unknown mode '%s' ('mode ?' for help).\n
%# 215;;
Ambiguous mode '%s' ('mode ?' for help).\n
%# 216;;
%-15s \"(standard output)\"\n
%# 217;;
%-15s [%s]\n
%# 218;;
%-15s \"%s\"\n
%# 219;;
?Ambiguous argument '%s'.\n
%# 220;;
?Unknown argument '%s'.\n
%# 221;;
Deprecated usage - please use 'set escape%s%s' in the future.\n
%# 222;;
new escape character: 
%# 223;;
Escape character is '%s'.\n
%# 224;;
Deprecated usage - please use 'toggle crmod' in the future.\n
%# 225;;
Will map carriage return on output.\n
%# 226;;
Won't map carriage return on output.\n
%# 227;;
Suspend is not supported.  Try the '!' command instead\n
%# 228;;
Fork failed: %s\n
%# 229;;
Execl: %s\n
%# 230;;
Connection closed.\n
%# 231;;
Use local special character definitions
%# 232;;
Use remote special character definitions
%# 233;;
Verify remote special character definitions
%# 234;;
Need an argument to 'slc' command.  'slc ?' for help.\n
%# 235;;
'%s': unknown argument ('slc ?' for help).\n
%# 236;;
'%s': ambiguous argument ('slc ?' for help).\n
%# 237;;
Define an environment variable
%# 238;;
Undefine an environment variable
%# 239;;
Mark an environment variable for automatic export
%# 240;;
Don't mark an environment variable for automatic export
%# 241;;
Send an environment variable
%# 242;;
List the current environment variables
%# 243;;
Need an argument to 'environ' command.  'environ ?' for help.\n
%# 244;;
'%s': unknown argument ('environ ?' for help).\n
%# 245;;
'%s': ambiguous argument ('environ ?' for help).\n
%# 246;;
Need only 1 argument to 'environ %s' command.  'environ ?' for help.\n
%# 247;;
Need only %d arguments to 'environ %s' command.  'environ ?' for help.\n
%# 248;;
Need 1 argument to 'environ %s' command.  'environ ?' for help.\n
%# 249;;
Need %d arguments to 'environ %s' command.  'environ ?' for help.\n
%# 250;;
Cannot send '%s': Telnet ENVIRON option not enabled\n
%# 251;;
Cannot send '%s': variable not defined\n
%# 252;;
%c %-20s %s\n
%# 253;;
Display current status of authentication information
%# 254;;
Disable an authentication type ('auth disable ?' for more)
%# 255;;
Enable an authentication type ('auth enable ?' for more)
%# 256;;
'%s': unknown argument ('auth ?' for help).\n
%# 257;;
'%s': ambiguous argument ('auth ?' for help).\n
%# 258;;
Need only 1 argument to 'auth %s' command.  'auth ?' for help.\n
%# 259;;
Need only %d arguments to 'auth %s' command.  'auth ?' for help.\n
%# 260;;
Need 1 argument to 'auth %s' command.  'auth ?' for help.\n
%# 261;;
Need %d arguments to 'auth %s' command.  'auth ?' for help.\n
%# 262;;
Enable encryption. ('encrypt enable ?' for more)
%# 263;;
Disable encryption. ('encrypt enable ?' for more)
%# 264;;
Set encryptiong type. ('encrypt type ?' for more)
%# 265;;
Start encryption. ('encrypt start ?' for more)
%# 266;;
Stop encryption. ('encrypt stop ?' for more)
%# 267;;
Start encrypting the input stream
%# 268;;
Stop encrypting the input stream
%# 269;;
Start encrypting the output stream
%# 270;;
Stop encrypting the output stream
%# 271;;
'%s': unknown argument ('encrypt ?' for help).\n
%# 272;;
'%s': ambiguous argument ('encrypt ?' for help).\n
%# 273;;
Need only 1 argument to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 274;;
Need only %d arguments to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 275;;
Need 1 argument to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 276;;
Need %d arguments to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 277;;
Need only %d-%d arguments to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 278;;
Need %d-%d arguments to 'encrypt %s' command.  'encrypt ?' for help.\n
%# 279;;
fcntl: %s\n
%# 280;;
\tOwner is %d.\n
%# 281;;
\tFlags are 0x%x: %s\n
%# 282;;
Connected to %s.\n
%# 283;;
Operating with LINEMODE option\n
%# 284;;
Local line editing\n
%# 285;;
No line editing\n
%# 286;;
Local catching of signals\n
%# 287;;
No catching of signals\n
%# 288;;
Operating in obsolete linemode\n
%# 289;;
Operating in single character mode\n
%# 290;;
Catching signals locally\n
%# 291;;
Local character echo\n
%# 292;;
Remote character echo\n
%# 293;;
Local flow control\n
%# 294;;
No flow control\n
%# 295;;
No connection.\n
%# 296;;
SIGIO received 1 time.\n
%# 297;;
SIGIO received %d times.\n
%# 298;;
Process ID %d, process group %d.\n
%# 299;;
Terminal input:\n
%# 300;;
Terminal output:\n
%# 301;;
Network socket:\n
%# 302;;
Transparent mode command is '%s'.\n
%# 303;;
?Already connected to %s\n
%# 304;;
(to) 
%# 305;;
usage: %s [-l user] [-a] host-name [port]\n
%# 306;;
Bad source route option: %s\n
%# 307;;
%s: bad port number\n
%# 308;;
tcp/telnet: unknown service\n
%# 309;;
Trying %s...\n
%# 310;;
socket: %s\n
%# 311;;
setsockopt (IP_OPTIONS): %s\n
%# 312;;
setsockopt (IP_TOS) (ignored): %s\n
%# 313;;
connect to address %s: %s\n
%# 314;;
Unable to connect to remote host: %s\n
%# 315;;
Connection closed by foreign host.\n
%# 316;;
connect to a site
%# 317;;
close current connection
%# 318;;
forcibly logout remote user and close the connection
%# 319;;
exit telnet
%# 320;;
print status information
%# 321;;
print help information
%# 322;;
transmit special characters ('send ?' for more)
%# 323;;
set operating parameters ('set ?' for more)
%# 324;;
unset operating parameters ('unset ?' for more)
%# 325;;
toggle operating parameters ('toggle ?' for more)
%# 326;;
change state of special charaters ('slc ?' for more)
%# 327;;
display operating parameters
%# 328;;
specify Unix command for transparent mode pipe
%# 329;;
turn on (off) authentication ('auth ?' for more)
%# 330;;
turn on (off) encryption ('encrypt ?' for more)
%# 331;;
suspend telnet
%# 332;;
invoke a subshell
%# 333;;
change environment variables ('environ ?' for more)
%# 334;;
try to enter line or character mode ('mode ?' for more)
%# 335;;
deprecated command -- use 'toggle crmod' instead
%# 336;;
deprecated command -- use 'set escape' instead
%# 337;;
%s> 
%# 338;;
%s\n
%# 339;;
?Ambiguous command\n
%# 340;;
?Invalid command\n
%# 341;;
Commands may be abbreviated.  Commands are:\n\n
%# 342;;
%-*s\t
%# 343;;
?Ambiguous help command %s\n
%# 344;;
?Invalid help command %s\n
%# 345;;
?Ambiguous command: %s\n
%# 346;;
?Invalid command: %s\n
%# 347;;
?Need to be connected first for %s.\n
%# 348;;
select: %s\n
%# 349;;
%s: %s\n
%# 350;;
SetSockOpt: %s\n
%# 351;;
sleep(5) from telnet, after select\r\n
%# 352;;
telnet command mode
%# 353;;
character-at-a-time mode
%# 354;;
character-at-a-time mode (local echo)
%# 355;;
line-by-line mode (remote echo)
%# 356;;
line-by-line mode
%# 357;;
line-by-line mode (local echoing suppressed)
%# 358;;
3270 mode
%# 359;;
printring: trailing %%.\n
%# 360;;
printring: unknown format character.\n
%# 361;;
No room in buffer for terminal type.\n
%# 362;;
lm_will: not enough room in buffer\n
%# 363;;
lm_will: no command!!!\n
%# 364;;
lm_wont: no command!!!\n
%# 365;;
lm_do: no command!!!\n
%# 366;;
lm_do: not enough room in buffer\n
%# 367;;
lm_dont: no command!!!\n
%# 368;;
lm_mode: not enough room in buffer\n
%# 369;;
Special characters are remote default values\n
%# 370;;
Special characters are local values\n
%# 371;;
Special characters are remote values\n
%# 372;;
slc_import: not enough room\n
%# 373;;
slc_end_reply: not enough room\n
%# 374;;
env_opt_start: malloc()/realloc() failed!!!\n
%# 375;;
env_opt_add: realloc() failed!!!\n
%# 376;;
Remote side does not support STATUS option\n
%# 377;;
Programming error:  MAXSCREENSIZE too small.\n
%# 378;;
attempt to turn off an option 0x%x.\n
%# 379;;
Cannot open %s.\n
%# 380;;

%# 381;;

%# 382;;

%# 383;;

%# 384;;

%# 385;;

%# 386;;

%# 387;;

%# 388;;

%# 389;;

%# 390;;

%# 391;;

%# 392;;

%# 393;;

%# 394;;

%# 395;;

%# 396;;

%# 397;;

%# 398;;

%# 399;;

%# 400;;

%# 401;;
>>>%s: I support auth type %d %d\r\n
%# 402;;
auth enable 'type'\n
%# 403;;
auth disable 'type'\n
%# 404;;
Where 'type' is one of:\n
%# 405;;
\t%s\n
%# 406;;
%s: invalid authentication type\n
%# 407;;
auth debugging enabled\n
%# 408;;
auth debugging disabled\n
%# 409;;
Authentication disabled\n
%# 410;;
Authentication enabled\n
%# 411;;
%s: enabled\n
%# 412;;
%s: disabled\n
%# 413;;
>>>%s: Sending type %d %d\r\n
%# 414;;
>>>%s: auth_send called!\r\n
%# 415;;
>>>%s: auth_send got:
%# 416;;
\r\n
%# 417;;
>>>%s: He supports %d\r\n
%# 418;;
Internal state error: cannot find authentication type %d a second time\r\n
%# 419;;
>>>%s: Trying %d %d\r\n
%# 420;;
>>>%s: Using type %d\r\n
%# 421;;
>>>%s: Sent failure message\r\n
%# 422;;
>>>%s: Invalid authentication in IS: %d\r\n
%# 423;;
>>>%s: Invalid authentication in SEND: %d\r\n
%# 424;;
>>>%s: Empty name in NAME\r\n
%# 425;;
>>>%s: Name in NAME (%d) exceeds %d length\r\n
%# 426;;
>>>%s: Got NAME [%s]\r\n
%# 427;;
>>>%s: in auth_wait.\r\n
%# 428;;
>>>%s: I will support %s\r\n
%# 429;;
Valid encryption types:\n
%# 430;;
\t%s (%d)\r\n
%# 431;;
Usage: encrypt enable <type> [input|output]\n
%# 432;;
Usage: encrypt disable <type> [input|output]\n
%# 433;;
%s: invalid encryption type\n
%# 434;;
Ambiguous type '%s'\n
%# 435;;
%s: invalid encryption mode\n
%# 436;;
Usage: encrypt type <type> [input|output]\n
%# 437;;
Usage: encrypt start [input|output]\n
%# 438;;
%s: invalid encryption mode 'encrypt start ?' for help\n
%# 439;;
No previous decryption mode, decryption not enabled\r\n
%# 440;;
No previous encryption mode, encryption not enabled\r\n
%# 441;;
Usage: encrypt stop [input|output]\n
%# 442;;
%s: invalid encryption mode 'encrypt stop ?' for help\n
%# 443;;
Currently encrypting output with %s\r\n
%# 444;;
Currently decrypting input with %s\r\n
%# 445;;
Currently output is clear text.\r\n
%# 446;;
Last encryption mode was %s\r\n
%# 447;;
Currently input is clear text.\r\n
%# 448;;
Last decryption mode was %s\r\n
%# 449;;
Encryption debugging enabled\r\n
%# 450;;
Encryption debugging disabled\r\n
%# 451;;
Encryption is verbose\r\n
%# 452;;
Encryption is not verbose\r\n
%# 453;;
Automatic encryption of output is enabled\r\n
%# 454;;
Automatic encryption of output is disabled\r\n
%# 455;;
Automatic decryption of input is enabled\r\n
%# 456;;
Automatic decryption of input is disabled\r\n
%# 457;;
>>>%s: He is supporting %s (%d)\r\n
%# 458;;
>>>%s: (*ep->start)() returned %d\r\n
%# 459;;
>>>%s: Can't find type %s (%d) for initial negotiation\r\n
%# 460;;
>>>%s: No initial negotiation needed for type %s (%d)\r\n
%# 461;;
(*ep->is)(%x, %d) returned FAIL (%d)\n
%# 462;;
(*ep->is)(%x, %d) returned SUCCESS (%d)\n
%# 463;;
(*ep->is)(%x, %d) returned MORE_TO_DO (%d)\n
%# 464;;
(*ep->reply)(%x, %d) returned FAIL (%d)\n
%# 465;;
(*ep->reply)(%x, %d) returned SUCCESS (%d)\n
%# 466;;
(*ep->reply)(%x, %d) returned MORE_TO_DO (%d)\n
%# 467;;
>>>%s: encrypt_reply returned %d\n
%# 468;;
%s: Warning, Cannot decrypt input stream!!!\r\n
%# 469;;
[ Input is now decrypted with type %s ]\r\n
%# 470;;
>>>%s: Start to decrypt input with type %s\r\n
%# 471;;
%s: Warning, Cannot decrypt type %s (%d)!!!\r\n
%# 472;;
>>>%s: Input is back to clear text\r\n
%# 473;;
[ Input is now clear text ]\r\n
%# 474;;
>>>%s: Can't encrypt with type %s (%d)\r\n
%# 475;;
>>>%s: Encrypt start: failed (%d) %s\r\n
%# 476;;
>>>%s: Encrypt start: initial negotiation in progress (%d) %s\r\n
%# 477;;
>>>%s: Started to encrypt output with type %s\r\n
%# 478;;
[ Output is now encrypted with type %s ]\r\n
%# 479;;
>>>%s: Output is back to clear text\r\n
%# 480;;
[ Output is now clear text ]\r\n
%# 481;;
>>>%s: Request input to be encrypted\r\n
%# 482;;
>>>%s: Request input to be clear text\r\n
%# 483;;
>>>%s: in encrypt_wait\r\n
%# 484;;
td: recv IAC
%# 485;;
td: send IAC
%# 486;;
panic state=%d\n
%# 487;;
td: send do
%# 488;;
td: recv will
%# 489;;
td: send dont
%# 490;;
td: recv wont
%# 491;;
td: send will
%# 492;;
td: recv do
%# 493;;
td: send wont
%# 494;;
td: recv dont
%# 495;;
tcsetattr failed: %m
%# 496;;
could not grant slave pty
%# 497;;
could not unlock slave pty
%# 498;;
could not enable slave pty
%# 499;;
could not open slave pty
%# 500;;
Authorization failed
%# 501;;
Can't open %s\n
%# 502;;
Can't write to %s\n
%# 503;;
telnetd: waiting for /etc/init to start login process on %s\r\n
%# 504;;
/etc/init didn't start login process
%# 505;;
makeutx failed %m
%# 506;;
set_id() failed
%# 507;;
Unable to exec /usr/bin/shserv: %m
%# 508;;
Unable to exec /usr/bin/shserv
%# 509;;
Unable to invoke login scheme
%# 510;;
Can't get /etc/utmp entry to clean TMPDIR
%# 511;;
TMPDIR cleanup(%s): fork() failed: %m\n
%# 512;;
TMPDIR cleanup(%s): execl(%s) failed: %m\n
%# 513;;
utmp malloc failed
%# 514;;
TOS option unavailable; 
%# 515;;
-S flag not supported\n
%# 516;;
%s: unknown option\n
%# 517;;
%s: bad port #\n
%# 518;;
Out of ptys
%# 519;;
td: simulating recv\r\n
%# 520;;
td: Entering processing loop\r\n
%# 521;;
td: netread %d chars\r\n
%# 522;;
nd
%# 523;;
\r\n[Yes]\r\n
%# 524;;
td: ttloop\r\n
%# 525;;
ttloop:  read: %m\n
%# 526;;
ttloop:  peer died: %m\n
%# 527;;
td: ttloop read %d chars\r\n
%# 528;;
td: ptyflush %d chars\r\n
%# 529;;
pd
%# 530;;
td: netflush %d chars\r\n
%# 531;;
td: %s suboption 
%# 532;;
recv
%# 533;;
send
%# 534;;
(terminated by 
%# 535;;
, not IAC SE!) 
%# 536;;
(Empty suboption?)
%# 537;;
- unknown qualifier %d (0x%x).
%# 538;;
 (empty suboption?)
%# 539;;
 %d (unknown)
%# 540;;
(no option?)
%# 541;;
Forward Mask
%# 542;;
%d (unknown)
%# 543;;
(no mode?)
%# 544;;
%s (unknown)
%# 545;;
Usage: %s [[-7] | [-8] [-L]] [-E] [-a] [-d] [-e char] [-l user] [-n tracefile]\n\t
%# 546;;
[-noasynch] [-noasynctty] [-noasyncnet] [-r] [-t transcom]\n\t
%# 547;;
[-r] 
%# 548;;
[host-name [port]]\n
%# 549;;
Usage: %s [[-7] | [-8] [-L]] [-E] [-K] [-X atype] [-a] [-d] [-e char] [-k realm]\n\t[-l user] [-n tracefile]
%# 550;;
[-noasynch] [-noasynctty] [-noasyncnet]\n\t[-r] [-t transcom]
%# 551;;
[-x] [host-name [port]]\n
