%{
#ident	"@(#)fs.cmds:common/cmd/fs.d/mkfs.str	1.1.1.1"
/* copyright	"%c%" */
%}
%# 1;;
Usage:\n%s [-F %s] [-m] special #blocks [#inodes]\n
%# 2;;
%s: cannot stat\n
%# 3;;
%s: mounted file system\n
%# 4;;
maximum # of inodes is %d\n
%# 5;;
%d is not big enough\n
%# 6;;
file system size should be at least %d\n
%# 7;;
%d bytes per block\n
%# 8;;
%d total blocks\n
%# 9;;
%d total inodes\n
%# 10;;
%d free blocks\n
%# 11;;
%d free inodes\n
%# 12;;
%d blocks for inodes\n
%# 13;;
start byte  %d\nend byte  %d\n
%# 14;;
Could not create %s.\n
%# 15;;
Cannot open special file %s\n
%# 16;;
read of special file %s failed\n
%# 17;;
%s is not a bfs file system\n
%# 18;;
%d is invalid logical block size\n
%# 19;;
cannot stat %s\n
%# 20;;
cannot open %s\n
%# 21;;
%s: *** MOUNTED FILE SYSTEM\n
%# 22;;
cannot create %s\n
%# 23;;
cannot open proto file '%s'\n
%# 24;;
cannot open boot program '%s'\n
%# 25;;
'%s' too big\n
%# 26;;
error writing boot-block\n
%# 27;;
Cannot elf_begin %s\n
%# 28;;
Cannot get Phdr %s\n
%# 29;;
unknown block size\n
%# 30;;
bytes per logical block = %d\n
%# 31;;
total logical blocks = %ld\n
%# 32;;
total inodes = %ld\n
%# 33;;
gap (physical blocks) = %d\n
%# 34;;
cylinder size (physical blocks) = %d \n
%# 35;;
%ld/%ld: bad ratio\n
%# 36;;
write error: super-block\n
%# 37;;
Available blocks = %ld\n
%# 38;;
cannot allocate space for ib\n
%# 39;;
%c/%s: bad octal mode digit\n
%# 40;;
file too large\n
%# 41;;
%c/%s: bad mode\n
%# 42;;
%s: bad number\n
%# 43;;
EOF\n
%# 44;;
read error: %ld\n
%# 45;;
write error: %ld\n
%# 46;;
seek error: %ld\n
%# 47;;
out of free space\n
%# 48;;
too many bad blocks\n
%# 49;;
ilist too small\n
%# 50;;
triple indirect blocks not handled\n
%# 51;;
bad ftype %o\n
%# 52;;
Usage:\n%s [-F %s] [generic_options] special\n%s [-F %s] [generic_options] [-b block_size] special blocks[:inodes] [gap blocks/cyl]\n%s [-F %s] [generic_options] [-b block_size] special proto [gap blocks/cyl]\n
%# 53;;
cannot read superblock\n
%# 54;;
%s is not an %s file system\n
%# 55;;
bad file system type %ld\n
%# 56;;
illegal option: %s\n
%# 57;;
cannot specify both -o C and -o L\n
%# 58;;
%s: cannot open\n
%# 59;;
%s: cannot create\n
%# 60;;
%s is not special device\n
%# 61;;
%s is mounted, cannot mkfs\n
%# 62;;
invalid size %d\n
%# 63;;
invalid ntrak %d\n
%# 64;;
invalid nsect %d\n
%# 65;;
invalid rotations per second %d\n
%# 66;;
invalid rotational delay %d\n
%# 67;;
block size must be a power of 2, not %d\n
%# 68;;
fragment size must be a power of 2, not %d\n
%# 69;;
fragment size %d is too small, minimum is %d\n
%# 70;;
block size %d is too small, minimum is %d\n
%# 71;;
block size %d is too big, maximum is %d\n
%# 72;;
block size (%d) cannot be smaller than fragment size (%d)\n
%# 73;;
fragment size %d is too small, minimum with block size %d is %d\n
%# 74;;
maximum block size with nsect %d and ntrak %d is %d\n
%# 75;;
cylinder groups must have at least 1 cylinder\n
%# 76;;
cylinder groups are limited to %d cylinders\n
%# 77;;
cylinder groups must have a multiple of %d cylinders\n
%# 78;;
file systems must have at least one cylinder\n
%# 79;;
insufficient space in super block for\nrotational layout tables with nsect %d and ntrak %d.\n
%# 80;;
File system performance may be impaired.\n
%# 81;;
too many sectors per cylinder (%d sectors)\n
%# 82;;
nsect %d, and ntrak %d, requires block size of %d,\n\tand fragment size of %d\n
%# 83;;
cylinder group too large (%d cylinders); 
%# 84;;
max: %d cylinders per group\n
%# 85;;
nsect %d, ntrak %d, cpg %d is not tolerable\nas this would would have cyl groups whose size\nis not a multiple of %d; exiting!\n
%# 86;;
%s: invalid nbpi reset to %d\n
%# 87;;
%d: invalid nbpi reset to %d\n
%# 88;;
inode blocks/cyl group (%d) >= data blocks (%d)\n
%# 89;;
number of cylinders per cylinder group must be increased\n
%# 90;;
inode blocks/cyl group (%d) >= data blocks (%d) in last\ncylinder group.
%# 91;;
 This implies %d sector(s) cannot be allocated.\n
%# 92;;
%d sector(s) in last cylinder unallocated\n
%# 93;;
%s: invalid minfree reset to %d%%\n
%# 94;;
%d: invalid minfree reset to %d%%\n
%# 95;;
%s: invalid optimization preference reset to time\n
%# 96;;
%c: invalid optimization preference reset to time\n
%# 97;;
%s:\t%d sectors in %d cylinders of %d tracks, %d sectors\n
%# 98;;
\t%.1fMb in %d cyl groups (%d c/g, %.2fMb/g, %d i/g)\n
%# 99;;
super-block backups (for fsck -b#) at:
%# 100;;
cg 0: bad magic number\n
%# 101;;
first cylinder group ran out of space\n
%# 102;;
internal error: cannot find block in cyl 0\n
%# 103;;
inode value out of range (%d).\n
%# 104;;
rdfs: %s\n
%# 105;;
wtfs: %s\n
%# 106;;
isblock bad fs_frag %d\n
%# 107;;
clrblock bad fs_frag %d\n
%# 108;;
setblock bad fs_frag %d\n
%# 109;;
Usage: %s [-F %s] [-V] [-m] [-o options] special size\n
%# 110;;
options:\nnsect=xx,ntrack=xx,bsize=xx,fragsize=xx,cgsize=xx\n
%# 111;;
free=xx,rps=xx,nbpi=xx,opt=x,apc=xx,gap=x\n
%# 112;;
M=make root of file system a Multi-level directory\n
%# 113;;
C=3.2 compatability; L=ignore 3.2 compatability\n
%# 114;;
[not currently a valid file system]\n
%# 115;;
argument out of range: \"%lu\"\n
%# 116;;
bad numeric arg: \"%s\"\n
%# 117;;
cannot open /dev/tty\n
%# 118;;
\nThis file system is able to support more\nthan 32,768 files.
%# 119;;
Some older applications (written for UNIX System V\nRelease 3.2 or before) may not work correctly on such a file system,\neven if fewer than 32,768 files are actually present.
%# 120;;
If you wish to run such applications (without recompiling them),\nyou should restrict the maximum number of files that may be created\nto fewer than 32,768.\n\n
%# 121;;
Your choices are:\n\n
%# 122;;
1. Restrict this file system to fewer than 32,768 files.\n
%# 123;;
2. Allow this file system to contain more than 32,768 files\n   (not compatible with some older applications).\n\n
%# 124;;
Press '1' or '2' followed by 'ENTER':\n
%# 125;;
No input received; assuming '1'\n
%# 126;;
Input not understood. Try again.\n\n
%# 127;;
Cannot specify both -o C and -o L\n
%# 128;;
%s is not special device, cannot mkfs\n
%# 129;;
inode blocks/cyl group (%d) >= data blocks (%d) in last cylinder group.\n
%# 130;;
This implies %d sector(s) cannot be allocated.\n
%# 131;;
[L|C]\n
%# 132;;
\nThis file system is able to support more\nthan 65,536 files.
%# 133;;
Some older applications (written for UNIX System V\nRelease 3.2 or before) may not work correctly on such a file system,\neven if fewer than 65,536 files are actually present.
%# 134;;
If you wish to run such\napplications (without recompiling them), you should restrict the maximum\nnumber of files that may be created to fewer than 65,536.\n\n
%# 135;;
1. Restrict this file system to fewer than 65,536 files.\n
%# 136;;
2. Allow this file system to contain more than 65,536 files\n   (not compatible with some older applications).\n\n
%# 137;;
Input not understood. Try again.\n
