%{
#ident	"@(#)fs.cmds:common/cmd/fs.d/fsck.str	1.4.2.1"
/* copyright	"%c%" */
%}
%# 1;;
Usage:\n%s [-F %s] [generic options] [-y | -n] special\n
%# 2;;
%s: can not stat\n
%# 3;;
%s: mounted file system\n
%# 4;;
%s file system is mounted as a block device, ignored\n
%# 5;;
%s is not a block or character device\n
%# 6;;
can not open special file %s\n
%# 7;;
%s is not a %s file system\n
%# 8;;
Checking %s:\n
%# 9;;
%s not okay\n
%# 10;;
%s okay\n
%# 11;;
File system was modified.\n
%# 12;;
File system was not modified.\n
%# 13;;
File system was in the middle of compaction.\n
%# 14;;
Complete compaction? 
%# 15;;
Finishing compaction of file (inode %ld)\n
%# 16;;
%ld total blocks\n%ld free blocks\n%ld total inodes\n
%# 17;;
%ld free inodes\n
%# 18;;
Usage:\n%s [-F %s] [generic_options] [special ...]\n%s [-F %s] [generic_options] [-y] [-n] [-p] [-sX] [-SX] [-t file] [-l] [-q] [-D] [-f] [special ...]\n
%# 19;;
Could not allocate space for pathname\n
%# 20;;
%c Bad -t option\n
%# 21;;
%c Illegal scratch file <%s>\n
%# 22;;
%c Incompatible options: -n and -s\n
%# 23;;
%c Incompatible options: -n and -q\n
%# 24;;
Incompatible options: cannot use -m with other options\n
%# 25;;
%s is not an s5 file system\n
%# 26;;
fsck quitting\n
%# 27;;
%c Cannot get memory\n
%# 28;;
%c Cannot fstat standard input\n
%# 29;;
%c %s** Phase 1 - Check Blocks and Sizes\n
%# 30;;
%c %sUNKNOWN FILE TYPE I=%u
%# 31;;
 (NOT EMPTY)
%# 32;;
CLEAR
%# 33;;
CLEARED
%# 34;;
%c %sLINK COUNT TABLE OVERFLOW
%# 35;;
CONTINUE
%# 36;;
EXITING, RUN FSCK MANUALLY
%# 37;;
%c %sPARTIALLY ALLOCATED INODE I=%u
%# 38;;
%c %s** Phase 1b - Rescan For More DUPS\n
%# 39;;
%c %s** Phase 2 - Check Pathnames\n
%# 40;;
%c %sROOT INODE UNALLOCATED. TERMINATING.\n
%# 41;;
%c %sROOT INODE NOT DIRECTORY
%# 42;;
FIX
%# 43;;
%c %sDUPS/BAD IN ROOT INODE\n
%# 44;;
%c %s** Phase 3 - Check Connectivity\n
%# 45;;
%c %s** Phase 4 - Check Reference Counts\n
%# 46;;
UNREF
%# 47;;
BAD/DUP
%# 48;;
%c %sFREE INODE COUNT WRONG IN SUPERBLK
%# 49;;
\n%c %sFIXED\n
%# 50;;
FIXED
%# 51;;
%c %s** Phase 5 - Check Free List 
%# 52;;
(Ignored)\n
%# 53;;
%c %s%d BAD BLKS IN FREE LIST\n
%# 54;;
%c %s%d DUP BLKS IN FREE LIST\n
%# 55;;
%c %s%ld BLK(S) MISSING\n
%# 56;;
%c %sFREE BLK COUNT WRONG IN SUPERBLK
%# 57;;
%c %sBAD FREE LIST
%# 58;;
\n%c %sSALVAGED\n
%# 59;;
SALVAGE
%# 60;;
SALVAGED
%# 61;;
%c %s** Phase 6 - Salvage Free List\n
%# 62;;
SET FILE SYSTEM STATE TO OKAY
%# 63;;
FILE SYSTEM STATE SET TO OK
%# 64;;
%c %sFILE SYSTEM STATE NOT SET TO OKAY\n
%# 65;;
%c %sFILE SYSTEM STATE SET TO OKAY\n
%# 66;;
%c %s%ld files %ld blocks %ld free\n
%# 67;;
\n%c %s*** ROOT FILE SYSTEM WAS MODIFIED ***\n
%# 68;;
%c %s*** FILE SYSTEM WAS MODIFIED ***\n
%# 69;;
%c %sNO VALID '.' in DIR I = %u\n
%# 70;;
%c %sNO VALID '..' in DIR I = %u\n
%# 71;;
%c %sMISSING '.' or '..' in DIR I = %u\n
%# 72;;
%c %sBLK %ld 
%# 73;;
\n%c %sDIR=%s\n\n
%# 74;;
%c %sBAD DIR ENTRY I = %u\n
%# 75;;
BAD
%# 76;;
%c %sEXCESSIVE BAD BLKS I=%u
%# 77;;
DUP
%# 78;;
%c %sEXCESSIVE DUP BLKS I=%u
%# 79;;
%c %sDUP TABLE OVERFLOW.
%# 80;;
I OUT OF RANGE
%# 81;;
UNALLOCATED
%# 82;;
DUP/BAD
%# 83;;
%c %sEXCESSIVE BAD BLKS IN FREE LIST.
%# 84;;
%c %sEXCESSIVE DUP BLKS IN FREE LIST.
%# 85;;
\n%c %sNAME=%s\n
%# 86;;
REMOVE
%# 87;;
REMOVED
%# 88;;
DIR
%# 89;;
FILE
%# 90;;
 (NOT EMPTY)\n
%# 91;;
 (EMPTY)
%# 92;;
 -- REMOVED\n
%# 93;;
\n%c %sNAME=%s
%# 94;;
%c %sLINK COUNT %s
%# 95;;
\n%c %sCOUNT %d SHOULD BE %d
%# 96;;
ADJUST
%# 97;;
ADJUSTED
%# 98;;
 -- CLEARED
%# 99;;
chkempt: blk %d out of range\n
%# 100;;
chkempt: Cannot find blk %d\n
%# 101;;
%c %sCannot stat root\n
%# 102;;
%c %sCannot stat %s\n
%# 103;;
%c %s%s is a mounted file system, ignored\n
%# 104;;
%c %s%s is pipedev, ignored
%# 105;;
%c %s%s is not a block or character device\n
%# 106;;
 (NO WRITE)
%# 107;;
%c %sSize check: fsize %ld isize %d\n
%# 108;;
%c %sFile System: %.6s Volume: %.6s\n\n
%# 109;;
\n%c %sNEED SCRATCH FILE (%ld BLKS)\n
%# 110;;
%c %sENTER FILENAME:\n
%# 111;;
%c %sCannot create %s\n
%# 112;;
%c %sCannot open %s\n
%# 113;;
\n%c %s%s? 
%# 114;;
 no\n\n
%# 115;;
 yes\n\n
%# 116;;
%c %sAnswer 'y' or 'n' (yes or no)\n
%# 117;;
%c %sInvalid -s argument, defaults assumed\n
%# 118;;
%c %sFatal I/O error\n
%# 119;;
SEEK
%# 120;;
READ
%# 121;;
WRITE
%# 122;;
\n%c %sCAN NOT %s: BLK %ld
%# 123;;
EXITING
%# 124;;
%c %sProgram terminated\n
%# 125;;
 OWNER=
%# 126;;
MODE=%o\n
%# 127;;
%c %sSIZE=%ld 
%# 128;;TIME
%b %e %H:%M %Y
%# 129;;
MTIME=%s\n
%# 130;;
%c %sBAD FREEBLK COUNT\n
%# 131;;
%c %sDefault free list spacing assumed\n
%# 132;;
%c %sUNREF %s 
%# 133;;
 MUST reconnect\n
%# 134;;
 Cleared\n
%# 135;;
RECONNECT
%# 136;;
RECONNECTED
%# 137;;
%c %sSORRY. NO lost+found DIRECTORY\n\n
%# 138;;
%c %sSORRY. NO SPACE IN lost+found DIRECTORY\n\n
%# 139;;
%c %sDIR I=%u CONNECTED. 
%# 140;;
%c %sPARENT WAS I=%u\n\n
%# 141;;
%c %sDIRECTORY MISALIGNED I=%u\n
%# 142;;
RECOVER
%# 143;;
RECOVERED
%# 144;;
%s SIZE ERROR I=%u\n
%# 145;;
DELETE OR RECOVER EXCESS DATA\n
%# 146;;
RECOVER EXCESS BLOCKS
%# 147;;
RECOVERED EXCESS BLOCKS
%# 148;;
DELETE EXCESS BLOCKS
%# 149;;
DELETED EXCESS BLOCKS
%# 150;;
%c %sSUPER BLOCK, ROOT INODE, OR ROOT\n%c %sDIRECTORY MAY BE CORRUPTED.\n
%# 151;;
fsck CANNOT DETERMINE\n%c %sLOGICAL BLOCK SIZE OF %s.\n
%# 152;;
%c %sBLOCK SIZE COULD BE 512, 1024, OR 2048 BYTES.\n
%# 153;;
%c %sRE-RUN fsck WITHOUT -y OR -n OPTION AND YOU\n%c %sWILL BE PROMPTED FOR BLOCK SIZE.\n
%# 154;;
%c %sSUPER BLOCK, ROOT INODE, OR ROOT\n%d %sDIRECTORY MAY BE CORRUPTED.
%# 155;;
%c %sRE-RUN fsck FOR %s WITHOUT\n%c %sINVOKING THROUGH dfsck AND YOU WILL BE PROMPTED\n%c %sFOR BLOCK SIZE.\n
%# 156;;
SUPER BLOCK, ROOT INODE, OR ROOT DIRECTORY ON %s MAY\nBE CORRUPTED. \n
%# 157;;
fsck CANNOT DETERMINE LOGICAL BLOCK SIZE OF %s\nBLOCK SIZE COULD BE 512, 1024, OR 2048 BYTES. \n\n
%# 158;;
ENTER LOGICAL BLOCK SIZE OF %s IN BYTES (NOTE: INCORRECT\nRESPONSE COULD DAMAGE FILE SYSTEM BEYOND REPAIR!)\n
%# 159;;
ENTER 512, 1024, OR 2048 OR ENTER s TO SKIP THIS FILE SYSTEM:  
%# 160;;
\nENTER 512, 1024, 2048, OR s: 
%# 161;;
sanity check failed : cannot stat %s\n
%# 162;;
sanity check: root file system needs checking\n
%# 163;;
sanity check: root file system okay\n
%# 164;;
sanity check: %s already mounted\n
%# 165;;
sanity check: %s needs checking\n
%# 166;;
sanity check: %s okay\n
%# 167;;
illegal option -- %c\n
%# 168;;
option requires an argument -- %c\n
%# 169;;
Failure to allocate new node in fcorr_path\n
%# 170;;
Allocate of new pathname failed\n
%# 171;;
Possibly damaged files found by fsck\n
%# 172;;
%c %sDIR pathname too deep\n
%# 173;;
%c %sDIR pathname is <%s>\n
%# 174;;
BAD INODE %d TO DESCEND
%# 175;;
ZERO LENGTH DIRECTORY
%# 176;;
DIRECTORY TOO SHORT
%# 177;;
DIRECTORY %d: LENGTH %d NOT MULTIPLE OF %d\n
%# 178;;
 (ADJUSTED)\n
%# 179;;
wrong type to dirscan %d\n
%# 180;;
DIRECTORY CORRUPTED
%# 181;;
NAME=%s\n
%# 182;;
LINK COUNT %s
%# 183;;
COUNT %d SHOULD BE %d\n
%# 184;;
LINK COUNT INCREASING\n
%# 185;;
UNREF %s 
%# 186;;
 (RECONNECTED)\n
%# 187;;
NO lost+found DIRECTORY\n
%# 188;;
CREATE
%# 189;;
 (CREATED)\n
%# 190;;
SORRY. CANNOT CREATE lost+found DIRECTORY\n\n
%# 191;;
lost+found IS NOT A DIRECTORY\n
%# 192;;
REALLOCATE
%# 193;;
SORRY. NO lost+found DIRECTORY\n\n
%# 194;;
SORRY. NO SPACE IN lost+found DIRECTORY\n\n
%# 195;;
DIR I=%u CONNECTED. 
%# 196;;
PARENT WAS I=%u\n
%# 197;;
NO SPACE LEFT IN %s
%# 198;;
 (EXPANDED)\n
%# 199;;
EXPAND
%# 200;;
PARTIALLY TRUNCATED INODE I=%d
%# 201;;
Bad inode number %d for ginode\n
%# 202;;
 (CLEARED)\n
%# 203;;
SIZE=%ld
%# 204;;TIME
%b %d %H:%M
%# 205;;TIME
%Y
%# 206;;
MTIME=%s %s
%# 207;;
BAD STATE %d TO BLKERR\n
%# 208;;
Alternate super block location: %d\n
%# 209;;
not writeable '%s'\n
%# 210;;
Cannot open checklist file: %s\n
%# 211;;
fork: %s\n
%# 212;;
CANNOT CHECK FILE SYSTEM.
%# 213;;
** Currently Mounted on %s\n
%# 214;;
** Last Mounted on %s\n
%# 215;;
** Phase 1 - Sanity Check only\n
%# 216;;
** Phase 1 - Check Blocks and Sizes\n
%# 217;;
INTERNAL ERROR: dups with -p
%# 218;;
** Phase 1b - Rescan For More DUPS\n
%# 219;;
** Phase 2 - Check Pathnames\n
%# 220;;
** Phase 3 - Check Connectivity\n
%# 221;;
** Phase 4 - Check Reference Counts\n
%# 222;;
** Phase 5 - Check Cyl groups\n
%# 223;;
%d files, %d used, %d free 
%# 224;;
(%d frags, %d blocks, %.1f%% fragmentation)\n
%# 225;;
%d files missing\n
%# 226;;
%d blocks missing\n
%# 227;;
The following duplicate blocks remain:
%# 228;;
The following zero link count inodes remain:
%# 229;;
%s FILE SYSTEM STATE NOT SET TO OKAY\n
%# 230;;
%s FILE SYSTEM STATE SET TO OKAY\n
%# 231;;
***** FILE SYSTEM WAS MODIFIED *****\n
%# 232;;
Cannot stat root\n
%# 233;;
Cannot stat %s\n
%# 234;;
%s is not a character device\n
%# 235;;
Cannot make sense out of name %s\n
%# 236;;
time=%x, state=%x\n
%# 237;;
Usage: %s [-F %s] [generic options] [-o p,b=#,w] [special ....]\n
%# 238;;
PARTIALLY ALLOCATED INODE I=%u\n
%# 239;;
bad size %d:
%# 240;;
BAD MODE: MAKE IT A FILE
%# 241;;
bad direct addr: %d\n
%# 242;;
bad indirect addr: %d\n
%# 243;;
LINK COUNT TABLE OVERFLOW\n
%# 244;;
INCORRECT BLOCK COUNT I=%u (%ld should be %ld)\n
%# 245;;
 (CORRECTED)\n
%# 246;;
CORRECT
%# 247;;
UNKNOWN FILE TYPE I=%u\n
%# 248;;
EXCESSIVE BAD BLKS I=%u\n
%# 249;;
 (SKIPPING)\n
%# 250;;
EXCESSIVE DUP BLKS I=%u\n
%# 251;;
DUP TABLE OVERFLOW.\n
%# 252;;
%ld ACL BAD I=%u\n
%# 253;;
%ld ACL DUP I=%u\n
%# 254;;
ROOT INODE UNALLOCATED\n
%# 255;;
ALLOCATE
%# 256;;
CANNOT ALLOCATE ROOT INODE\n
%# 257;;
DUPS/BAD IN ROOT INODE\n
%# 258;;
%s: DCLEAR\n
%# 259;;
ROOT INODE NOT DIRECTORY\n
%# 260;;
%s: FSTATE/FCLEAR\n
%# 261;;
BAD STATE %d FOR ROOT INODE\n
%# 262;;
BAD INODE NUMBER FOR '.'
%# 263;;
MISSING '.'
%# 264;;
CANNOT FIX, FIRST ENTRY IN DIRECTORY CONTAINS %s\n
%# 265;;
CANNOT FIX, INSUFFICIENT SPACE TO ADD '.'\n
%# 266;;
BAD INODE NUMBER FOR '..'
%# 267;;
MISSING '..'
%# 268;;
CANNOT FIX, SECOND ENTRY IN DIRECTORY CONTAINS %s\n
%# 269;;
CANNOT FIX, INSUFFICIENT SPACE TO ADD '..'\n
%# 270;;
EXTRA '.' ENTRY
%# 271;;
EXTRA '..' ENTRY
%# 272;;
NAME TOO LONG %s%s\n
%# 273;;
%s IS AN EXTRANEOUS HARD LINK TO DIRECTORY %s\n
%# 274;;
 (IGNORED)\n
%# 275;;
BAD RETURN STATE %d FROM DESCEND
%# 276;;
BAD STATE %d FOR INODE I=%d\n
%# 277;;
DUP/BAD/INVALID ACL
%# 278;;
CG %d: BAD MAGIC NUMBER\n
%# 279;;
BLK(S) MISSING IN BIT MAPS\n
%# 280;;
SUMMARY INFORMATION BAD\n
%# 281;;
FREE BLK COUNT(S) WRONG IN SUPERBLK\n
%# 282;;
file is not a block or character device; OK
%# 283;;
%s is mounted, fsck on BLOCK device ignored\n
%# 284;;
Cannot open %s\n
%# 285;;
NO WRITE ACCESS\n
%# 286;;
MAGIC NUMBER WRONG
%# 287;;
NCG OUT OF RANGE
%# 288;;
CPG OUT OF RANGE
%# 289;;
NCYL DOES NOT JIVE WITH NCG*CPG
%# 290;;
SIZE PREPOSTEROUSLY LARGE
%# 291;;
UNDEFINED OPTIMIZATION IN SUPERBLOCK
%# 292;;
SET TO DEFAULT
%# 293;;
IMPOSSIBLE MINFREE=%d IN SUPERBLOCK
%# 294;;
TRASHED VALUES IN SUPER BLOCK
%# 295;;
cannot alloc %d bytes for blockmap\n
%# 296;;
cannot alloc %d bytes for statemap\n
%# 297;;
cannot alloc %d bytes for lncntp\n
%# 298;;
cannot alloc %d bytes for secstatemap\n
%# 299;;
BAD SUPER BLOCK: %s\nUSE -b OPTION TO FSCK TO SPECIFY LOCATION OF AN ALTERNATE\nSUPER-BLOCK TO SUPPLY NEEDED INFORMATION; SEE fsck(1M).\n
%# 300;;
bad file type 0%o\n
%# 301;;
INTERNAL ERROR: GOT TO reply()
%# 302;;
%s? 
%# 303;;
WRITING ZERO'ED BLOCK %d TO DISK\n
%# 304;;
CANNOT %s: BLK %ld
%# 305;;
Program terminated\n
%# 306;;
THE FOLLOWING SECTORS COULD NOT BE READ:
%# 307;;
THE FOLLOWING SECTORS COULD NOT BE WRITTEN:
%# 308;;
returning to single-user after filesystem check\n
%# 309;;
 (SALVAGED)\n
%# 310;;
UNKNOWN INODESC FIX MODE %d\n
%# 311;;
%s: UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY.\n
%# 312;;
INTERNAL INCONSISTENCY:
%# 313;;
cannot open %s\n
%# 314;;
%s is nfs mounted - ignored\n
%# 315;;
ran out of memory!\n
%# 316;;
%s is a mounted file system, ignored\n
%# 317;;
too many arguments\n
%# 318;;
more than one fstype specified\n
%# 319;;
Fstype %s exceeds %d characters\n
%# 320;;
cannot open vfstab\n
%# 321;;
FSType cannot be identified\n
%# 322;;
cannot fork.  Try again later\n
%# 323;;
bad wait\n
%# 324;;
the following command (process %d) was stopped by signal %d\n
%# 325;;
the following command (process %d) was terminated by signal %d\n\t\t and dumped core\n
%# 326;;
the following command (process %d) was terminated by signal %d\n
%# 327;;
cannot execute %s - permission denied\n
%# 328;;
operation not applicable to FSType %s\n
%# 329;;
line in vfstab exceeds %d characters\n
%# 330;;
line in vfstab has too few entries\n
%# 331;;
line in vfstab has too many entries\n
%# 332;;
Usage:\n%s [-P] [-m] [-b] [-L] [-F FSType] [-V] [-m] [special ...]\n%s [-P] [-m] [-b] [-L] [-F FSType] [-V] [current_options] [-o specific_options] [special ...]\n
%# 333;;
BAD STATE %d FOR INODE DIRECTORY\n
%# 334;;
UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY. \n
%# 335;;
NO SPACE LEFT IN lost+found DIRECTORY\n
%# 336;;
%s HAS AN EXTRANEOUS HARD LINK TO DIRECTORY INODE %d\n
%# 337;;
FIX '.'
%# 338;;
FIX '..'
%# 339;;
Cannot read data block\n
%# 340;;
No space\n
%# 341;;
blk %d < cgdmin %d;
%# 342;;
 blk+cnt %d > cgsbase %d\n
%# 343;;
blk %d >= cgdmin %d;
%# 344;;
 blk+cnt %d > sblock.fs_fpg %d\n
%# 345;;
 I=%u OWNER= %s MODE=%o\n
%# 346;;
%s: 
%# 347;;
SIZE=%ld MTIME=%s %s\n
%# 348;;
 I=%u OWNER= %d MODE=%o\n
%# 349;;
%ld %s I=%u\n
%# 350;;
 %d,
%# 351;;
cannot alloc dirmap\n
%# 352;;
cannot alloc dblist\n
%# 353;;
** %s: NO WRITE\n
%# 354;;
Cannot get the semaphore key =%d\n
%# 355;;
Cannot get the semaphore id \n
%# 356;;
Cannot get the semaphore\n
%# 357;;
Cannot release the semaphore
%# 358;;
BAD STATE %d FOR INODE DIRECTORY %d\n
%# 359;;
Bad file size %d:
%# 360;;
%s: INCORRECT BLOCK COUNT I=%u (%ld should be %ld) (CORRECTED)\n
%# 361;;
UNKNOWN FILE TYPE OR BAD SIZE I=%u\n
%# 362;;
%s? 
%# 363;;
Cannot open a semaphore file\n
%# 364;;
Cannot get a key for semaphore\n
%# 365;;
Cannot create semaphore\n
%# 366;;
Cannot initialize the semaphore\n
%# 367;;
dlistp NULL when it should not be\n
%# 368;;
Orphan process\n
%# 369;;
No -w option. Environment is corrupted\n
%# 370;;
Cannot read %s\n
%# 371;;
Cannot write %s\n
%# 372;;
Usage:\n%s [-F %s] [-m] [-y | -n] special\n
%# 373;;
calloc failed\n
%# 374;;
\n%s ** Phase 1 - Check FATs\n
%# 375;;
\n%s ** Phase 2 - Check directory entries (pass 1)\n
%# 376;;
\n%s ** Phase 3 - Cross reference Check\n
%# 377;;
\n%s ** Phase 4 - Check directory entries (pass 2)\n
%# 378;;
msync failed with return error code %d\n
%# 379;;
\n%s *** FILE SYSTEM WAS MODIFIED ***\n
%# 380;;
mmap failed with return error code %d\n
%# 381;;
%s CAN NOT ACCESS BLK %ld\n
%# 382;;
%s CAN NOT SEEK BLK %ld\n
%# 383;;
malloc failed\n
%# 384;;
%s ERROR reading FAT %d blk %ld\n
%# 385;;
%s All FATs are partially unreadable
%# 386;;
%s FATs are out of synch\n
%# 387;;
Found a lost allocation unit\n
%# 388;;
'..' cluster number does not match parent dir\n
%# 389;;
'.' cluster number does not match current dir\n
%# 390;;
File Size for %s is incorrect\n
%# 391;;
Start cluster for %s is out of range\n
%# 392;;
FAT entry for %s is out of range\n
%# 393;;
Fix it? Please enter 'y' or 'n' (yes or no):
%# 394;;
\n
%# 395;;
Volume %s   Created %s-%.2d-%.4d  %2d:%.2d\n\n
%# 396;;
Volume in drive %s does not have a label\n\n
%# 397;;
\n%ld lost allocation unit(s)\n\n
%# 398;;
% 10lu bytes total File system space\n
%# 399;;
% 10ld bytes in % 4ld hidden file(s)\n
%# 400;;
% 10ld bytes in % 4ld subdirectories\n
%# 401;;
% 10ld bytes in % 4ld regular file(s)\n
%# 402;;
% 10lu bytes available in File system\n\n
%# 403;;
% 10d bytes in each allocation unit\n
%# 404;;
% 10ld total allocation units on File system\n
%# 405;;
% 10ld available allocation units on File system\n
%# 406;;
\n%ld reserved allocation unit(s)\n\n
%# 407;;
\n%ld allocation unit(s) marked bad\n\n
%# 408;;
%s: %d directory enries claiming allocation unit %d\n
%# 409;;
%s CAN NOT READ BLK %ld\n
%# 410;;
Answer 'y' or 'n' (yes or no)\n
