#ident	"@(#)OSRcmds:sh/sh.mk	1.1"
#	@(#) sh.mk 26.1 95/12/12 
#
#	      UNIX is a registered trademark of AT&T
#		Portions Copyright 1976-1989 AT&T
#	Portions Copyright 1980-1989 Microsoft Corporation
#    Portions Copyright 1983-1995 The Santa Cruz Operation, Inc
#		      All Rights Reserved
#	Copyright (c) 1984, 1986, 1987, 1988 AT&T
#	  All Rights Reserved

#	THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T
#	The copyright notice above does not evidence any
#	actual or intended publication of such source code.

include $(CMDRULES)
include ../make.inc

#	Makefile for sh

DIR = $(OSRDIR)

INTL=-DINTL

LFLAGS = -lgen

CFLAGS = -O -I$(INC) -DVPIX -DNICE -DACCT -DNICEVAL=4

#top#
# Generated by makefile 1.18

MAKEFILE = sh.mk


# MAINS = sh.fl sh
MAINS = sh

OBJECTS =  args.o blok.o cmd.o ctype.o defs.o echo.o error.o expand.o \
	fault.o func.o hash.o msg.o hashserv.o io.o macro.o main.o name.o \
	print.o profile.o pwd.o service.o setbrk.o spname.o stak.o string.o \
	test.o word.o xec.o putenv.o

SOURCES =  args.c blok.c cmd.c ctype.c defs.c echo.c error.c expand.c \
	fault.c func.c hash.c msg.c hashserv.c io.c macro.c main.c name.c \
	print.c profile.c pwd.c service.c setbrk.c spname.c stak.c string.c \
	test.c word.c xec.c putenv.c

ALL:		$(MAINS)

sh:		main.o args.o blok.o cmd.o defs.o error.o fault.o hash.o \
		msg.o hashserv.o io.o name.o print.o service.o stak.o spname.o \
		string.o word.o	xec.o ctype.o echo.o expand.o func.o \
		macro.o	pwd.o setbrk.o test.o putenv.o
	$(CC) $(CFLAGS)  -o sh  main.o args.o blok.o cmd.o defs.o error.o \
	fault.o hash.o msg.o hashserv.o io.o name.o print.o service.o stak.o \
	string.o word.o spname.o xec.o ctype.o echo.o expand.o func.o macro.o \
	pwd.o setbrk.o test.o putenv.o ../lib/libos/sym_mode.o $(LDFLAGS) $(LFLAGS)

sh.fl:	main.c args.c blok.c cmd.c defs.c error.c fault.c hash.c msg.c \
	hashserv.c io.c name.c print.c service.c stak.c string.c word.c \
	spname.c xec.c ctype.c echo.c expand.c func.c macro.c pwd.c setbrk.c \
	test.c putenv.c
	# $(CC) $(CFLAGS) -DRESPID=MAXPID+1 -a addon -nointl -o $@ \
	$(CC) $(CFLAGS) -DRESPID=MAXPID+1 -nointl -o $@ \
	main.c args.c blok.c cmd.c defs.c error.c fault.c hash.c msg.c \
	hashserv.c io.c name.c print.c service.c stak.c string.c word.c \
	spname.c xec.c ctype.c echo.c expand.c func.c macro.c pwd.c setbrk.c \
	test.c putenv.c ../lib/libos/sym_mode.o $(LDFLAGS)
	rm -f $(OBJECTS)

install: ALL
	$(INS) -f $(DIR) sh

args.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


blok.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


cmd.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h sym.h 


ctype.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


defs.o:		 $(INC)/setjmp.h $(SYSINC)/fs/s5param.h \
		 $(SYSINC)/param.h mode.h name.h	


echo.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h ../include/osr.h


error.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


expand.o:	 $(INC)/dirent.h $(INC)/setjmp.h \
		 $(INC)/signal.h $(SYSINC)/dirent.h \
		 $(SYSINC)/signal.h $(SYSINC)/stat.h \
		 $(SYSINC)/types.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


fault.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


func.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


hash.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h hash.h \
		 mac.h mode.h name.h stak.h 


hashserv.o:	 $(INC)/errno.h $(INC)/setjmp.h \
		 $(INC)/signal.h $(SYSINC)/errno.h \
		 $(SYSINC)/signal.h $(SYSINC)/stat.h \
		 $(SYSINC)/types.h brkincr.h ctype.h defs.h hash.h \
		 mac.h mode.h name.h stak.h 


io.o:		 $(INC)/fcntl.h $(INC)/setjmp.h \
		 $(INC)/signal.h $(SYSINC)/fcntl.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h dup.h \
		 mac.h mode.h name.h stak.h 


macro.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h sym.h ../include/osr.h


main.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h $(SYSINC)/stat.h \
		 $(SYSINC)/types.h brkincr.h ctype.h defs.h dup.h \
		 mac.h mode.h name.h stak.h sym.h timeout.h 


msg.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h sym.h 


name.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


print.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/fs/s5param.h $(SYSINC)/param.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h ../include/osr.h


profile.o:	 


pwd.o:		 $(INC)/dirent.h $(SYSINC)/dirent.h \
		 $(SYSINC)/stat.h $(SYSINC)/types.h mac.h \
		 ../include/osr.h


service.o:	 $(INC)/errno.h $(INC)/setjmp.h \
		 $(INC)/signal.h $(SYSINC)/errno.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 
		 $(CC) $(CFLAGS) -I../acct -c service.c


setbrk.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


stak.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h 


string.o:	 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h ../include/sym_mode.h


test.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h $(SYSINC)/stat.h \
		 $(SYSINC)/types.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h ../include/osr.h


word.o:		 $(INC)/setjmp.h $(INC)/signal.h \
		 $(SYSINC)/signal.h brkincr.h ctype.h defs.h mac.h \
		 mode.h	name.h stak.h sym.h ../include/osr.h


xec.o:		 $(INC)/errno.h $(INC)/libgen.h $(INC)/setjmp.h \
		 $(INC)/signal.h $(SYSINC)/errno.h \
		 $(SYSINC)/signal.h $(SYSINC)/times.h \
		 $(SYSINC)/types.h brkincr.h ctype.h defs.h hash.h \
		 mac.h mode.h name.h stak.h sym.h ../include/sym_mode.h \
		 ../include/osr.h

putenv.o:

spname.o :	../include/osr.h
		$(CC) $(CFLAGS) -c spname.c

GLOBALINCS = $(INC)/errno.h $(INC)/setjmp.h \
	$(INC)/signal.h $(SYSINC)/errno.h \
	$(SYSINC)/signal.h $(SYSINC)/times.h \
	$(SYSINC)/types.h 

LOCALINCS = brkincr.h ctype.h defs.h hash.h mac.h mode.h name.h stak.h sym.h

clean:
	rm -f $(OBJECTS)

clobber: clean
	rm -f $(MAINS)

newmakefile:
	makefile -m -f $(MAKEFILE)  -s INC $(INC)
#bottom#

all : ALL

size: ALL
	$(SIZE) $(MAINS)

strip: ALL
	$(STRIP) $(MAINS)

#	These targets are useful but optional

partslist:
	@echo $(MAKEFILE) $(SOURCES) $(LOCALINCS)  |  tr ' ' '\012'  |  sort

productdir:
	@echo $(DIR) | tr ' ' '\012' | sort

product:
	@echo $(MAINS)  |  tr ' ' '\012'  | \
	sed 's;^;$(DIR)/;'

srcaudit:
	@fileaudit $(MAKEFILE) $(LOCALINCS) $(SOURCES) -o $(OBJECTS) $(MAINS)
