#ident	"@(#)ksh93:include/ast/magic.h	1.1"
/***************************************************************
*                                                              *
*                      AT&T - PROPRIETARY                      *
*                                                              *
*         THIS IS PROPRIETARY SOURCE CODE LICENSED BY          *
*                          AT&T CORP.                          *
*                                                              *
*                Copyright (c) 1995 AT&T Corp.                 *
*                     All Rights Reserved                      *
*                                                              *
*           This software is licensed by AT&T Corp.            *
*       under the terms and conditions of the license in       *
*       http://www.research.att.com/orgs/ssr/book/reuse        *
*                                                              *
*               This software was created by the               *
*           Software Engineering Research Department           *
*                    AT&T Bell Laboratories                    *
*                                                              *
*               For further information contact                *
*                     gsf@research.att.com                     *
*                                                              *
***************************************************************/

/* : : generated by proto : : */
                  
/*
 * Glenn Fowler
 * AT&T Bell Laboratories
 *
 * magic interface definitions
 */

#ifndef _MAGIC_H
#if !defined(__PROTO__)
#include <prototyped.h>
#endif

#define _MAGIC_H

#include <ls.h>

#ifndef MAGIC_FILE
#define MAGIC_FILE	"lib/file/magic"
#endif

#define MAGIC_PHYSICAL	(1<<0)		/* don't follow symlinks	*/
#define MAGIC_STAT	(1<<1)		/* magictype stat already done	*/
#define MAGIC_VERBOSE	(1<<2)		/* verbose magic file errors	*/

#define MAGIC_USER	(1<<8)		/* first user flag bit		*/

typedef struct
{
	unsigned long	flags;		/* MAGIC_* flags		*/

#ifdef	_MAGIC_PRIVATE_
	_MAGIC_PRIVATE_
#endif

} Magic_t;

extern __MANGLE__ Magic_t*		magicopen __PROTO__((unsigned long));
extern __MANGLE__ int		magicload __PROTO__((Magic_t*, const char*, unsigned long));
extern __MANGLE__ int		magiclist __PROTO__((Magic_t*, Sfio_t*));
extern __MANGLE__ char*		magictype __PROTO__((Magic_t*, const char*, struct stat*));
extern __MANGLE__ void		magicclose __PROTO__((Magic_t*));

#endif
