
/* : : generated by proto : : */
/* : : generated from features/signal.c by iffe version 10/01/94 : : */
#ifndef _def_signal_ast
#if !defined(__PROTO__)
#if defined(__STDC__) || defined(__cplusplus) || defined(_proto) || defined(c_plusplus)
#if defined(__cplusplus)
#define __MANGLE__	"C"
#else
#define __MANGLE__
#endif
#define __STDARG__
#define __PROTO__(x)	x
#define __OTORP__(x)
#define __PARAM__(n,o)	n
#if !defined(__STDC__) && !defined(__cplusplus)
#if !defined(c_plusplus)
#define const
#endif
#define signed
#define void		int
#define volatile
#define __V_		char
#else
#define __V_		void
#endif
#else
#define __PROTO__(x)	()
#define __OTORP__(x)	x
#define __PARAM__(n,o)	o
#define __MANGLE__
#define __V_		char
#define const
#define signed
#define void		int
#define volatile
#endif
#if defined(__cplusplus) || defined(c_plusplus)
#define __VARARG__	...
#else
#define __VARARG__
#endif
#if defined(__STDARG__)
#define __VA_START__(p,a)	va_start(p,a)
#else
#define __VA_START__(p,a)	va_start(p)
#endif
#endif

#define _def_signal_ast	1
                  
#define SIG_MAX	34

static const char* const	sig_name[] =
{
	"0",
	"HUP",
	"INT",
	"QUIT",
	"ILL",
	"TRAP",
	"IOT",
	"EMT",
	"FPE",
	"KILL",
	"BUS",
	"SEGV",
	"SYS",
	"PIPE",
	"ALRM",
	"TERM",
	"USR1",
	"USR2",
	"CHLD",
	"PWR",
	"WINCH",
	"URG",
	"IO",
	"STOP",
	"TSTP",
	"CONT",
	"TTIN",
	"TTOU",
	"VTALRM",
	"PROF",
	"XCPU",
	"XFSZ",
	"WAITING",
	"LWP",
	"AIO",
	0
};

static const char* const	sig_text[] =
{
	"Signal 0",
	"Hangup",
	"Interrupt",
	"Quit",
	"Illegal instruction",
	"Trace trap",
	"IOT trap",
	"EMT trap",
	"Floating exception",
	"Killed",
	"Bus error",
	"Memory fault",
	"Bad system call",
	"Broken pipe",
	"Alarm call",
	"Terminated",
	"User signal 1",
	"User signal 2",
	"Child status change",
	"Power fail",
	"Window change",
	"Urgent IO",
	"IO possible",
	"Stopped (signal)",
	"Stopped",
	"Stopped process continued",
	"Stopped (tty input)",
	"Stopped (tty output)",
	"Virtual timer alarm",
	"Profile timer alarm",
	"CPU time limit",
	"File size limit",
	"All threads blocked",
	"Thread event",
	"Asynchronous I/O",
	0
};
#endif
