
		Test Report and Metrics for mailadmin GUI

We found 331 bugs in 9000 lines of TCL source, we achieved 96% branch
coverage during testing (the last four percent are waiting on a BL8 bug fix).

110 bugs were found and fixed.
331 changes were caused by the fixes.
9000 lines of TCL source code were tested.
4000 lines of test suite code (3500 sh and 500 C) were developed.
160 test cases were developed.
1364 branches existed.
1316 branches were covered (tested).
96% branch coverage achieved, fully automated and semi-automated test suites.
12 bugs/KLOC (changes per thousand lines of code) were discovered.
37 changes/KLOC (changes per thousand lines of code) were done.

7 weeks were spent on the design.
7 weeks were spent to implement the design (3 front-end and 4 back-end).
2.5 weeks of effort were spent in testing (developing the suites and
	fixing the bugs found).
The resultant test suite can be executed in a half-hour for the automated
part and 45 minutes for the semi-automated part on a P5/90.

Our strategy was to develop a set of feature tests, and then use branch
coverage to develop additional test cases based on branches missed by
the feature tests.

We estimate that doing only the feature testing would have taken one week
of test development time and would have found just over half of the bugs.
Branch coverage based test cases took an additional week and a half to
develop and found the rest of the bugs (40% of the total).

We had a number of interesting experiences.  The bug taxonomy and bug rate
did not change as we progressively covered the branches.  We found legitimate
bugs that a user could run into in the last 2% of the branches covered
and one of them was serious.  Branch coverage also discovered
quite a bit of "dead" code that was not used that we either removed
or commented out.

In summary we spent about 2.5 times as much time as we would have
spent in non-riguorous testing and found almost twice as many bugs.

How these metrics were obtained:

The source before and after testing was diffed.  Every difference was
counted as well as logical bugs.  SID 4 v.s. 5 (BL7 v.s. BL8) were diffed.

The TCL files in lib were not counted as source or measured for coverage
as they are considered a separate API and are tested elsewhere.

We did not count the development time of the sendmail.cf file
(which was 4 weeks) or the testing of it since the test suite
remains to be developed (we will call it the sendmail test suite).

We developed our own branch coverage tool as well as a preprocessor
so that test hooks could be inserted into the code where needed.

The time measurements count the first week of so-called testing
where unimplemented features were discovered and implementation
continued as testing.  But the bug counts, diffs, and KLOC reflect
the differences after unimplemented features were completed.
