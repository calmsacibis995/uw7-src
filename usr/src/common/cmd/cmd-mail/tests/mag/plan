#ident "@(#)plan	11.1"

Mail Admin Gui - test plan

The fully automated test is run to achieve
100% statement coverage on the command line and back end files:
	cmd.tcl ma_cf.tcl ma_sendmail.tcl ma_ms1.tcl

Semi-automated tests are run on the front end (the GUI).  Semi-automation
means that scripts do the set up and comparison of files but
the GUI steps are executed manually.

We have the network dependent set of test cases in a separate test script.
These tests require a second machine running the software to be available.

We are attempting to achieve a reproducible set of test cases
not subject to human error (or at least human errors will be caught
so the test can be repeated) while still stuck in the manual paradigm.

Since the expected outcome of semi-automated tests is recorded for
automated verification we eliminate test pilot error.  Coverage data is
also used to check for pilot error.

Test high-level flow.
o - set all properties to defaults to obtain start state.
o - set all properties to non-default settings
o - test related state changes, one property affects another.
o - save this state as non-default.
o - from non-default state, set all properties to default (one at a time).
o - from non-default state, set folders to defaults, defaulting items inside.

We have a primitive branch coverage tool for tcl that is compatible with
mag and it's children, it is expected that the instrumented version
will be run during testing, and test cases added as branches
that are not covered are found.

Automated tests:

Run the script "cmd" as root to invoke the automated tests.
The cmd script expects the test version (mailadmint) to be
installed in /etc/mail/admin/mailadmin.  The test case documentation for cmd
is in cmd.plan

Semi-Automated tests:

Run the script "mag" as root in a terminal window to invoke the semi-automated
tests.  It will start up the mail admin GUI for each test case.
The file mag.plan documents for the tester what buttons to push for each test.

Remote tests:

Run the script "rmt" as root in a terminal window to invoke the semi-automated
remote or network tests.  This script sensitizes all branches in the
host.tcl file.  Documentation is in rmt.plan.
